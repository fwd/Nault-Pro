{"version":3,"file":"main.js","mappings":"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EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,2BAA2B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,4BAA4B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,2BAA2B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,4BAA4B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,4BAA4B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,4BAA4B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,4BAA4B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,4BAA4B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,4BAA4B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,2BAA2B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,2BAA2B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,4BAA4B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,4BAA4B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,4BAA4B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,4BAA4B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,4BAA4B,EAAE,4BAA4B,IAAI,6BAA6B,EAAE,4BAA4B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,4BAA4B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,4BAA4B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,4BAA4B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,4BAA4B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,2BAA2B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,4BAA4B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,4BAA4B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,4BAA4B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,4BAA4B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,4BAA4B,EAAE,6BAA6B,EAAE,8BAA8B,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,6BAA6B,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,8BAA8B,mBAAmB,qBAAqB,iBAAiB,YAAY,WAAW,mEAAmE,gBAAgB,oCAAoC,2JAA2J,4BAA4B,gCAAgC,cAAc,IAAI,KAAK,KAAK,YAAY,IAAI,gCAAgC,uBAAuB,0BAA0B,YAAY,WAAW,iBAAiB,SAAS,6BAA6B,wDAAwD,sBAAsB,WAAW,6HAA6H,YAAY,KAAK,WAAW,SAAS,yBAAyB,SAAS,MAAM,+FAA+F,KAAK,uEAAuE,sJAAsJ,SAAS,yBAAyB,iBAAiB,EAAE,sDAAsD,kDAAkD,2BAA2B,2EAA2E,kBAAkB,YAAY,WAAW,aAAa,8BAA8B,q1BAAq1B,SAAS,uBAAuB,uCAAuC,yBAAyB,kBAAkB,YAAY,kBAAkB;;;;;;;;;;;;;;;ACAz4kC;AACf,oBAAoB,qBAAuB;AAC3C;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;AC9BA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/account-details/account-details.component.ts","./src/app/components/account-details/account-details.component.html","./src/app/components/accounts/accounts.component.ts","./src/app/components/accounts/accounts.component.html","./src/app/components/address-book/address-book.component.ts","./src/app/components/address-book/address-book.component.html","./src/app/components/ai/ai.component.ts","./src/app/components/ai/ai.component.html","./src/app/components/change-rep-widget/change-rep-widget.component.html","./src/app/components/change-rep-widget/change-rep-widget.component.ts","./src/app/components/configure-app/configure-app.component.ts","./src/app/components/configure-app/configure-app.component.html","./src/app/components/configure-wallet/configure-wallet.component.ts","./src/app/components/configure-wallet/configure-wallet.component.html","./src/app/components/converter/converter.component.ts","./src/app/components/converter/converter.component.html","./src/app/components/donate/donate.component.ts","./src/app/components/donate/donate.component.html","./src/app/components/helpers/nano-account-id/nano-account-id.component.ts","./src/app/components/helpers/nano-account-id/nano-account-id.component.html","./src/app/components/helpers/nano-identicon/nano-identicon.component.ts","./src/app/components/helpers/nano-identicon/nano-identicon.component.html","./src/app/components/helpers/nano-transaction-mobile/nano-transaction-mobile.component.ts","./src/app/components/helpers/nano-transaction-mobile/nano-transaction-mobile.component.html","./src/app/components/import-address-book/import-address-book.component.html","./src/app/components/import-address-book/import-address-book.component.ts","./src/app/components/import-wallet/import-wallet.component.ts","./src/app/components/import-wallet/import-wallet.component.html","./src/app/components/install-widget/install-widget.component.ts","./src/app/components/install-widget/install-widget.component.html","./src/app/components/keygenerator/keygenerator.component.ts","./src/app/components/keygenerator/keygenerator.component.html","./src/app/components/manage-representatives/manage-representatives.component.ts","./src/app/components/manage-representatives/manage-representatives.component.html","./src/app/components/manage-wallet/manage-wallet.component.ts","./src/app/components/manage-wallet/manage-wallet.component.html","./src/app/components/multisig/multisig.component.html","./src/app/components/multisig/multisig.component.ts","./src/app/components/notifications/notifications.component.ts","./src/app/components/notifications/notifications.component.html","./src/app/components/qr-generator/qr-generator.component.ts","./src/app/components/qr-generator/qr-generator.component.html","./src/app/components/qr-modal/qr-modal.component.ts","./src/app/components/qr-modal/qr-modal.component.html","./src/app/components/qr-scan/qr-scan.component.ts","./src/app/components/qr-scan/qr-scan.component.html","./src/app/components/receive/receive.component.ts","./src/app/components/receive/receive.component.html","./src/app/components/remote-signing/remote-signing.component.ts","./src/app/components/remote-signing/remote-signing.component.html","./src/app/components/representatives/representatives.component.ts","./src/app/components/representatives/representatives.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/components/send/send.component.ts","./src/app/components/send/send.component.html","./src/app/components/sign/sign.component.ts","./src/app/components/sign/sign.component.html","./src/app/components/social/social.component.ts","./src/app/components/social/social.component.html","./src/app/components/sweeper/sweeper.component.ts","./src/app/components/sweeper/sweeper.component.html","./src/app/components/transaction-details/transaction-details.component.ts","./src/app/components/transaction-details/transaction-details.component.html","./src/app/components/wallet-widget/wallet-widget.component.ts","./src/app/components/wallet-widget/wallet-widget.component.html","./src/app/pipes/account.pipe.ts","./src/app/pipes/amount-split.pipe.ts","./src/app/pipes/currency-symbol.pipe.ts","./src/app/pipes/fiat.pipe.ts","./src/app/pipes/no-padding-zeros.pipe.ts","./src/app/pipes/rai.pipe.ts","./src/app/pipes/squeeze.pipe.ts","./src/app/services/address-book.service.ts","./src/app/services/api.service.ts","./src/app/services/app-settings.service.ts","./src/app/services/deeplink.service.ts","./src/app/services/desktop.service.ts","./src/app/services/index.ts","./src/app/services/ledger.service.ts","./src/app/services/modal.service.ts","./src/app/services/musig.service.ts","./src/app/services/nano-block.service.ts","./src/app/services/ninja.service.ts","./src/app/services/node.service.ts","./src/app/services/notification.service.ts","./src/app/services/pow.service.ts","./src/app/services/price.service.ts","./src/app/services/qr-modal.service.ts","./src/app/services/remote-sign.service.ts","./src/app/services/representative.service.ts","./src/app/services/util.service.ts","./src/app/services/wallet.service.ts","./src/app/services/websocket.service.ts","./src/app/services/work-pool.service.ts","./src/app/transloco/transloco-root.module.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts","./src/assets/lib/nanoidenticons.min.js","./src/assets/lib/cpupow.js","./src/assets/i18n|lazy|/^\\.\\/.*\\.json$/|chunkName: translation|groupOptions: {}|namespace object","ignored|/Users/esteban/Desktop/nault-pro/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams|util","ignored|/Users/esteban/Desktop/nault-pro/node_modules/hash-base/node_modules/readable-stream/lib|util","ignored|/Users/esteban/Desktop/nault-pro/node_modules/nanocurrency/dist|crypto","ignored|/Users/esteban/Desktop/nault-pro/node_modules/nanocurrency/dist|fs","ignored|/Users/esteban/Desktop/nault-pro/node_modules/nanocurrency/dist|path","ignored|/Users/esteban/Desktop/nault-pro/node_modules/nanocurrency/dist|util","ignored|/Users/esteban/Desktop/nault-pro/node_modules/readable-stream/lib/internal/streams|util","ignored|/Users/esteban/Desktop/nault-pro/node_modules/readable-stream/lib|util"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {WelcomeComponent} from './welcome/welcome.component';\nimport {ConfigureWalletComponent} from './components/configure-wallet/configure-wallet.component';\nimport {AccountsComponent} from './components/accounts/accounts.component';\nimport {SearchComponent} from './components/search/search.component';\nimport {DonateComponent} from './components/donate/donate.component';\nimport {AiComponent} from './components/ai/ai.component';\nimport {SocialComponent} from './components/social/social.component';\nimport {SendComponent} from './components/send/send.component';\nimport {AddressBookComponent} from './components/address-book/address-book.component';\nimport {ReceiveComponent} from './components/receive/receive.component';\nimport {ManageWalletComponent} from './components/manage-wallet/manage-wallet.component';\nimport {ConfigureAppComponent} from './components/configure-app/configure-app.component';\nimport {AccountDetailsComponent} from './components/account-details/account-details.component';\nimport {TransactionDetailsComponent} from './components/transaction-details/transaction-details.component';\nimport {ImportWalletComponent} from './components/import-wallet/import-wallet.component';\nimport { ImportAddressBookComponent } from './components/import-address-book/import-address-book.component';\nimport {RepresentativesComponent} from './components/representatives/representatives.component';\nimport {SweeperComponent} from './components/sweeper/sweeper.component';\nimport {QrScanComponent} from './components/qr-scan/qr-scan.component';\nimport {SignComponent} from './components/sign/sign.component';\nimport {RemoteSigningComponent} from './components/remote-signing/remote-signing.component';\nimport {ConverterComponent} from './components/converter/converter.component';\nimport {QrGeneratorComponent} from './components/qr-generator/qr-generator.component';\nimport { environment } from '../environments/environment';\nimport {ManageRepresentativesComponent} from './components/manage-representatives/manage-representatives.component';\nimport { MultisigComponent } from './components/multisig/multisig.component';\nimport { KeygeneratorComponent } from './components/keygenerator/keygenerator.component';\n\nconst routes: Routes = [\n  { path: '', component: WelcomeComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'donate', component: DonateComponent },\n  { path: 'ai', component: AiComponent },\n  { path: 'social', component: SocialComponent },\n  { path: 'accounts', component: AccountsComponent },\n  { path: 'account/:account', component: AccountDetailsComponent },\n  { path: 'address-book', component: AddressBookComponent },\n  { path: 'configure-wallet', component: ConfigureWalletComponent },\n  { path: 'configure-app', component: ConfigureAppComponent },\n  { path: 'import-address-book', component: ImportAddressBookComponent },\n  { path: 'import-wallet', component: ImportWalletComponent },\n  { path: 'manage-wallet', component: ManageWalletComponent },\n  { path: 'qr-scan', component: QrScanComponent },\n  { path: 'send', component: SendComponent },\n  { path: 'receive', component: ReceiveComponent },\n  { path: 'representatives', component: RepresentativesComponent },\n  { path: 'manage-representatives', component: ManageRepresentativesComponent },\n  { path: 'transaction/:transaction', component: TransactionDetailsComponent },\n  { path: 'sweeper', component: SweeperComponent },\n  { path: 'sign', component: SignComponent },\n  { path: 'remote-signing', component: RemoteSigningComponent },\n  { path: 'multisig', component: MultisigComponent },\n  { path: 'keygenerator', component: KeygeneratorComponent },\n  { path: 'converter', component: ConverterComponent },\n  { path: 'qr-generator', component: QrGeneratorComponent },\n];\n\n@NgModule({\n  imports: [\n    // On the desktop apps, use hashes so it works properly using only index.html\n    RouterModule.forRoot(routes, { useHash: environment.desktop, relativeLinkResolution: 'legacy' }),\n  ],\n  declarations: [],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n","import {Component, ElementRef, HostListener, OnInit, ViewChild, Renderer2} from '@angular/core';\nimport {WalletService} from './services/wallet.service';\nimport {AddressBookService} from './services/address-book.service';\nimport {AppSettingsService} from './services/app-settings.service';\nimport {WebsocketService} from './services/websocket.service';\nimport {PriceService} from './services/price.service';\nimport {UtilService} from './services/util.service';\nimport {NotificationService} from './services/notification.service';\nimport {WorkPoolService} from './services/work-pool.service';\nimport {Router} from '@angular/router';\nimport {SwUpdate} from '@angular/service-worker';\nimport {RepresentativeService} from './services/representative.service';\nimport {NodeService} from './services/node.service';\nimport { DesktopService, LedgerService } from './services';\nimport { environment } from 'environments/environment';\nimport { DeeplinkService } from './services/deeplink.service';\nimport { TranslocoService } from '@ngneat/transloco';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public walletService: WalletService,\n    private addressBook: AddressBookService,\n    public settings: AppSettingsService,\n    private websocket: WebsocketService,\n    private notifications: NotificationService,\n    public nodeService: NodeService,\n    private representative: RepresentativeService,\n    private router: Router,\n    public updates: SwUpdate,\n    private workPool: WorkPoolService,\n    public price: PriceService,\n    private util: UtilService,\n    private desktop: DesktopService,\n    private ledger: LedgerService,\n    private renderer: Renderer2,\n    private deeplinkService: DeeplinkService,\n    private translate: TranslocoService) {\n      router.events.subscribe(() => {\n        this.closeNav();\n      });\n    }\n\n  @ViewChild('selectButton') selectButton: ElementRef;\n  @ViewChild('accountsDropdown') accountsDropdown: ElementRef;\n\n  wallet = this.walletService.wallet;\n  node = this.nodeService.node;\n  nanoPrice = this.price.price;\n  fiatTimeout = 5 * 60 * 1000; // Update fiat prices every 5 minutes\n  inactiveSeconds = 0;\n  innerWidth = 0;\n  innerHeight = 0;\n  innerHeightWithoutMobileBar = 0;\n  navExpanded = false;\n  navAnimating = false;\n  showAccountsDropdown = false;\n  canToggleLightMode = true;\n  searchData = '';\n  isConfigured = this.walletService.isConfigured;\n  donationAccount = environment.donationAddress;\n\n  @HostListener('window:resize', ['$event']) onResize (e) {\n    this.onWindowResize(e.target);\n  }\n\n  @HostListener('document:mousedown', ['$event']) onGlobalClick(event): void {\n    if (\n            ( this.selectButton.nativeElement.contains(event.target) === false )\n          && ( this.accountsDropdown.nativeElement.contains(event.target) === false )\n      ) {\n        this.showAccountsDropdown = false;\n    }\n  }\n\n  async ngOnInit() {\n    this.onWindowResize(window);\n    this.settings.loadAppSettings();\n\n    this.updateAppTheme();\n\n    // New for v19: Patch saved xrb_ prefixes to nano_\n    await this.patchXrbToNanoPrefixData();\n\n    // set translation language\n    this.translate.setActiveLang(this.settings.settings.language);\n\n    this.addressBook.loadAddressBook();\n    this.workPool.loadWorkCache();\n\n    await this.walletService.loadStoredWallet();\n    // Subscribe to any transaction tracking\n    for (const entry of this.addressBook.addressBook) {\n      if (entry.trackTransactions) {\n        this.walletService.trackAddress(entry.account);\n      }\n    }\n\n    // Navigate to accounts page if there is wallet, but only if coming from home. On desktop app the path ends with index.html\n    if (this.walletService.isConfigured() && (window.location.pathname === '/' || window.location.pathname.endsWith('index.html'))) {\n      if (this.wallet.selectedAccountId) {\n        this.router.navigate([`account/${this.wallet.selectedAccountId}`], { queryParams: {'compact': 1}, replaceUrl: true });\n      } else {\n        this.router.navigate(['accounts'], { replaceUrl: true });\n      }\n    }\n\n    // update selected account object with the latest balance, pending, etc\n    if (this.wallet.selectedAccountId) {\n      const currentUpdatedAccount = this.wallet.accounts.find(a => a.id === this.wallet.selectedAccountId);\n      this.wallet.selectedAccount = currentUpdatedAccount;\n    }\n\n    await this.walletService.reloadBalances();\n\n    // Workaround fix for github pages when Nault is refreshed (or externally linked) and there is a subpath for example to the send screen.\n    // This data is saved from the 404.html page\n    const path = localStorage.getItem('path');\n\n    if (path) {\n      const search = localStorage.getItem('query'); // ?param=value\n      const fragment = localStorage.getItem('fragment'); // #value\n      localStorage.removeItem('path');\n      localStorage.removeItem('query');\n      localStorage.removeItem('fragment');\n\n      if (search && search.length) {\n        const queryParams = {};\n        const urlSearch = new URLSearchParams(search);\n        urlSearch.forEach(function(value, key) {\n          queryParams[key] = value;\n        });\n        this.router.navigate([path], { queryParams: queryParams, replaceUrl: true });\n      } else if (fragment && fragment.length) {\n        this.router.navigate([path], { fragment: fragment, replaceUrl: true });\n      } else {\n        this.router.navigate([path], { replaceUrl: true });\n      }\n    }\n\n    this.websocket.connect();\n\n    this.representative.loadRepresentativeList();\n\n    // If the wallet is locked and there is a pending balance, show a warning to unlock the wallet\n    // (if not receive priority is set to manual)\n    if (this.wallet.locked && this.walletService.hasPendingTransactions() && this.settings.settings.pendingOption !== 'manual') {\n      this.notifications.sendWarning(`New incoming transaction(s) - Unlock the wallet to receive`, { length: 10000, identifier: 'pending-locked' });\n    } else if (this.walletService.hasPendingTransactions() && this.settings.settings.pendingOption === 'manual') {\n      this.notifications.sendWarning(`Incoming transaction(s) found - Set to be received manually`, { length: 10000, identifier: 'pending-locked' });\n    }\n\n    // When the page closes, determine if we should lock the wallet\n    window.addEventListener('beforeunload',  (e) => {\n      if (this.wallet.locked) return; // Already locked, nothing to worry about\n      this.walletService.lockWallet();\n    });\n    window.addEventListener('unload',  (e) => {\n      if (this.wallet.locked) return; // Already locked, nothing to worry about\n      this.walletService.lockWallet();\n    });\n\n    // handle deeplinks\n    this.desktop.on('deeplink', (e, deeplink) => {\n      if (!this.deeplinkService.navigate(deeplink)) this.notifications.sendWarning('This URI has an invalid address.', { length: 5000 });\n    });\n    this.desktop.send('deeplink-ready');\n\n    // Notify user if service worker update is available\n    this.updates.available.subscribe((event) => {\n      console.log(`SW update available. Current: ${event.current.hash}. New: ${event.available.hash}`);\n      this.notifications.sendInfo(\n        'An update was installed in the background and will be applied on next launch. <a href=\"#\" (click)=\"applySwUpdate()\">Apply immediately</a>',\n        { length: 10000 }\n      );\n    });\n\n    // Notify user after service worker was updated\n    this.updates.activated.subscribe((event) => {\n      console.log(`SW update successful. Current: ${event.current.hash}`);\n      this.notifications.sendSuccess('Nault was updated successfully.');\n    });\n\n    // Check how long the wallet has been inactive, and lock it if it's been too long\n    setInterval(() => {\n      this.inactiveSeconds += 1;\n      if (!this.settings.settings.lockInactivityMinutes) return; // Do not lock on inactivity\n      if (this.wallet.locked || !this.wallet.password) return;\n\n      // Determine if we have been inactive for longer than our lock setting\n      if (this.inactiveSeconds >= this.settings.settings.lockInactivityMinutes * 60) {\n        this.walletService.lockWallet();\n        this.notifications.sendSuccess(`Wallet locked after ${this.settings.settings.lockInactivityMinutes} minutes of inactivity`);\n      }\n    }, 1000);\n\n    try {\n      if (!this.settings.settings.serverAPI) return;\n      await this.updateFiatPrices();\n    } catch (err) {\n      this.notifications.sendWarning(`There was an issue retrieving latest nano price.  Ensure your AdBlocker is disabled on this page then reload to see accurate FIAT values.`, { length: 0, identifier: `price-adblock` });\n    }\n  }\n\n  onWindowResize(windowObject) {\n    this.innerWidth = windowObject.innerWidth;\n    this.innerHeight = windowObject.innerHeight;\n\n    const isMobileBarVisible = (this.innerWidth < 940);\n\n    if (isMobileBarVisible === true) {\n      this.innerHeightWithoutMobileBar = this.innerHeight - 50;\n    } else {\n      this.innerHeightWithoutMobileBar = this.innerHeight;\n    }\n  }\n\n  /*\n    This is important as it looks through saved data using hardcoded xrb_ prefixes\n    (Your wallet, address book, rep list, etc) and updates them to nano_ prefix for v19 RPC\n   */\n  async patchXrbToNanoPrefixData() {\n    // If wallet is version 2, data has already been patched.  Otherwise, patch all data\n    if (this.settings.settings.walletVersion >= 2) return;\n\n    await this.walletService.patchOldSavedData(); // Change saved xrb_ addresses to nano_\n    this.addressBook.patchXrbPrefixData();\n    this.representative.patchXrbPrefixData();\n\n    this.settings.setAppSetting('walletVersion', 2); // Update wallet version so we do not patch in the future.\n  }\n\n  applySwUpdate() {\n    this.updates.activateUpdate();\n  }\n\n  toggleNav() {\n    this.navExpanded = !this.navExpanded;\n    this.onNavExpandedChange();\n  }\n\n  closeNav() {\n    if (this.navExpanded === false) {\n      return;\n    }\n\n    this.navExpanded = false;\n    this.onNavExpandedChange();\n  }\n\n  onNavExpandedChange() {\n    this.navAnimating = true;\n    setTimeout(() => { this.navAnimating = false; }, 350);\n  }\n\n  toggleLightMode() {\n    if (this.canToggleLightMode === false) {\n      return;\n    }\n\n    this.canToggleLightMode = false;\n    setTimeout(() => { this.canToggleLightMode = true; }, 300);\n\n    this.settings.setAppSetting('lightModeEnabled', !this.settings.settings.lightModeEnabled);\n    this.updateAppTheme();\n  }\n\n  updateAppTheme() {\n    if (this.settings.settings.lightModeEnabled) {\n      this.renderer.addClass(document.body, 'light-mode');\n      this.renderer.removeClass(document.body, 'dark-mode');\n    } else {\n      this.renderer.addClass(document.body, 'dark-mode');\n      this.renderer.removeClass(document.body, 'light-mode');\n    }\n  }\n\n  toggleAccountsDropdown() {\n    if (this.showAccountsDropdown === true) {\n      this.showAccountsDropdown = false;\n      return;\n    }\n\n    this.showAccountsDropdown = true;\n    this.accountsDropdown.nativeElement.scrollTop = 0;\n  }\n\n  selectAccount(account) {\n    // note: account is null when user is switching to 'Total Balance'\n    this.wallet.selectedAccountId = account ? account.id : null;\n    this.wallet.selectedAccount = account;\n    this.wallet.selectedAccount$.next(account);\n    this.toggleAccountsDropdown();\n    this.walletService.saveWalletExport();\n  }\n\n  performSearch() {\n    const searchData = this.searchData.trim();\n    if (!searchData.length) return;\n\n    const isValidNanoAccount = (\n        ( searchData.startsWith('xrb_') || searchData.startsWith('nano_') )\n      && this.util.account.isValidAccount(searchData)\n    );\n\n    if (isValidNanoAccount === true) {\n      this.router.navigate(['account', searchData]);\n      this.searchData = '';\n      return;\n    }\n\n    const isValidBlockHash = this.util.nano.isValidHash(searchData);\n\n    if (isValidBlockHash === true) {\n      const blockHash = searchData.toUpperCase();\n      this.router.navigate(['transaction', blockHash]);\n      this.searchData = '';\n      return;\n    }\n\n    this.notifications.sendWarning(`Invalid nano address or block hash! Please double check your input`);\n  }\n\n  updateIdleTime() {\n    this.inactiveSeconds = 0; // Action has happened, reset the inactivity timer\n  }\n\n  retryConnection() {\n    if (!this.settings.settings.serverAPI) {\n      this.notifications.sendInfo(`Wallet server settings is set to offline mode. Please change server first!`);\n      return;\n    }\n    this.walletService.reloadBalances();\n    this.notifications.sendInfo(`Attempting to reconnect to nano node`);\n  }\n\n  async updateFiatPrices() {\n    const displayCurrency = this.settings.getAppSetting(`displayCurrency`) || 'USD';\n    await this.price.getPrice(displayCurrency);\n    this.walletService.reloadFiatBalances();\n    setTimeout(() => this.updateFiatPrices(), this.fiatTimeout);\n  }\n}\n","<div uk-grid class=\"app\" (mousemove)=\"updateIdleTime()\" (keypress)=\"updateIdleTime()\" [style.height]=\"( innerHeight + 'px' )\" style=\"overflow-y: hidden;\">\n  <div class=\"uk-width-1-1\" style=\"position: relative; overflow-y: hidden;\">\n\n    <!-- Mobile top bar -->\n    <div uk-grid class=\"mobile-top-bar uk-background-primary\">\n      <div class=\"uk-width-1-2 button-column\">\n        <div class=\"nav-button\" (click)=\"toggleNav()\">\n          <span uk-icon=\"icon: menu;\"></span>\n          <span class=\"app-name\"><b>Nano</b> Pro</span>\n        </div>\n      </div>\n      <div class=\"uk-width-1-2\" style=\"text-align: right;\">\n      </div>\n    </div>\n\n    <!-- Accounts dropdown -->\n    <div #accountsDropdown [class]=\"[ 'accounts-dropdown', showAccountsDropdown ? 'visible' : 'hidden' ]\">\n      <div class=\"header\">Currently Selected</div>\n      <div class=\"account active\" *ngIf=\"wallet.selectedAccount !== null\"> <!-- active nano_ account -->\n        <div class=\"name-column\">\n          <div class=\"name\">{{ wallet.selectedAccount.addressBookName ? wallet.selectedAccount.addressBookName : (('general.account' | transloco) + ' #' + wallet.selectedAccount.index) }}</div>\n          <div class=\"address nano-address-monospace\">{{ wallet.selectedAccount.id }}</div>\n        </div>\n        <div class=\"balance-column\">\n          <ng-container *ngIf=\"(walletService.wallet.updatingBalance === false) else balanceLoading\">\n            <div class=\"balance primary\">\n              {{ wallet.selectedAccount.balance | rai: 'mnano,true' | amountsplit: 0 }}{{ wallet.selectedAccount.balance | rai: 'mnano,true' | amountsplit: 1 }} XNO\n            </div>\n            <div class=\"balance converted\">{{ wallet.selectedAccount.balanceFiat | fiat: settings.settings.displayCurrency }}</div>\n          </ng-container>\n          <ng-template #balanceLoading>\n            <div class=\"balance loading\">\n              <div uk-spinner=\"ratio: 0.5;\"></div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n      <div [class]=\"[ 'account', (wallet.selectedAccount === null) ? 'active' : 'inactive' ]\" (click)=\"selectAccount(null)\"> <!-- active/inactive total balance -->\n        <div class=\"name-column\">\n          <div class=\"name\">Balance</div>\n          <div class=\"address\"> </div>\n        </div>\n        <div class=\"balance-column\">\n          <ng-container *ngIf=\"(walletService.wallet.updatingBalance === false) else balanceLoading\">\n            <div class=\"balance primary\">{{ wallet.balance | rai: 'mnano,true' | amountsplit: 0 }}{{ wallet.balance | rai: 'mnano,true' | amountsplit: 1 }} XNO</div>\n            <div class=\"balance converted\">{{ wallet.balanceFiat | fiat: settings.settings.displayCurrency }}</div>\n          </ng-container>\n          <ng-template #balanceLoading>\n            <div class=\"balance loading\">\n              <div uk-spinner=\"ratio: 0.5;\"></div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n      <ng-container *ngFor=\"let account of wallet.accounts\"> <!-- inactive accounts -->\n        <div class=\"account inactive\" (click)=\"selectAccount(account)\" *ngIf=\"( (wallet.selectedAccount === null) || (wallet.selectedAccount.id !== account.id) )\">\n          <div class=\"name-column\">\n            <div class=\"name\">{{ account.addressBookName ? account.addressBookName : (('general.account' | transloco) + ' #' + account.index) }}</div>\n            <div class=\"address nano-address-monospace\">{{ account.id }}</div>\n          </div>\n          <div class=\"balance-column\">\n            <ng-container *ngIf=\"(walletService.wallet.updatingBalance === false) else balanceLoading\">\n              <div class=\"balance primary\">\n                <span class=\"incoming-label\" *ngIf=\"account.pending.gt(0)\">\n                  <span class=\"text-snippet\">{{ 'general.new' | transloco }}</span>\n                  <span class=\"text-full\">+{{ account.pending | rai: 'mnano,true' | amountsplit: 0 }}{{ account.pending | rai: 'mnano,true' | amountsplit: 1 }} XNO</span>\n                </span>\n                {{ account.balance | rai: 'mnano,true' | amountsplit: 0 }}{{ account.balance | rai: 'mnano,true' | amountsplit: 1 }} XNO\n              </div>\n              <div class=\"balance converted\">{{ account.balanceFiat | fiat: settings.settings.displayCurrency }}</div>\n            </ng-container>\n            <ng-template #balanceLoading>\n              <div class=\"balance loading\">\n                <div uk-spinner=\"ratio: 0.5;\"></div>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <!-- Main content container-->\n    <div\n      uk-grid\n      class=\"app-grid\"\n      [style.height]=\"( innerHeightWithoutMobileBar + 'px' )\"\n    >\n      <div\n        class=\"uk-width-1-4 nav-container\"\n        [style.height]=\"( innerHeightWithoutMobileBar + 'px' )\"\n      >\n        <div class=\"nav-header\">\n\n          <div uk-grid>\n            <div class=\"uk-width-expand\">\n\n              <div [class]=\"[ 'nano-card', (wallet.selectedAccount === null) ? 'is-wallet' : 'is-card' ]\">\n                <div class=\"logo\"></div>\n                <div class=\"card-contents\">\n                  <div class=\"account-name-container\">\n                    <a\n                      [routerLink]=\"(\n                          (wallet.selectedAccount !== null)\n                        ? '/account/' + wallet.selectedAccount.id\n                        : '/accounts'\n                      )\"\n                      [queryParams]=\"{ compact: '1' }\"\n                      class=\"name\"\n                    >{{\n                        (wallet.selectedAccount !== null)\n                      ? (\n                          wallet.selectedAccount.addressBookName\n                        ? wallet.selectedAccount.addressBookName\n                        : (('general.account' | transloco) + ' #' + wallet.selectedAccount.index)\n                      )\n                      : 'Balance'\n                    }}</a>\n                    <div #selectButton [class]=\"[ 'select-button', showAccountsDropdown ? 'open' : 'closed' ]\" (click)=\"toggleAccountsDropdown()\">\n                      <div class=\"circle\"></div>\n                      <div class=\"circle\"></div>\n                      <div class=\"circle\"></div>\n                    </div>\n                  </div>\n                  <div class=\"account-balances\">\n                    <ng-container *ngIf=\"( ( node.status && (wallet.balanceInitialized === true) ) || !isConfigured() ) else balancesLoading\">\n                      <div class=\"balance-container primary\">\n                        <!-- <div class=\"currency-name\">NANO</div> -->\n                        <div class=\"amount-container\">\n                          <div class=\"amount-integer\">{{ (wallet.selectedAccount !== null ? wallet.selectedAccount.balance : wallet.balance) | rai: 'mnano,true' | amountsplit: 0 }}</div>\n                          <div class=\"amount-fractional\">{{ (wallet.selectedAccount !== null ? wallet.selectedAccount.balance : wallet.balance) | rai: 'mnano,true' | amountsplit: 1 }}</div>\n                          <div class=\"amount-updating\" *ngIf=\"wallet.updatingBalance && isConfigured()\"><div uk-spinner=\"ratio: 0.5;\"></div></div>\n                        </div>\n                      </div>\n                      <div class=\"balance-container converted\" *ngIf=\"settings.settings.displayCurrency\">\n                        <div class=\"currency-name\"><span class=\"estimate-symbol\">~</span>{{ settings.settings.displayCurrency }}</div>\n                        <div class=\"amount-container\">\n                          <div class=\"amount-integer\">{{ (wallet.selectedAccount !== null ? wallet.selectedAccount.balanceFiat : wallet.balanceFiat) | fiat: settings.settings.displayCurrency | amountsplit: 0 }}</div>\n                          <div class=\"amount-fractional\">{{ (wallet.selectedAccount !== null ? wallet.selectedAccount.balanceFiat : wallet.balanceFiat) | fiat: settings.settings.displayCurrency | amountsplit: 1 }}</div>\n                        </div>\n                      </div>\n                    </ng-container>\n                    <ng-template #balancesLoading>\n                      <div class=\"spinner-container\" *ngIf=\"(node.status !== false)\">\n                        <div uk-spinner=\"ratio: 0.6;\"></div>\n                      </div>\n                    </ng-template>\n                  </div>\n                </div>\n              </div>\n\n              <ng-container *ngIf=\"(wallet.selectedAccount !== null) ? wallet.selectedAccount.pending.gt(0) : walletService.hasPendingTransactions()\">\n                <ng-container *ngIf=\"walletService.processingPending else notProcessingPending\">\n                  <div class=\"nav-action-receive\" *ngIf=\"walletService.processingPending\">\n                    <div class=\"icon\" uk-icon=\"icon: chevron-up; ratio: 1.2;\"></div>\n                    <div class=\"label\"><span uk-spinner=\"ratio: 0.5;\"></span>Processing Transactions...</div>\n                  </div>\n                </ng-container>\n                <ng-template #notProcessingPending>\n                  <ng-container *ngIf=\" (settings.settings.pendingOption !== 'manual') else manuallyReceivingPending \">\n                    <div class=\"nav-action-receive user-action-required uk-animation-slide-left\" *ngIf=\"walletService.isLocked()\">\n                      <div class=\"icon\" uk-icon=\"icon: chevron-up; ratio: 1.2;\"></div>\n                      <div class=\"label\">Unlock Wallet to Receive</div>\n                    </div>\n                  </ng-container>\n                  <ng-template #manuallyReceivingPending>\n                    <div class=\"nav-action-receive uk-animation-slide-left\">\n                      <div class=\"icon\" uk-icon=\"icon: chevron-up; ratio: 1.2;\"></div>\n                      <div class=\"label\">Set to Receive Manually</div>\n                    </div>\n                  </ng-template>\n                </ng-template>\n                <div class=\"nano-card incoming-card uk-animation-slide-left\">\n                  <div class=\"card-contents\">\n                    <div class=\"account-name-container\">\n                      <a routerLink=\"/receive\" class=\"name\">Incoming Balance</a>\n                    </div>\n                    <div class=\"account-balances\">\n                      <div class=\"balance-container primary\">\n                        <!-- <div class=\"currency-name\">NANO</div> -->\n                        <div class=\"amount-container\">\n                          <div class=\"amount-integer\">{{ (wallet.selectedAccount ? wallet.selectedAccount.pending : wallet.pending) | rai: 'mnano,true' | amountsplit: 0 }}</div>\n                          <div class=\"amount-fractional\">{{ (wallet.selectedAccount ? wallet.selectedAccount.pending : wallet.pending) | rai: 'mnano,true' | amountsplit: 1 }}</div>\n                        </div>\n                      </div>\n                      <div class=\"balance-container converted\" *ngIf=\"settings.settings.displayCurrency\">\n                        <div class=\"currency-name\"><span class=\"estimate-symbol\">~</span>{{ settings.settings.displayCurrency }}</div>\n                        <div class=\"amount-container\">\n                          <div class=\"amount-integer\">{{ (wallet.selectedAccount ? wallet.selectedAccount.pendingFiat : wallet.pendingFiat) | fiat: settings.settings.displayCurrency | amountsplit: 0 }}</div>\n                          <div class=\"amount-fractional\">{{ (wallet.selectedAccount ? wallet.selectedAccount.pendingFiat : wallet.pendingFiat) | fiat: settings.settings.displayCurrency | amountsplit: 1 }}</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"nav-separator-top\"></div>\n              </ng-container>\n\n              <div class=\"nav-status-row\" *ngIf=\"(node.status === false) && isConfigured()\">\n                <div class=\"status-icon\">\n                  <span class=\"uk-text-danger\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n                </div>\n                <div class=\"status-labels\" *ngIf=\"settings.settings.serverAPI\">\n                  <div class=\"label primary uk-text-danger\" style=\"text-decoration: none\">Offline Mode</div>\n                  <div class=\"label secondary\"><a (click)=\"retryConnection()\">Refresh</a> or <a routerLink=\"/configure-app\">change Node</a></div>\n                </div>\n                <div class=\"status-labels\" *ngIf=\"!settings.settings.serverAPI\">\n                  <div class=\"label primary uk-text-danger\">Wallet is in offline mode</div>\n                  <div class=\"label secondary\"><a routerLink=\"/configure-app\">Select a server</a> to interact with the network</div>\n                </div>\n              </div>\n\n              <app-change-rep-widget *ngIf=\"isConfigured()\"></app-change-rep-widget>\n              <app-wallet-widget></app-wallet-widget>\n\n            </div>\n          </div>\n\n        </div>\n\n        <ul class=\"uk-nav uk-nav-default uk-nav-parent-icon left-nav\" uk-nav>\n          <li><a routerLink=\"/accounts\" routerLinkActive=\"active\"><div class=\"label\">{{ 'general.accounts' | transloco }}</div></a></li>\n          <li><a routerLink=\"/send\" routerLinkActive=\"active\"><div class=\"label\">{{ 'general.send' | transloco }}</div></a></li>\n          <li>\n            <a routerLink=\"/receive\" routerLinkActive=\"active\">\n              <div uk-grid>\n                <div class=\"uk-width-3-4\">\n                  <div class=\"label\">{{ 'general.receive' | transloco }}</div>\n                </div>\n                <div class=\"uk-width-1-4 uk-text-center label-new\">\n                  <span *ngIf=\"walletService.hasPendingTransactions()\" class=\"uk-badge uk-text-top uk-align-center\"><div class=\"label\">{{ 'general.new' | transloco }}</div></span>\n                </div>\n              </div>\n            </a>\n          </li>\n          <li>\n            <a routerLink=\"/search\" routerLinkActive=\"active\"><div class=\"label\">Search</div></a>\n          </li>\n        <!--   <li>\n            <a routerLink=\"/donate\" routerLinkActive=\"active\"><div class=\"label\">Donate</div></a>\n          </li> -->\n          <li>\n            <a routerLink=\"/ai\" routerLinkActive=\"active\"><div class=\"label\">NaultGPT</div></a>\n          </li>\n          <!-- <li>\n            <a routerLink=\"/social\" routerLinkActive=\"active\"><div class=\"label\">XnoSocial</div></a>\n          </li> -->\n          <li class=\"uk-parent\">\n            <a href=\"#\">{{ 'general.settings' | transloco }}</a>\n            <ul class=\"uk-nav-sub\">\n              <li><a routerLink=\"/configure-app\" routerLinkActive=\"active\"><div class=\"label\">{{ 'general.app-settings' | transloco }}</div></a></li>\n              <li *ngIf=\"isConfigured()\"><a routerLink=\"/manage-wallet\" routerLinkActive=\"active\"><div class=\"label\">{{ 'general.wallet-settings' | transloco }}</div></a></li>\n              <li><a routerLink=\"/representatives\" [queryParams]=\"\" routerLinkActive=\"active\"><div class=\"label\">{{ 'general.representatives' | transloco }}</div></a></li>\n             \n              <!-- <li class=\"uk-parent\"> -->\n                <!-- <a href=\"#\">Advanced</a> -->\n                <!-- <ul class=\"uk-nav-sub\"> -->\n                  <li><a href=\"https://simpleswap.io/?ref=ecc1985b556a\" target=\"_blank\"><div class=\"label\">SimpleSwap \n                    <div style=\"display: inline-block;filter: invert(1);margin-left: 6px;zoom: 0.8;vertical-align: text-bottom;\"><svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15,10 L15,14 C15,15.1045695 14.1045695,16 13,16 L2,16 C0.8954305,16 0,15.1045695 0,14 L0,3 C0,1.8954305 0.8954305,1 2,1 L6,1 L6,3 L2,3 L2,14 L13,14 L13,10 L15,10 Z M13.9971001,3.41421356 L7.70420685,9.70710678 L6.28999329,8.29289322 L12.5828865,2 L8.99710007,2 L8.99710007,0 L15.9971001,0 L15.9971001,7 L13.9971001,7 L13.9971001,3.41421356 Z\" fill-rule=\"evenodd\"></path></svg></div>\n\n                  </div></a></li>\n                  <!-- <li><a routerLink=\"/address-book\" routerLinkActive=\"active\"><div class=\"label\">{{ 'general.address-book' | transloco }}</div></a></li> -->\n                  <!-- <li><a routerLink=\"/qr-scan\" routerLinkActive=\"active\"><div class=\"label\">{{ 'general.scan-qr-code' | transloco }}</div></a></li> -->\n                  <!-- <li><a routerLink=\"/sweeper\" routerLinkActive=\"active\"><div class=\"label\">Wallet Sweeper</div></a></li> -->\n                  <li><a routerLink=\"/remote-signing\" routerLinkActive=\"active\"><div class=\"label\">Remote Signing</div></a></li>\n                  <li><a routerLink=\"/multisig\" routerLinkActive=\"active\"><div class=\"label\">Multi Signature</div></a></li>\n                  <li><a routerLink=\"/keygenerator\" routerLinkActive=\"active\"><div class=\"label\">Keypair Generator</div></a></li>\n                  <li><a routerLink=\"/converter\" routerLinkActive=\"active\"><div class=\"label\">Unit Converter</div></a></li>\n                  <li><a routerLink=\"/qr-generator\" routerLinkActive=\"active\"><div class=\"label\">QR Generator</div></a></li>\n                  <li><a routerLink=\"/configure-wallet\" routerLinkActive=\"active\"><div class=\"label\">Configure New Wallet</div></a></li>\n                <!-- </ul> -->\n              <!-- </li> -->\n            </ul>\n          </li>\n        </ul>\n\n        <app-install-widget></app-install-widget>\n\n        <div class=\"nav-search\">\n          <form class=\"uk-search uk-search-default uk-width-1-1\">\n            <a href=\"javascript:void(0)\" (click)=\"performSearch()\" class=\"uk-search-icon-flip\" uk-search-icon></a>\n            <input class=\"uk-search-input uk-width-1-1\" id=\"search-input\" type=\"search\" placeholder=\"Search for an account or block hash\" [(ngModel)]=\"searchData\" name=\"searchData\" (keyup.enter)=\"performSearch()\">\n          </form>\n        </div>\n\n        <div class=\"footer footer-actions uk-margin-remove-top uk-flex-middle\" uk-grid>\n          <div class=\"uk-width-1-3 uk-text-center\">\n            <a class=\"support-nault\" target=\"https://nano.to\" target=\"_blank\">\n              <div class=\"button\">\n                <a class=\"footer-link donation-icon\"><span uk-icon=\"icon: heart; ratio: 1.2;\"></span></a>\n              </div>\n              <div class=\"section-caption\">Nano.to</div>\n            </a>\n          </div>\n          <div class=\"uk-width-1-3 uk-text-center community-column\">\n            <div class=\"icons-row\">\n              <a href=\"https://github.com/fwd/Nault-Pro\" uk-icon=\"icon: github-alt; ratio: 1.2;\" uk-tooltip title=\"View our GitHub\" class=\"footer-link\" target=\"_blank\" rel=\"noopener noreferrer\"></a>\n              <a href=\"https://discord.gg/2xYr2ZthZF\" uk-tooltip title=\"Join Nault.Pro on Discord\" class=\"footer-link discord-icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <svg width=\"28\" height=\"28\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 245 240\"><path class=\"st0\" d=\"M104.4 103.9c-5.7 0-10.2 5-10.2 11.1s4.6 11.1 10.2 11.1c5.7 0 10.2-5 10.2-11.1.1-6.1-4.5-11.1-10.2-11.1zM140.9 103.9c-5.7 0-10.2 5-10.2 11.1s4.6 11.1 10.2 11.1c5.7 0 10.2-5 10.2-11.1s-4.5-11.1-10.2-11.1z\"/><path class=\"st0\" d=\"M189.5 20h-134C44.2 20 35 29.2 35 40.6v135.2c0 11.4 9.2 20.6 20.5 20.6h113.4l-5.3-18.5 12.8 11.9 12.1 11.2 21.5 19V40.6c0-11.4-9.2-20.6-20.5-20.6zm-38.6 130.6s-3.6-4.3-6.6-8.1c13.1-3.7 18.1-11.9 18.1-11.9-4.1 2.7-8 4.6-11.5 5.9-5 2.1-9.8 3.5-14.5 4.3-9.6 1.8-18.4 1.3-25.9-.1-5.7-1.1-10.6-2.7-14.7-4.3-2.3-.9-4.8-2-7.3-3.4-.3-.2-.6-.3-.9-.5-.2-.1-.3-.2-.4-.3-1.8-1-2.8-1.7-2.8-1.7s4.8 8 17.5 11.8c-3 3.8-6.7 8.3-6.7 8.3-22.1-.7-30.5-15.2-30.5-15.2 0-32.2 14.4-58.3 14.4-58.3 14.4-10.8 28.1-10.5 28.1-10.5l1 1.2c-18 5.2-26.3 13.1-26.3 13.1s2.2-1.2 5.9-2.9c10.7-4.7 19.2-6 22.7-6.3.6-.1 1.1-.2 1.7-.2 6.1-.8 13-1 20.2-.2 9.5 1.1 19.7 3.9 30.1 9.6 0 0-7.9-7.5-24.9-12.7l1.4-1.6s13.7-.3 28.1 10.5c0 0 14.4 26.1 14.4 58.3 0 0-8.5 14.5-30.6 15.2z\"/></svg>\n              </a>\n            </div>\n            <div class=\"section-caption\">Community</div>\n          </div>\n          <div class=\"uk-width-1-3 uk-text-center dark-mode-column\">\n            <div [class]=\"{'dark-mode-click-area': true, 'enabled': !settings.settings.lightModeEnabled}\" (click)=\"toggleLightMode()\">\n              <div class=\"dark-mode-area\">\n                <div class=\"dark-mode-switch\">\n                  <svg width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 160 160\" xmlns=\"http://www.w3.org/2000/svg\">\n                   <g fill=\"#EEE\" stroke=\"#EEE\" stroke-linejoin=\"round\" stroke-width=\"2\">\n                    <path d=\"m145.54 108.99c-5.5673 25.239-34.67 39.667-62.22 39.667-37.888 0-68.603-30.714-68.603-68.603-1e-6 -37.888 30.714-68.603 68.603-68.603 9.8615 0 19.237 2.0808 27.712 5.8272-105.27 26.034-34.024 146.53 34.508 91.711z\" stop-color=\"#000000\"/>\n                    <path transform=\"matrix(.69599 .69599 -.69599 .69599 66.459 -75.221)\" d=\"m120.54 62.862c-2.3901-1e-6 -9.2713 6.4507-10.961 4.7607s4.7607-8.5712 4.7607-10.961c0-2.3901-6.4507-9.2713-4.7607-10.961s8.5712 4.7607 10.961 4.7607 9.2712-6.4507 10.961-4.7607c1.69 1.6901-4.7607 8.5712-4.7607 10.961 0 2.3901 6.4507 9.2713 4.7607 10.961-1.6901 1.6901-8.5712-4.7607-10.961-4.7607z\" stop-color=\"#000000\"/>\n                   </g>\n                  </svg>\n                </div>\n              </div>\n              <div class=\"section-caption\">Night Mode</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"footer footer-attribution uk-margin-remove-top\" uk-grid>\n          <div class=\"attribution uk-width-1-1 uk-text-center\">\n            Based on <a href=\"https://github.com/Nault/Nault\" target=\"_blank\" rel=\"noopener noreferrer\">Nault</a>\n          </div>\n        </div>\n\n\n      </div>\n      <div\n        class=\"uk-width-expand content-container uk-panel\"\n        [class.nav-expanded]=\"navExpanded\"\n        [class.nav-animating]=\"navAnimating\"\n        [style.height]=\"( innerHeightWithoutMobileBar + 'px' )\"\n        (click)=\"closeNav()\"\n      >\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-notifications></app-notifications>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {WelcomeComponent} from './welcome/welcome.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {UtilService} from './services/util.service';\nimport {WalletService} from './services/wallet.service';\nimport {ConfigureWalletComponent} from './components/configure-wallet/configure-wallet.component';\nimport {NotificationService} from './services/notification.service';\nimport {NotificationsComponent} from './components/notifications/notifications.component';\nimport {RaiPipe} from './pipes/rai.pipe';\nimport {AccountsComponent} from './components/accounts/accounts.component';\nimport {ApiService} from './services/api.service';\nimport {AddressBookService} from './services/address-book.service';\nimport {SendComponent} from './components/send/send.component';\nimport {SqueezePipe} from './pipes/squeeze.pipe';\nimport {ModalService} from './services/modal.service';\nimport {AddressBookComponent} from './components/address-book/address-book.component';\nimport {ClipboardModule} from 'ngx-clipboard';\nimport {ReceiveComponent} from './components/receive/receive.component';\nimport {WalletWidgetComponent} from './components/wallet-widget/wallet-widget.component';\nimport {ManageWalletComponent} from './components/manage-wallet/manage-wallet.component';\nimport {WorkPoolService} from './services/work-pool.service';\nimport {ConfigureAppComponent} from './components/configure-app/configure-app.component';\nimport {AppSettingsService} from './services/app-settings.service';\nimport {WebsocketService} from './services/websocket.service';\nimport {NanoBlockService} from './services/nano-block.service';\nimport { AccountDetailsComponent } from './components/account-details/account-details.component';\nimport { TransactionDetailsComponent } from './components/transaction-details/transaction-details.component';\nimport {PriceService} from './services/price.service';\nimport { FiatPipe } from './pipes/fiat.pipe';\nimport { AmountSplitPipe } from './pipes/amount-split.pipe';\nimport { ImportWalletComponent } from './components/import-wallet/import-wallet.component';\nimport { NanoAccountIdComponent } from './components/helpers/nano-account-id/nano-account-id.component';\nimport { NanoIdenticonComponent } from './components/helpers/nano-identicon/nano-identicon.component';\nimport {PowService} from './services/pow.service';\nimport { ImportAddressBookComponent } from './components/import-address-book/import-address-book.component';\nimport { CurrencySymbolPipe } from './pipes/currency-symbol.pipe';\nimport { RepresentativesComponent } from './components/representatives/representatives.component';\nimport {RepresentativeService} from './services/representative.service';\nimport {ManageRepresentativesComponent} from './components/manage-representatives/manage-representatives.component';\nimport {NodeService} from './services/node.service';\nimport {LedgerService} from './services/ledger.service';\nimport {DesktopService} from './services/desktop.service';\nimport { AccountPipe } from './pipes/account.pipe';\nimport { ChangeRepWidgetComponent } from './components/change-rep-widget/change-rep-widget.component';\nimport { SweeperComponent } from './components/sweeper/sweeper.component';\nimport { QrScanComponent } from './components/qr-scan/qr-scan.component';\nimport {SignComponent} from './components/sign/sign.component';\nimport {RemoteSigningComponent} from './components/remote-signing/remote-signing.component';\nimport {RemoteSignService} from './services/remote-sign.service';\nimport { InstallWidgetComponent } from './components/install-widget/install-widget.component';\nimport { QrModalComponent } from './components/qr-modal/qr-modal.component';\nimport { QrModalService } from './services/qr-modal.service';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport {MusigService} from './services/musig.service';\n\n// QR code module\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport { DeeplinkService, NinjaService } from './services';\nimport { ConverterComponent } from './components/converter/converter.component';\nimport { QrGeneratorComponent } from './components/qr-generator/qr-generator.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { MultisigComponent } from './components/multisig/multisig.component';\nimport { KeygeneratorComponent } from './components/keygenerator/keygenerator.component';\nimport { NanoTransactionMobileComponent } from './components/helpers/nano-transaction-mobile/nano-transaction-mobile.component';\nimport { TranslocoRootModule } from './transloco/transloco-root.module';\nimport { NoPaddingZerosPipe } from './pipes/no-padding-zeros.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    ConfigureWalletComponent,\n    NotificationsComponent,\n    RaiPipe,\n    SqueezePipe,\n    AccountsComponent,\n    SendComponent,\n    AddressBookComponent,\n    ReceiveComponent,\n    WalletWidgetComponent,\n    ManageWalletComponent,\n    ConfigureAppComponent,\n    AccountDetailsComponent,\n    TransactionDetailsComponent,\n    FiatPipe,\n    AmountSplitPipe,\n    ImportWalletComponent,\n    NanoAccountIdComponent,\n    NanoIdenticonComponent,\n    ImportAddressBookComponent,\n    CurrencySymbolPipe,\n    RepresentativesComponent,\n    ManageRepresentativesComponent,\n    AccountPipe,\n    ChangeRepWidgetComponent,\n    SweeperComponent,\n    QrScanComponent,\n    SignComponent,\n    RemoteSigningComponent,\n    QrModalComponent,\n    ConverterComponent,\n    QrGeneratorComponent,\n    InstallWidgetComponent,\n    MultisigComponent,\n    KeygeneratorComponent,\n    NanoTransactionMobileComponent,\n    NoPaddingZerosPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ClipboardModule,\n    ZXingScannerModule,\n    NgbModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production && !environment.desktop }),\n    TranslocoRootModule,\n  ],\n  providers: [\n    UtilService,\n    WalletService,\n    NotificationService,\n    ApiService,\n    AddressBookService,\n    ModalService,\n    WorkPoolService,\n    AppSettingsService,\n    WebsocketService,\n    NanoBlockService,\n    PriceService,\n    PowService,\n    RepresentativeService,\n    NodeService,\n    LedgerService,\n    DesktopService,\n    RemoteSignService,\n    NinjaService,\n    NgbActiveModal,\n    QrModalService,\n    DeeplinkService,\n    MusigService,\n    NoPaddingZerosPipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute, ChildActivationEnd, Router, NavigationEnd} from '@angular/router';\nimport {formatDate} from '@angular/common';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {ApiService} from '../../services/api.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {WalletService} from '../../services/wallet.service';\nimport {NanoBlockService} from '../../services/nano-block.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {PriceService} from '../../services/price.service';\nimport {UtilService} from '../../services/util.service';\nimport * as QRCode from 'qrcode';\nimport BigNumber from 'bignumber.js';\nimport {RepresentativeService} from '../../services/representative.service';\nimport {BehaviorSubject} from 'rxjs';\nimport * as nanocurrency from 'nanocurrency';\nimport {NinjaService} from '../../services/ninja.service';\nimport { QrModalService } from '../../services/qr-modal.service';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-account-details',\n  templateUrl: './account-details.component.html',\n  styleUrls: ['./account-details.component.css']\n})\nexport class AccountDetailsComponent implements OnInit, OnDestroy {\n  nano = 1000000000000000000000000;\n  zeroHash = '0000000000000000000000000000000000000000000000000000000000000000';\n\n  accountHistory: any[] = [];\n  pendingBlocks = [];\n  pageSize = 25;\n  maxPageSize = 200;\n\n  repLabel: any = '';\n  repVotingWeight: BigNumber;\n  repDonationAddress: any = '';\n\n  addressBookEntry: any = null;\n  account: any = {};\n  accountID = '';\n\n  walletAccount = null;\n\n  timeoutIdAllowingManualRefresh: any = null;\n  timeoutIdAllowingInstantAutoRefresh: any = null;\n  timeoutIdQueuedAutoRefresh: any = null;\n  qrModal: any = null;\n  mobileAccountMenuModal: any = null;\n  mobileTransactionMenuModal: any = null;\n  mobileTransactionData: any = null;\n\n  showFullDetailsOnSmallViewports = false;\n  loadingAccountDetails = false;\n  loadingIncomingTxList = false;\n  loadingTxList = false;\n  showAdvancedOptions = false;\n  showEditAddressBook = false;\n  addressBookModel = '';\n  representativeModel = '';\n  representativeResults$ = new BehaviorSubject([]);\n  showRepresentatives = false;\n  representativeListMatch = '';\n  isNaN = isNaN;\n\n  qrCodeImage = null;\n\n  routerSub = null;\n  priceSub = null;\n\n  initialLoadDone = false;\n  manualRefreshAllowed = true;\n  instantAutoRefreshAllowed = true;\n  shouldQueueAutoRefresh = false;\n  autoRefreshReasonBlockUpdate = null;\n  dateStringToday = '';\n  dateStringYesterday = '';\n\n  // Remote signing\n  addressBookResults$ = new BehaviorSubject([]);\n  showAddressBook = false;\n  addressBookMatch = '';\n  amounts = [\n    { name: 'XNO', shortName: 'XNO', value: 'mnano' },\n    { name: 'knano', shortName: 'knano', value: 'knano' },\n    { name: 'nano', shortName: 'nano', value: 'nano' },\n  ];\n  selectedAmount = this.amounts[0];\n\n  known = null;\n  amount = null;\n  amountRaw: BigNumber = new BigNumber(0);\n  amountFiat: number|null = null;\n  rawAmount: BigNumber = new BigNumber(0);\n  fromAccount: any = {};\n  toAccount: any = false;\n  toAccountID = '';\n  toAddressBook = '';\n  toAccountStatus = null;\n  amountStatus = null;\n  repStatus = null;\n  qrString = null;\n  qrCodeImageBlock = null;\n  qrCodeImageBlockReceive = null;\n  blockHash = null;\n  blockHashReceive = null;\n  remoteVisible = false;\n  blockTypes: string[] = ['Send Nano', 'Change Representative'];\n  blockTypeSelected: string = this.blockTypes[0];\n  representativeList = [];\n  representativesOverview = [];\n  // End remote signing\n\n  constructor(\n    private http: HttpClient,\n    private router: ActivatedRoute,\n    private route: Router,\n    private addressBook: AddressBookService,\n    private api: ApiService,\n    private price: PriceService,\n    private repService: RepresentativeService,\n    private notifications: NotificationService,\n    private wallet: WalletService,\n    private util: UtilService,\n    public settings: AppSettingsService,\n    private nanoBlock: NanoBlockService,\n    private qrModalService: QrModalService,\n    private ninja: NinjaService,\n    private translocoService: TranslocoService) {\n      // to detect when the account changes if the view is already active\n      route.events.subscribe((val) => {\n        if (val instanceof NavigationEnd) {\n          this.clearRemoteVars(); // reset the modal content for remote signing\n        }\n      });\n  }\n\n  async ngOnInit() {\n\n    await this.loadKnown();\n\n    const params = this.router.snapshot.queryParams;\n    if ('sign' in params) {\n      this.remoteVisible = params.sign === '1';\n      this.showAdvancedOptions = params.sign === '1';\n    }\n\n    this.showFullDetailsOnSmallViewports = (params.compact !== '1');\n\n    this.routerSub = this.route.events.subscribe(event => {\n      if (event instanceof ChildActivationEnd) {\n        this.loadAccountDetails(); // Reload the state when navigating to itself from the transactions page\n        this.showFullDetailsOnSmallViewports = (this.router.snapshot.queryParams.compact !== '1');\n        this.mobileTransactionMenuModal.hide();\n      }\n    });\n\n    this.priceSub = this.price.lastPrice$.subscribe(event => {\n      this.account.balanceFiat = this.util.nano.rawToMnano(this.account.balance || 0).times(this.price.price.lastPrice).toNumber();\n      this.account.pendingFiat = this.util.nano.rawToMnano(this.account.pending || 0).times(this.price.price.lastPrice).toNumber();\n    });\n\n    this.wallet.wallet.pendingBlocksUpdate$.subscribe(async receivableBlockUpdate => {\n      this.onReceivableBlockUpdate(receivableBlockUpdate);\n    });\n\n    const UIkit = window['UIkit'];\n    const qrModal = UIkit.modal('#qr-code-modal');\n    this.qrModal = qrModal;\n\n    const mobileAccountMenuModal = UIkit.modal('#mobile-account-menu-modal');\n    this.mobileAccountMenuModal = mobileAccountMenuModal;\n\n    const mobileTransactionMenuModal = UIkit.modal('#mobile-transaction-menu-modal');\n    this.mobileTransactionMenuModal = mobileTransactionMenuModal;\n\n    await this.loadAccountDetails();\n    \n    this.initialLoadDone = true;\n\n\n    this.addressBook.loadAddressBook();\n\n    this.populateRepresentativeList();\n\n    this.repService.walletReps$.subscribe(async reps => {\n      if ( reps[0] === null ) {\n        // initial state from new BehaviorSubject([null])\n        return;\n      }\n\n      this.representativesOverview = reps;\n      this.updateRepresentativeInfo();\n    });\n\n  }\n\n  async populateRepresentativeList() {\n    // add trusted/regular local reps to the list\n    const localReps = this.repService.getSortedRepresentatives();\n    this.representativeList.push( ...localReps.filter(rep => (!rep.warn)) );\n\n    if (this.settings.settings.serverAPI) {\n      const verifiedReps = await this.ninja.recommendedRandomized();\n\n      // add random recommended reps to the list\n      for (const representative of verifiedReps) {\n        const temprep = {\n          id: representative.account,\n          name: representative.alias\n        };\n\n        this.representativeList.push(temprep);\n      }\n    }\n\n    // add untrusted local reps to the list\n    this.representativeList.push( ...localReps.filter(rep => (rep.warn)) );\n  }\n\n  clearAccountVars() {\n    this.accountHistory = [];\n    this.pendingBlocks = [];\n    this.accountID = '';\n    this.addressBookEntry = null;\n    this.addressBookModel = '';\n    this.showEditAddressBook = false;\n    this.walletAccount = null;\n    this.account = {};\n    this.qrCodeImage = null;\n  }\n\n  clearRemoteVars() {\n    this.selectedAmount = this.amounts[0];\n    this.amount = null;\n    this.amountRaw = new BigNumber(0);\n    this.amountFiat = null;\n    this.rawAmount = new BigNumber(0);\n    this.fromAccount = {};\n    this.toAccount = false;\n    this.toAccountID = '';\n    this.toAddressBook = '';\n    this.toAccountStatus = null;\n    this.repStatus = null;\n    this.qrString = null;\n    this.qrCodeImageBlock = null;\n    this.qrCodeImageBlockReceive = null;\n    this.blockHash = null;\n    this.blockHashReceive = null;\n    this.blockTypeSelected = this.blockTypes[0];\n    this.representativeModel = '';\n    this.representativeListMatch = '';\n  }\n\n  updateRepresentativeInfo() {\n    if (!this.account) {\n      return;\n    }\n\n    const representativeFromOverview =\n      this.representativesOverview.find(\n        (rep) =>\n          (rep.account === this.account.representative)\n      );\n\n    if (representativeFromOverview != null) {\n      this.repLabel = representativeFromOverview.label;\n      this.repVotingWeight = representativeFromOverview.percent;\n      this.repDonationAddress = representativeFromOverview.donationAddress;\n      return;\n    }\n\n    this.repVotingWeight = new BigNumber(0);\n    this.repDonationAddress = null;\n\n    const knownRepresentative = this.repService.getRepresentative(this.account.representative);\n\n    if (knownRepresentative != null) {\n      this.repLabel = knownRepresentative.name;\n      return;\n    }\n\n    this.repLabel = null;\n  }\n\n  onRefreshButtonClick() {\n    if (!this.manualRefreshAllowed) return;\n\n    this.loadAccountDetails();\n  }\n\n  isReceivableBlockUpdateRelevant(receivableBlockUpdate) {\n    let isRelevant = true;\n\n    if (receivableBlockUpdate.account !== this.accountID) {\n      isRelevant = false;\n      return isRelevant;\n    }\n\n    const sourceHashToFind = receivableBlockUpdate.sourceHash;\n\n    const alreadyInReceivableBlocks =\n      this.pendingBlocks.some(\n        (knownReceivableBlock) =>\n          (knownReceivableBlock.hash === sourceHashToFind)\n      );\n\n    if (receivableBlockUpdate.hasBeenReceived === true) {\n      const destinationHashToFind = receivableBlockUpdate.destinationHash;\n\n      const alreadyInAccountHistory =\n        this.accountHistory.some(\n          (knownAccountHistoryBlock) =>\n            (knownAccountHistoryBlock.hash === destinationHashToFind)\n        );\n\n      if (\n            (alreadyInAccountHistory === true)\n          && (alreadyInReceivableBlocks === false)\n        ) {\n          isRelevant = false;\n          return isRelevant;\n      }\n    } else {\n      if (alreadyInReceivableBlocks === true) {\n        isRelevant = false;\n        return isRelevant;\n      }\n    }\n\n    return isRelevant;\n  }\n\n  onReceivableBlockUpdate(receivableBlockUpdate) {\n    if (receivableBlockUpdate === null) {\n      return;\n    }\n\n    const isRelevantUpdate =\n      this.isReceivableBlockUpdateRelevant(receivableBlockUpdate);\n\n    if (isRelevantUpdate === false) {\n      return;\n    }\n\n    this.loadAccountDetailsThrottled({ receivableBlockUpdate });\n  }\n\n  async loadKnown() {\n    localStorage.setItem('nano-known', JSON.stringify( await this.http.post('https://rpc.nano.to', { action: \"known\" }).toPromise() ))\n  }\n\n  loadAccountDetailsThrottled(params) {\n    this.autoRefreshReasonBlockUpdate = (\n        (params.receivableBlockUpdate != null)\n      ? params.receivableBlockUpdate\n      : null\n    );\n\n    if (this.initialLoadDone === false) {\n      return;\n    }\n\n    if (this.instantAutoRefreshAllowed === true) {\n      this.loadAccountDetails();\n      return;\n    }\n\n    if (this.loadingAccountDetails === true) {\n      // Queue refresh once the loading is done\n      this.shouldQueueAutoRefresh = true;\n    } else {\n      // Queue refresh now\n      this.loadAccountDetailsDelayed(3000);\n    }\n  }\n\n  enableManualRefreshDelayed(delayMS) {\n    if (this.timeoutIdAllowingManualRefresh != null) {\n      clearTimeout(this.timeoutIdAllowingManualRefresh);\n    }\n\n    this.timeoutIdAllowingManualRefresh =\n      setTimeout(\n        () => {\n          this.manualRefreshAllowed = true;\n        },\n        delayMS\n      );\n  }\n\n  enableInstantAutoRefreshDelayed(delayMS) {\n    if (this.timeoutIdAllowingInstantAutoRefresh != null) {\n      clearTimeout(this.timeoutIdAllowingInstantAutoRefresh);\n    }\n\n    this.timeoutIdAllowingInstantAutoRefresh =\n      setTimeout(\n        () => {\n          this.instantAutoRefreshAllowed = true;\n        },\n        delayMS\n      );\n  }\n\n  loadAccountDetailsDelayed(delayMS) {\n    if (this.timeoutIdQueuedAutoRefresh != null) {\n      clearTimeout(this.timeoutIdQueuedAutoRefresh);\n    }\n\n    this.timeoutIdQueuedAutoRefresh =\n      setTimeout(\n        () => {\n          if (this.autoRefreshReasonBlockUpdate !== null) {\n            const isUpdateStillRelevant =\n              this.isReceivableBlockUpdateRelevant(this.autoRefreshReasonBlockUpdate);\n\n            if (isUpdateStillRelevant === false) {\n              this.enableRefreshesEventually();\n              return;\n            }\n          }\n\n          this.loadAccountDetails();\n        },\n        delayMS\n      );\n  }\n\n  onAccountDetailsLoadStart() {\n    this.instantAutoRefreshAllowed = false;\n    this.manualRefreshAllowed = false;\n\n    if (this.timeoutIdAllowingManualRefresh != null) {\n      clearTimeout(this.timeoutIdAllowingManualRefresh);\n    }\n\n    if (this.timeoutIdAllowingInstantAutoRefresh != null) {\n      clearTimeout(this.timeoutIdAllowingInstantAutoRefresh);\n    }\n\n    if (this.timeoutIdQueuedAutoRefresh != null) {\n      clearTimeout(this.timeoutIdQueuedAutoRefresh);\n    }\n  }\n\n  enableRefreshesEventually() {\n    this.enableInstantAutoRefreshDelayed(3000);\n    this.enableManualRefreshDelayed(5000);\n  }\n\n  onAccountDetailsLoadDone() {\n    if (this.shouldQueueAutoRefresh === true) {\n      this.shouldQueueAutoRefresh = false;\n      this.loadAccountDetailsDelayed(3000);\n      return;\n    }\n\n    this.enableRefreshesEventually();\n  }\n\n  async loadAccountDetails() {\n\n    this.onAccountDetailsLoadStart();\n\n    this.pendingBlocks = [];\n\n    this.clearAccountVars();\n    this.loadingAccountDetails = true;\n\n    const accountID = this.router.snapshot.params.account;\n    this.accountID = accountID;\n    this.generateReceiveQR(accountID);\n\n    // console.log(\"loadAccountDetails\", accountID)\n\n    var known = this.known ? this.known.find(a => a.address === accountID) : false\n\n    this.addressBookEntry = this.addressBook.getAccountName(accountID) || (known ? { name: known.name, account: known.address } : false);\n\n    this.addressBookModel = this.addressBookEntry || '';\n    this.walletAccount = this.wallet.getWalletAccount(accountID);\n\n    this.account = await this.api.accountInfo(accountID);\n\n    if (accountID !== this.accountID) {\n      // Navigated to a different account while account info was loading\n      this.onAccountDetailsLoadDone();\n      return;\n    }\n\n    if (!this.account) {\n      this.loadingAccountDetails = false;\n      this.onAccountDetailsLoadDone();\n      return;\n    }\n\n    this.updateRepresentativeInfo();\n\n    // If there is a pending balance, or the account is not opened yet, load pending transactions\n    if ((!this.account.error && this.account.pending > 0) || this.account.error) {\n      // Take minimum receive into account\n      let pendingBalance = '0';\n      let pending;\n\n      this.pendingBlocks = [];\n      this.loadingIncomingTxList = true;\n\n      if (this.settings.settings.minimumReceive) {\n        const minAmount = this.util.nano.mnanoToRaw(this.settings.settings.minimumReceive);\n        pending = await this.api.pendingLimitSorted(accountID, 50, minAmount.toString(10));\n      } else {\n        pending = await this.api.pendingSorted(accountID, 50);\n      }\n\n      if (accountID !== this.accountID) {\n        // Navigated to a different account while incoming tx were loading\n        this.onAccountDetailsLoadDone();\n        return;\n      }\n\n      this.loadingIncomingTxList = false;\n\n      if (pending && pending.blocks) {\n        for (const block in pending.blocks) {\n          if (!pending.blocks.hasOwnProperty(block)) continue;\n          const transaction = pending.blocks[block];\n\n          this.pendingBlocks.push({\n            account: transaction.source,\n            amount: transaction.amount,\n            amountRaw: new BigNumber( transaction.amount || 0 ).mod(this.nano),\n            local_timestamp: transaction.local_timestamp,\n            local_date_string: (\n                transaction.local_timestamp\n              ? formatDate(transaction.local_timestamp * 1000, 'MMM d, y', 'en-US')\n              : 'N/A'\n            ),\n            local_time_string: (\n                transaction.local_timestamp\n              ? formatDate(transaction.local_timestamp * 1000, 'HH:mm:ss', 'en-US')\n              : ''\n            ),\n            addressBookName: (\n                this.addressBook.getAccountName(transaction.source)\n              || this.getAccountLabel(transaction.source, null)\n            ),\n            hash: block,\n            loading: false,\n            received: false,\n            isReceivable: true,\n          });\n\n          pendingBalance = new BigNumber(pendingBalance).plus(transaction.amount).toString(10);\n        }\n      }\n\n      this.account.pending = pendingBalance;\n    } else {\n      // Unset variable that may still be set to true from old request\n      this.loadingIncomingTxList = false;\n    }\n\n    // If the account doesnt exist, set the pending balance manually\n    if (this.account.error) {\n      const pendingRaw = this.pendingBlocks.reduce(\n        (prev: BigNumber, current: any) => prev.plus(new BigNumber(current.amount)),\n        new BigNumber(0)\n      );\n      this.account.pending = pendingRaw;\n    }\n\n    // Set fiat values?\n    this.account.balanceRaw = new BigNumber(this.account.balance || 0).mod(this.nano);\n    this.account.pendingRaw = new BigNumber(this.account.pending || 0).mod(this.nano);\n    this.account.balanceFiat = this.util.nano.rawToMnano(this.account.balance || 0).times(this.price.price.lastPrice).toNumber();\n    this.account.pendingFiat = this.util.nano.rawToMnano(this.account.pending || 0).times(this.price.price.lastPrice).toNumber();\n\n    await this.getAccountHistory(accountID);\n\n    if (accountID !== this.accountID) {\n      // Navigated to a different account while account history was loading\n      this.onAccountDetailsLoadDone();\n      return;\n    }\n\n    this.loadingAccountDetails = false;\n    this.onAccountDetailsLoadDone();\n  }\n\n  getAccountLabel(accountID, defaultLabel) {\n    const walletAccount = this.wallet.wallet.accounts.find(a => a.id === accountID);\n\n    if (walletAccount == null) {\n      return defaultLabel;\n    }\n\n    return (this.translocoService.translate('general.account') + ' #' + walletAccount.index);\n  }\n\n  ngOnDestroy() {\n    this.mobileAccountMenuModal.hide();\n    this.mobileTransactionMenuModal.hide();\n    if (this.routerSub) {\n      this.routerSub.unsubscribe();\n    }\n    if (this.priceSub) {\n      this.priceSub.unsubscribe();\n    }\n  }\n\n  async generateReceiveQR(accountID) {\n    const qrCode = await QRCode.toDataURL(`${accountID}`, { errorCorrectionLevel: 'M', scale: 16 });\n    this.qrCodeImage = qrCode;\n  }\n\n  updateTodayYesterdayDateStrings() {\n    const unixTimeNow = Date.now();\n\n    this.dateStringToday = formatDate( unixTimeNow, 'MMM d, y', 'en-US' );\n    this.dateStringYesterday = formatDate( unixTimeNow - 86400000, 'MMM d, y', 'en-US' );\n  }\n\n  async getAccountHistory(accountID, resetPage = true) {\n    if (resetPage) {\n      this.accountHistory = [];\n      this.pageSize = 25;\n    }\n\n    this.loadingTxList = true;\n    this.updateTodayYesterdayDateStrings();\n\n    const history = await this.api.accountHistory(accountID, this.pageSize, true);\n\n    if (accountID !== this.accountID) {\n      // Navigated to a different account while account history was loading\n      return;\n    }\n\n    const additionalBlocksInfo = [];\n\n    const accountConfirmationHeight = (\n        this.account.confirmation_height\n      ? parseInt(this.account.confirmation_height, 10)\n      : null\n    );\n\n    if (history && history.history && Array.isArray(history.history)) {\n      this.accountHistory = history.history.map(h => {\n        h.local_date_string = (\n            h.local_timestamp\n          ? formatDate(h.local_timestamp * 1000, 'MMM d, y', 'en-US')\n          : 'N/A'\n        );\n\n        h.local_time_string = (\n            h.local_timestamp\n          ? formatDate(h.local_timestamp * 1000, 'HH:mm:ss', 'en-US')\n          : ''\n        );\n\n        if (h.type === 'state') {\n          if (h.subtype === 'open' || h.subtype === 'receive') {\n            // Look up block info to get sender account\n            additionalBlocksInfo.push({ hash: h.hash, link: h.link });\n\n            // Remove a receivable block if this is a receive for it\n            const sourceHashToFind = h.link;\n\n            this.pendingBlocks =\n              this.pendingBlocks.filter(\n                (knownReceivableBlock) =>\n                  (knownReceivableBlock.hash !== sourceHashToFind)\n              );\n          } else if (h.subtype === 'change') {\n            h.link_as_account = h.representative;\n            h.addressBookName = (\n                this.addressBook.getAccountName(h.link_as_account)\n              || this.getAccountLabel(h.link_as_account, null)\n            );\n          } else {\n            h.link_as_account = this.util.account.getPublicAccountID(this.util.hex.toUint8(h.link));\n            h.addressBookName = (\n                this.addressBook.getAccountName(h.link_as_account)\n              || this.getAccountLabel(h.link_as_account, null)\n            );\n          }\n        } else {\n          h.addressBookName = (\n              this.addressBook.getAccountName(h.account)\n            || this.getAccountLabel(h.account, null)\n          );\n        }\n\n        if (\n              (accountConfirmationHeight != null)\n            && (h.height != null)\n            && ( accountConfirmationHeight < parseInt(h.height, 10) )\n          ) {\n            h.confirmed = false;\n        }\n\n        return h;\n      });\n\n      // Currently not supporting non-state rep change or state epoch blocks\n      this.accountHistory = this.accountHistory.filter(h => h.type !== 'change' && h.subtype !== 'epoch');\n\n      if (additionalBlocksInfo.length) {\n        const blocksInfo = await this.api.blocksInfo(additionalBlocksInfo.map(b => b.link));\n\n        if (accountID !== this.accountID) {\n          // Navigated to a different account while block info was loading\n          return;\n        }\n\n        for (const block in blocksInfo.blocks) {\n          if (!blocksInfo.blocks.hasOwnProperty(block)) continue;\n\n          const matchingBlock = additionalBlocksInfo.find(a => a.link === block);\n          if (!matchingBlock) continue;\n          const accountHistoryBlock = this.accountHistory.find(h => h.hash === matchingBlock.hash);\n          if (!accountHistoryBlock) continue;\n\n          const blockData = blocksInfo.blocks[block];\n\n          accountHistoryBlock.link_as_account = blockData.block_account;\n          accountHistoryBlock.addressBookName = (\n              this.addressBook.getAccountName(blockData.block_account)\n            || this.getAccountLabel(blockData.block_account, null)\n          );\n        }\n      }\n\n    } else {\n      this.accountHistory = [];\n    }\n\n    this.loadingTxList = false;\n  }\n\n  async loadMore() {\n    if (this.pageSize <= this.maxPageSize) {\n      this.pageSize += 25;\n      await this.getAccountHistory(this.accountID, false);\n    }\n  }\n\n  async saveAddressBook() {\n    // Trim and remove duplicate spaces\n    this.addressBookModel = this.addressBookModel.trim().replace(/ +/g, ' ');\n\n    if (!this.addressBookModel) {\n      // Check for deleting an entry in the address book\n      if (this.addressBookEntry) {\n        this.addressBook.deleteAddress(this.accountID);\n        this.notifications.sendSuccess(`Successfully removed address book entry!`);\n        this.addressBookEntry = null;\n      }\n\n      this.showEditAddressBook = false;\n      return;\n    }\n\n    const regexp = new RegExp('^(Account|' + this.translocoService.translate('general.account') + ') #\\\\d+$', 'g');\n    if ( regexp.test(this.addressBookModel) === true ) {\n      return this.notifications.sendError(`This name is reserved for wallet accounts without a label`);\n    }\n\n    // Make sure no other entries are using that name\n    const accountIdWithSameName = this.addressBook.getAccountIdByName(this.addressBookModel);\n\n    if ( (accountIdWithSameName !== null) && (accountIdWithSameName !== this.accountID) ) {\n      return this.notifications.sendError(`This name is already in use! Please use a unique name`);\n    }\n\n    try {\n      const currentBalanceTracking = this.addressBook.getBalanceTrackingById(this.accountID);\n      const currentTransactionTracking = this.addressBook.getTransactionTrackingById(this.accountID);\n      await this.addressBook.saveAddress(this.accountID, this.addressBookModel, currentBalanceTracking, currentTransactionTracking);\n    } catch (err) {\n      this.notifications.sendError(`Unable to save entry: ${err.message}`);\n      return;\n    }\n\n    this.notifications.sendSuccess(`Address book entry saved successfully!`);\n\n    this.addressBookEntry = this.addressBookModel;\n    this.showEditAddressBook = false;\n  }\n\n  searchRepresentatives() {\n    if (this.representativeModel !== '' && !this.util.account.isValidAccount(this.representativeModel)) this.repStatus = 0;\n    else this.repStatus = null;\n\n    this.showRepresentatives = true;\n    const search = this.representativeModel || '';\n\n    const matches = this.representativeList\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      // remove duplicate accounts\n      .filter((item, pos, self) => this.util.array.findWithAttr(self, 'id', item.id) === pos)\n      .slice(0, 5);\n\n    this.representativeResults$.next(matches);\n  }\n\n  selectRepresentative(rep) {\n    this.showRepresentatives = false;\n    this.representativeModel = rep;\n    this.searchRepresentatives();\n    this.validateRepresentative();\n  }\n\n  async validateRepresentative() {\n    setTimeout(() => this.showRepresentatives = false, 400);\n    this.representativeModel = this.representativeModel.replace(/ /g, '');\n\n    if (this.representativeModel === '') {\n      this.representativeListMatch = '';\n      return;\n    }\n\n    const rep = this.repService.getRepresentative(this.representativeModel);\n    // const ninjaRep = await this.ninja.getAccount(this.representativeModel);\n\n    if (rep) {\n      this.representativeListMatch = rep.name;\n    } \n    // else if (ninjaRep) {\n    //   this.representativeListMatch = ninjaRep.alias;\n    // } \n    else {\n      this.representativeListMatch = '';\n    }\n  }\n\n  copied() {\n    this.notifications.removeNotification('success-copied');\n    this.notifications.sendSuccess(`Successfully copied to clipboard!`, { identifier: 'success-copied' });\n  }\n\n  // Remote signing methods\n  // An update to the Nano amount, sync the fiat value\n  syncFiatPrice() {\n    if (!this.validateAmount()) return;\n    const rawAmount = this.getAmountBaseValue(this.amount || 0).plus(this.amountRaw);\n    if (rawAmount.lte(0)) {\n      this.amountFiat = 0;\n      return;\n    }\n\n    // This is getting hacky, but if their currency is bitcoin, use 6 decimals, if it is not, use 2\n    const precision = this.settings.settings.displayCurrency === 'BTC' ? 1000000 : 100;\n\n    // Determine fiat value of the amount\n    const fiatAmount = this.util.nano.rawToMnano(rawAmount)\n    .times(this.price.price.lastPrice)\n    .times(precision)\n    .floor().div(precision).toNumber();\n\n    this.amountFiat = fiatAmount;\n  }\n\n  // An update to the fiat amount, sync the nano value based on currently selected denomination\n  syncNanoPrice() {\n    if (!this.amountFiat) {\n      this.amount = '';\n      return;\n    }\n    if (!this.util.string.isNumeric(this.amountFiat)) return;\n    const rawAmount = this.util.nano.mnanoToRaw(new BigNumber(this.amountFiat).div(this.price.price.lastPrice));\n    const nanoVal = this.util.nano.rawToNano(rawAmount).floor();\n    const nanoAmount = this.getAmountValueFromBase(this.util.nano.nanoToRaw(nanoVal));\n\n    this.amount = nanoAmount.toNumber();\n  }\n\n  searchAddressBook() {\n    this.showAddressBook = true;\n    const search = this.toAccountID || '';\n    const addressBook = this.addressBook.addressBook;\n\n    const matches = addressBook\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5);\n\n    this.addressBookResults$.next(matches);\n  }\n\n  selectBookEntry(account) {\n    this.showAddressBook = false;\n    this.toAccountID = account;\n    this.searchAddressBook();\n    this.validateDestination();\n  }\n\n  async validateDestination() {\n    // The timeout is used to solve a bug where the results get hidden too fast and the click is never registered\n    setTimeout(() => this.showAddressBook = false, 400);\n\n    // Remove spaces from the account id\n    this.toAccountID = this.toAccountID.replace(/ /g, '');\n\n    this.addressBookMatch = (\n        this.addressBook.getAccountName(this.toAccountID)\n      || this.getAccountLabel(this.toAccountID, null)\n    );\n\n    // const accountInfo = await this.walletService.walletApi.accountInfo(this.toAccountID);\n    this.toAccountStatus = null;\n    if (this.util.account.isValidAccount(this.toAccountID)) {\n      const accountInfo = await this.api.accountInfo(this.toAccountID);\n      if (accountInfo.error) {\n        if (accountInfo.error === 'Account not found') {\n          this.toAccountStatus = 1;\n        }\n      }\n      if (accountInfo && accountInfo.frontier) {\n        this.toAccountStatus = 2;\n      }\n    } else {\n      this.toAccountStatus = 0;\n    }\n  }\n\n  validateAmount() {\n    if (this.util.account.isValidNanoAmount(this.amount)) {\n      this.amountStatus = 1;\n      return true;\n    } else {\n      this.amountStatus = 0;\n      return false;\n    }\n  }\n\n  setMaxAmount() {\n    this.amountRaw = this.account.balance ? new BigNumber(this.account.balance).mod(this.nano) : new BigNumber(0);\n    const nanoVal = this.util.nano.rawToNano(this.account.balance).floor();\n    const maxAmount = this.getAmountValueFromBase(this.util.nano.nanoToRaw(nanoVal));\n    this.amount = maxAmount.toNumber();\n    this.syncFiatPrice();\n  }\n\n  getAmountBaseValue(value) {\n\n    switch (this.selectedAmount.value) {\n      default:\n      case 'nano': return this.util.nano.nanoToRaw(value);\n      case 'knano': return this.util.nano.knanoToRaw(value);\n      case 'mnano': return this.util.nano.mnanoToRaw(value);\n    }\n  }\n\n  getAmountValueFromBase(value) {\n    switch (this.selectedAmount.value) {\n      default:\n      case 'nano': return this.util.nano.rawToNano(value);\n      case 'knano': return this.util.nano.rawToKnano(value);\n      case 'mnano': return this.util.nano.rawToMnano(value);\n    }\n  }\n\n  showMobileMenuForTransaction(transaction) {\n    this.notifications.removeNotification('success-copied');\n\n    this.mobileTransactionData = transaction;\n    this.mobileTransactionMenuModal.show();\n  }\n\n  onReceiveFundsPress(receivableTransaction) {\n    if (receivableTransaction.loading || receivableTransaction.received) {\n      return;\n    }\n\n    this.receiveReceivableBlock(receivableTransaction);\n  }\n\n  async receiveReceivableBlock(receivableBlock) {\n    const sourceBlock = receivableBlock.hash;\n\n    if (this.wallet.isLocked()) {\n      const wasUnlocked = await this.wallet.requestWalletUnlock();\n\n      if (wasUnlocked === false) {\n        return;\n      }\n    }\n\n    receivableBlock.loading = true;\n\n    const createdReceiveBlockHash =\n      await this.nanoBlock.generateReceive(this.walletAccount, sourceBlock, this.wallet.isLedgerWallet());\n\n    if (createdReceiveBlockHash) {\n      receivableBlock.received = true;\n      this.mobileTransactionMenuModal.hide();\n      this.notifications.removeNotification('success-receive');\n      this.notifications.sendSuccess(`Successfully received nano!`, { identifier: 'success-receive' });\n      // clear the list of pending blocks. Updated again with reloadBalances()\n      this.wallet.clearPendingBlocks();\n    } else {\n      if (!this.wallet.isLedgerWallet()) {\n        // this.notifications.sendError(`There was a problem receiving the transaction, try manually!`, {length: 10000});\n      }\n    }\n\n    receivableBlock.loading = false;\n\n    await this.wallet.reloadBalances();\n\n    this.loadAccountDetailsThrottled({});\n  }\n\n  async generateSend() {\n    const isValid = this.util.account.isValidAccount(this.toAccountID);\n    if (!isValid) return this.notifications.sendWarning(`To account address is not valid`);\n    if (!this.accountID || !this.toAccountID) return this.notifications.sendWarning(`From and to account are required`);\n    if (!this.validateAmount()) return this.notifications.sendWarning(`Invalid XNO Amount`);\n\n    this.qrCodeImageBlock = null;\n\n    const from = await this.api.accountInfo(this.accountID);\n    const to = await this.api.accountInfo(this.toAccountID);\n    if (!from) return this.notifications.sendError(`From account not found`);\n\n    from.balanceBN = new BigNumber(from.balance || 0);\n    to.balanceBN = new BigNumber(to.balance || 0);\n\n    this.fromAccount = from;\n    this.toAccount = to;\n\n    const rawAmount = this.getAmountBaseValue(this.amount || 0);\n    this.rawAmount = rawAmount.plus(this.amountRaw);\n\n    const nanoAmount = this.rawAmount.div(this.nano);\n\n    if (this.amount < 0 || rawAmount.lessThan(0)) return this.notifications.sendWarning(`Amount is invalid`);\n    if (from.balanceBN.minus(rawAmount).lessThan(0)) return this.notifications.sendError(`From account does not have enough XNO`);\n\n    // Determine a proper raw amount to show in the UI, if a decimal was entered\n    this.amountRaw = this.rawAmount.mod(this.nano);\n\n    // Determine fiat value of the amount\n    this.amountFiat = this.util.nano.rawToMnano(rawAmount).times(this.price.price.lastPrice).toNumber();\n\n    const remaining = new BigNumber(from.balance).minus(this.rawAmount);\n    const remainingDecimal = remaining.toString(10);\n\n    const defaultRepresentative = this.settings.settings.defaultRepresentative || this.nanoBlock.getRandomRepresentative();\n    const representative = from.representative || defaultRepresentative;\n    const blockData = {\n      account: this.accountID.replace('xrb_', 'nano_').toLowerCase(),\n      previous: from.frontier,\n      representative: representative,\n      balance: remainingDecimal,\n      link: this.util.account.getAccountPublicKey(this.toAccountID),\n    };\n    this.blockHash = nanocurrency.hashBlock({\n      account: blockData.account,\n      link: blockData.link,\n      previous: blockData.previous,\n      representative: blockData.representative,\n      balance: blockData.balance\n    });\n    console.log('Created block', blockData);\n    console.log('Block hash: ' + this.blockHash);\n\n    // Previous block info\n    const previousBlockInfo = await this.api.blockInfo(blockData.previous);\n    if (!('contents' in previousBlockInfo)) return this.notifications.sendError(`Previous block not found`);\n    const jsonBlock = JSON.parse(previousBlockInfo.contents);\n    const blockDataPrevious = {\n      account: jsonBlock.account.replace('xrb_', 'nano_').toLowerCase(),\n      previous: jsonBlock.previous,\n      representative: jsonBlock.representative,\n      balance: jsonBlock.balance,\n      link: jsonBlock.link,\n      signature: jsonBlock.signature,\n    };\n\n    // Nano signing standard\n    this.qrString = 'nanosign:{\"block\":' + JSON.stringify(blockData) + ',\"previous\":' + JSON.stringify(blockDataPrevious) + '}';\n    const qrCode = await QRCode.toDataURL(this.qrString, { errorCorrectionLevel: 'L', scale: 16 });\n    this.qrCodeImageBlock = qrCode;\n  }\n\n  async generateReceive(pendingHash) {\n    this.qrCodeImageBlockReceive = null;\n    this.qrString = null;\n    this.blockHashReceive = null;\n\n    const UIkit = window['UIkit'];\n    const modal = UIkit.modal('#receive-modal');\n    modal.show();\n\n    const toAcct = await this.api.accountInfo(this.accountID);\n\n    const openEquiv = !toAcct || !toAcct.frontier; // if open block\n\n    const previousBlock = toAcct.frontier || this.zeroHash; // set to zeroes if open block\n    const defaultRepresentative = this.settings.settings.defaultRepresentative || this.nanoBlock.getRandomRepresentative();\n    const representative = toAcct.representative || defaultRepresentative;\n\n    const srcBlockInfo = await this.api.blocksInfo([pendingHash]);\n    const srcAmount = new BigNumber(srcBlockInfo.blocks[pendingHash].amount);\n    const newBalance = openEquiv ? srcAmount : new BigNumber(toAcct.balance).plus(srcAmount);\n    const newBalanceDecimal = newBalance.toString(10);\n\n    const blockData = {\n      account: this.accountID.replace('xrb_', 'nano_').toLowerCase(),\n      previous: previousBlock,\n      representative: representative,\n      balance: newBalanceDecimal,\n      link: pendingHash,\n    };\n\n    this.blockHashReceive = nanocurrency.hashBlock({\n      account: blockData.account,\n      link: blockData.link,\n      previous: blockData.previous,\n      representative: blockData.representative,\n      balance: blockData.balance\n    });\n    console.log('Created block', blockData);\n    console.log('Block hash: ' + this.blockHashReceive);\n\n    // Previous block info\n    let blockDataPrevious = null;\n    if (!openEquiv) {\n      const previousBlockInfo = await this.api.blockInfo(blockData.previous);\n      if (!('contents' in previousBlockInfo)) return this.notifications.sendError(`Previous block not found`);\n      const jsonBlock = JSON.parse(previousBlockInfo.contents);\n      blockDataPrevious = {\n        account: jsonBlock.account.replace('xrb_', 'nano_').toLowerCase(),\n        previous: jsonBlock.previous,\n        representative: jsonBlock.representative,\n        balance: jsonBlock.balance,\n        link: jsonBlock.link,\n        signature: jsonBlock.signature,\n      };\n    }\n\n    let qrData;\n    if (blockDataPrevious) {\n      qrData = {\n        block: blockData,\n        previous: blockDataPrevious\n      };\n    } else {\n      qrData = {\n        block: blockData\n      };\n    }\n\n    // Nano signing standard\n    this.qrString = 'nanosign:' + JSON.stringify(qrData);\n\n    const qrCode = await QRCode.toDataURL(this.qrString, { errorCorrectionLevel: 'L', scale: 16 });\n    this.qrCodeImageBlockReceive = qrCode;\n  }\n\n  async generateChange() {\n    if (!this.util.account.isValidAccount(this.representativeModel)) return this.notifications.sendError(`Not a valid representative account`);\n    this.qrCodeImageBlock = null;\n    this.blockHash = null;\n    this.qrString = null;\n\n    const account = await this.api.accountInfo(this.accountID);\n\n    if (!account || !('frontier' in account)) return this.notifications.sendError(`Account must be opened first!`);\n\n    const balance = new BigNumber(account.balance);\n    const balanceDecimal = balance.toString(10);\n    const blockData = {\n      account: this.accountID.replace('xrb_', 'nano_').toLowerCase(),\n      previous: account.frontier,\n      representative: this.representativeModel,\n      balance: balanceDecimal,\n      link: this.zeroHash,\n    };\n\n    this.blockHash = nanocurrency.hashBlock({\n      account: blockData.account,\n      link: blockData.link,\n      previous: blockData.previous,\n      representative: blockData.representative,\n      balance: blockData.balance\n    });\n\n    console.log('Created block', blockData);\n    console.log('Block hash: ' + this.blockHash);\n\n    // Previous block info\n    const previousBlockInfo = await this.api.blockInfo(blockData.previous);\n    if (!('contents' in previousBlockInfo)) return this.notifications.sendError(`Previous block not found`);\n    const jsonBlock = JSON.parse(previousBlockInfo.contents);\n    const blockDataPrevious = {\n      account: jsonBlock.account.replace('xrb_', 'nano_').toLowerCase(),\n      previous: jsonBlock.previous,\n      representative: jsonBlock.representative,\n      balance: jsonBlock.balance,\n      link: jsonBlock.link,\n      signature: jsonBlock.signature,\n    };\n\n    // Nano signing standard\n    this.qrString = 'nanosign:{\"block\":' + JSON.stringify(blockData) + ',\"previous\":' + JSON.stringify(blockDataPrevious) + '}';\n    const qrCode = await QRCode.toDataURL(this.qrString, { errorCorrectionLevel: 'L', scale: 16 });\n    this.qrCodeImageBlock = qrCode;\n  }\n\n  showRemote(state: boolean) {\n    this.remoteVisible = !state;\n  }\n\n  showRemoteModal() {\n    const UIkit = window['UIkit'];\n    const modal = UIkit.modal('#block-modal');\n    modal.show();\n    this.clearRemoteVars();\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'account1':\n          this.toAccountID = data.content;\n          this.validateDestination();\n          break;\n        case 'rep1':\n          this.representativeModel = data.content;\n          this.validateRepresentative();\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n  resetRaw() {\n    this.amountRaw = new BigNumber(0);\n  }\n\n  // End remote signing methods\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div\n    class=\"uk-width-1-1\"\n    [class.add-whitespace-underneath]=\"walletAccount && (showFullDetailsOnSmallViewports === false)\"\n  >\n\n    <div class=\"nano-card is-card\" *ngIf=\"walletAccount && (showFullDetailsOnSmallViewports === false)\">\n      <div class=\"logo\"></div>\n      <div class=\"card-contents\">\n        <div class=\"account-name-container\">\n          <div class=\"name\">{{\n              addressBookEntry\n            ? addressBookEntry\n            : (('general.account' | transloco) + ' #' + walletAccount.index)\n          }}</div>\n          <div #selectButton class=\"select-button closed\" (click)=\"mobileAccountMenuModal.show()\">\n            <div class=\"circle\"></div>\n            <div class=\"circle\"></div>\n            <div class=\"circle\"></div>\n          </div>\n        </div>\n        <div class=\"account-balances\">\n          <ng-container *ngIf=\"!loadingAccountDetails else cardBalancesLoading\">\n            <div class=\"balance-container primary\">\n              <!-- <div class=\"currency-name\">NANO</div> -->\n              <div class=\"amount-container\">\n                <div class=\"amount-integer\">{{ !account ? 0 : (account.balance || 0 | rai: 'mnano,true') | amountsplit: 0 }}</div>\n                <div class=\"amount-fractional\">{{ !account ? 0 : (account.balance || 0 | rai: 'mnano,true') | amountsplit: 1 }}</div>\n                <div class=\"amount-updating\" *ngIf=\"wallet.updatingBalance && isConfigured()\"><div uk-spinner=\"ratio: 0.5;\"></div></div>\n              </div>\n            </div>\n            <div class=\"balance-container converted\" *ngIf=\"settings.settings.displayCurrency\">\n              <div class=\"currency-name\"><span class=\"estimate-symbol\">~</span>{{ settings.settings.displayCurrency }}</div>\n              <div class=\"amount-container\">\n                <div class=\"amount-integer\">{{ (account.balanceFiat | fiat: settings.settings.displayCurrency) | amountsplit: 0 }}</div>\n                <div class=\"amount-fractional\">{{ (account.balanceFiat | fiat: settings.settings.displayCurrency) | amountsplit: 1 }}</div>\n              </div>\n            </div>\n          </ng-container>\n          <ng-template #cardBalancesLoading>\n            <div class=\"spinner-container\">\n              <div uk-spinner=\"ratio: 0.6;\"></div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n\n    <h2\n      class=\"uk-heading-divider\"\n      [class.hide-on-small-viewports]=\"walletAccount && (showFullDetailsOnSmallViewports === false)\"\n    >{{ walletAccount ? ('account-details.account-details' | transloco) : ('account-details.network-explorer' | transloco) }}</h2>\n\n    <div\n      class=\"uk-card uk-card-default uk-margin\"\n      [class.hide-on-small-viewports]=\"walletAccount && (showFullDetailsOnSmallViewports === false)\"\n    >\n\n      <div class=\"account-details-header uk-card-header uk-visible-toggle\">\n\n        <div uk-grid>\n\n          <app-nano-identicon scale=\"12\" [accountID]=\"accountID\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n\n          <div class=\"uk-width-1-1 uk-width-expand@s\">\n\n            <div\n              *ngIf=\"walletAccount && (addressBookEntry || showEditAddressBook)\"\n              class=\"account-type-label\"\n              [class.editing-name]=\"showEditAddressBook\"\n            >\n              {{ ('general.account' | transloco) + ' #' + walletAccount.index }}\n            </div>\n            <div\n              *ngIf=\"!walletAccount\"\n              class=\"account-type-label\"\n              [class.editing-name]=\"showEditAddressBook\"\n            >\n              {{ 'account-details.external-address' | transloco }}\n            </div>\n\n            <div uk-grid>\n              <div class=\"uk-width-1-1\" *ngIf=\"showEditAddressBook\">\n                <div class=\"uk-margin\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip uk-text-success\" (click)=\"saveAddressBook()\" uk-icon=\"icon: check\" uk-tooltip [title]=\"'general.save' | transloco\"></a>\n                    <a class=\"uk-form-icon uk-form-icon-flip uk-text-danger\" style=\"margin-right: 26px;\" (click)=\"showEditAddressBook = false\" uk-tooltip [title]=\"'general.cancel' | transloco\" uk-icon=\"icon: close\"></a>\n                    <input class=\"uk-input\" (keyup.enter)=\"saveAddressBook()\" [(ngModel)]=\"addressBookModel\" [placeholder]=\"'account-details.address-book-name-leave-blank-to-remove' | transloco\" type=\"text\" style=\"padding-right: 60px;\" maxlength=\"64\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"uk-width-1-1\" *ngIf=\"!showEditAddressBook\">\n                <div class=\"uk-width-1-1\">\n                  <div uk-grid>\n                  <h3 class=\"uk-width-auto uk-card-title uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">{{\n                      addressBookEntry\n                    ? addressBookEntry\n                    : (\n                        walletAccount\n                      ? (('general.account' | transloco) + ' #' + walletAccount.index)\n                      : ('account-details.no-label-set' | transloco)\n                    )\n                  }}</h3>\n                    <div class=\"uk-width-auto\" style=\"padding-left: 10px; margin-top: 3px;\">\n                      <a style=\"display: contents;\"><span uk-icon=\"icon: pencil;\" uk-tooltip (click)=\"showEditAddressBook = !showEditAddressBook\" [title]=\"'general.edit' | transloco\"></span></a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"uk-width-1-1 uk-margin-small-top\">\n                <div uk-grid>\n                  <div class=\"nano-address-monospace uk-width-auto uk-text-small uk-text-truncate\" style=\"max-width: calc(100% - 60px);\">\n                    <app-nano-account-id [accountID]=\"accountID\" [known]=\"known\"></app-nano-account-id>\n                  </div>\n                  <div class=\"nano-address-actions uk-width-auto\" style=\"margin-top: 0;\">\n                    <ul class=\"uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"accountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" [title]=\"'general.copy' | transloco\" uk-tooltip></a></li>\n                      <li><a (click)=\"qrModal.show()\" [title]=\"'general.show-qr-code' | transloco\" uk-tooltip class=\"icon-qr-code\"></a></li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n      <div class=\"uk-card-header uk-form-horizontal uk-width-expand\" *ngIf=\"settings.settings.serverAPI\">\n\n        <div uk-grid>\n\n          <div class=\"representative-details uk-width-1-1@s uk-width-1-2@l\">\n\n            <div class=\"details-header\">{{ 'general.representative' | transloco }}</div>\n\n            <div *ngIf=\"!loadingAccountDetails else repLoading\">\n              <div class=\"uk-width-auto uk-text-truncate\" *ngIf=\"(account && account.representative) else noRepresentative\">\n                <div class=\"representative-label-container\">\n                  <div class=\"account-label rep\">{{ repLabel ? repLabel : ('general.unknown' | transloco) }}</div>\n                  <div class=\"uk-width-auto uk-flex-inline uk-flex-middle\" style=\"padding-left: 10px;\" *ngIf=\"account && account.representative\">\n                    <div class=\"uk-text-small text-half-muted\" style=\"margin-right: 15px\" *ngIf=\"!repVotingWeight.isZero()\">{{ repVotingWeight.toFixed(2) }}%</div>\n                    <ul class=\"uk-iconnav\">\n                      <li *ngIf=\"repDonationAddress\">\n                        <a class=\"rep-donation-icon\" uk-icon=\"icon: heart;\" [title]=\"'account-details.donate-to-representative' | transloco\" uk-tooltip routerLink=\"/send\" [queryParams]=\"{ to: repDonationAddress }\"></a>\n                      </li>\n                      <li *ngIf=\"walletAccount\">\n                        <a uk-icon=\"icon: pencil;\" title=\"Change Representative\" uk-tooltip routerLink=\"/representatives\" [queryParams]=\"{ hideOverview: true, showRecommended: true, accounts: accountID }\"></a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <div class=\"nano-address-monospace\" [title]=\"account.representative\">\n                  <app-nano-account-id [accountID]=\"account.representative\" middle=\"off\" [known]=\"known\"></app-nano-account-id>\n                </div>\n              </div>\n              <ng-template #noRepresentative>\n                <div class=\"uk-text-muted\" style=\"margin-top: 8px;\">{{ 'change-rep-widget.representative-none' | transloco }}</div>\n              </ng-template>\n            </div>\n            <ng-template #repLoading>\n              <div class=\"uk-margin-small-top\">\n                <div uk-spinner=\"ratio: 0.5;\" style=\"vertical-align: 2px;\"></div>\n              </div>\n            </ng-template>\n\n          </div>\n\n          <div class=\"balance-details uk-width-1-1@s uk-width-1-2@l\">\n            <div class=\"details-header\">{{ 'general.balance' | transloco }}</div>\n            <ng-container *ngIf=\"!loadingAccountDetails else balanceLoading\">\n              <div>\n                <div class=\"account-amounts-primary\">\n                  <div\n                    class=\"account-amounts-primary-confirmed\"\n                    [title]=\"( (account && account.balanceRaw && account.balanceRaw.gt(0) ) ? ( '+' + ( account.balanceRaw.toString(10)  ) + ' raw' ) : '' )\"\n                  >\n                    <span class=\"amount-currency-symbol xno-symbol\"></span>\n                    <span class=\"amount-integer\">{{ !account ? 0 : (account.balance || 0 | rai: 'mnano,true') | amountsplit: 0 }}</span>\n                    <span class=\"amount-fractional\">{{ !account ? 0 : (account.balance || 0 | rai: 'mnano,true') | amountsplit: 1 }}</span>\n                  </div>\n                  <div\n                    *ngIf=\"account && account.pending && (account.pending > 0)\"\n                    class=\"incoming-label\"\n                    [title]=\"( (account && account.pendingRaw && account.pendingRaw.gt(0) ) ? ( '+' + ( account.pendingRaw.toString(10) ) + ' raw' ) : '' )\"\n                  >\n                    <div class=\"text-snippet\">{{ 'general.new' | transloco }}</div>\n                    <div class=\"text-full\">\n                      <div class=\"amount-sign\">+</div>\n                      <div class=\"amount-currency-symbol xno-symbol\"></div>\n                      <div class=\"amount-integer\">{{ account.pending | rai: 'mnano,true' | amountsplit: 0 }}</div>\n                      <div class=\"amount-fractional\">{{ account.pending | rai: 'mnano,true' | amountsplit: 1 }}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"account-amounts-converted text-half-muted\">\n                <ng-container *ngIf=\"account\">{{ (account.balanceFiat | fiat: settings.settings.displayCurrency) }}</ng-container>\n              </div>\n            </ng-container>\n          </div>\n          <ng-template #balanceLoading>\n            <div class=\"uk-margin-small-top\">\n              <div uk-spinner=\"ratio: 0.5;\" style=\"vertical-align: 2px;\"></div>\n            </div>\n          </ng-template>\n        </div>\n\n      </div>\n\n      <div class=\"uk-card-header uk-form-horizontal\" *ngIf=\"settings.settings.serverAPI\">\n\n        <div class=\"details-header advanced-options-link\" (click)=\"showAdvancedOptions = !showAdvancedOptions\">\n          {{ 'account-details.advanced-options' | transloco }}\n          <div [class]=\"['chevron', ( showAdvancedOptions ? 'chevron-up' : 'chevron-down' )]\"></div>\n        </div>\n\n        <div class=\"advanced-options\" *ngIf=\"showAdvancedOptions\">\n          <div class=\"advanced-option\" *ngIf=\"(account.confirmation_height != null) && (account.block_count != null) && (account.block_count > 0)\">\n            <div>\n              <div>{{ 'account-details.confirmed-blocks' | transloco }}:</div>\n              <div>\n                {{ account.confirmation_height | translocoDecimal  }} / {{ account.block_count | translocoDecimal }}\n              </div>\n              <div class=\"uk-text-small text-half-muted\">\n                {{ ( (account.confirmation_height / account.block_count) * 100 ) | number:'1.0-2' }}%\n              </div>\n            </div>\n          </div>\n          <div class=\"advanced-option\">\n            <div>{{ 'account-details.enable-remote-signing-multisig' | transloco }}</div>\n            <input class=\"uk-checkbox\" type=\"checkbox\" name=\"remoteVisible\" value=\"1\" [(ngModel)]=\"remoteVisible\">\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"uk-card-header uk-form-horizontal\" *ngIf=\"remoteVisible\">\n\n        <div class=\"details-header\">{{ 'account-details.block-signing' | transloco }}</div>\n\n        <p>Create a new SEND or CHANGE block below. For any incoming transaction in the list: Use SIGN BLOCK.</p>\n        <button class=\"uk-button uk-button-primary\" (click)=\"showRemoteModal()\">CREATE NEW BLOCK</button>\n\n      </div>\n\n    </div>\n\n    <div class=\"transactions-list-header uk-width-1-1 uk-flex uk-flex-center uk-flex-middle uk-margin-small-bottom\">\n      <h3 class=\"uk-margin-remove-bottom\">{{ 'account-details.transactions' | transloco }}</h3>\n      <ul class=\"uk-width-auto uk-iconnav uk-margin-remove-left\" style=\"margin-top: -1px;\">\n        <li>\n          <div\n            uk-spinner=\"ratio: 0.5;\"\n            class=\"icon-transactions-refresh spinner\"\n            *ngIf=\"(loadingIncomingTxList || loadingTxList || loadingAccountDetails) else notUpdatingTxList\"\n          ></div>\n          <ng-template #notUpdatingTxList>\n            <a\n              class=\"icon-transactions-refresh\"\n              [class.disabled]=\"!manualRefreshAllowed\"\n              [class.uk-text-muted]=\"!manualRefreshAllowed\"\n              uk-icon=\"icon: refresh;\"\n              [title]=\"'general.reload' | transloco\"\n              uk-tooltip\n              (click)=\"onRefreshButtonClick()\"\n            ></a>\n          </ng-template>\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"uk-overflow-hidden\">\n\n      <div class=\"transactions-list-mobile only-on-small-viewports\">\n        <ng-container *ngFor=\"let transaction of pendingBlocks\">\n          <app-nano-transaction-mobile\n            [transaction]=\"transaction\"\n            [isHidden]=\"transaction.received\"\n            [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\"\n            (click)=\"showMobileMenuForTransaction(transaction)\"\n          ></app-nano-transaction-mobile>\n        </ng-container>\n\n        <!-- Don't show if \"Loading transactions...\" is already shown -->\n        <div class=\"rounded-area\" *ngIf=\"(loadingIncomingTxList && !loadingTxList && !loadingAccountDetails)\">\n          <div style=\"text-align: center;\"><span class=\"uk-margin-right\" uk-spinner></span> {{ 'account-details.loading-incoming-transactions' | transloco }}</div>\n        </div>\n\n        <ng-container *ngFor=\"let transaction of accountHistory; let transactionIdx = index;\">\n          <div\n            class=\"date-header text-half-muted\"\n            *ngIf=\"(\n                ( accountHistory[transactionIdx - 1] == null )\n              || (\n                  transaction.local_date_string\n                !== accountHistory[transactionIdx - 1].local_date_string\n              )\n            )\"\n          >{{\n              (transaction.local_date_string === dateStringToday)\n            ? 'Today'\n            : (\n                (transaction.local_date_string === dateStringYesterday)\n              ? 'Yesterday'\n              : transaction.local_date_string\n            )\n          }}</div>\n          <app-nano-transaction-mobile\n            [transaction]=\"transaction\"\n            [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\"\n            (click)=\"showMobileMenuForTransaction(transaction)\"\n          ></app-nano-transaction-mobile>\n        </ng-container>\n\n        <div class=\"rounded-area\" *ngIf=\"(loadingIncomingTxList || loadingTxList || loadingAccountDetails) else notLoadingTransactionsMobile\">\n          <div style=\"text-align: center;\"><span class=\"uk-margin-right\" uk-spinner></span> {{ 'account-details.loading-transactions' | transloco }}</div>\n        </div>\n        <ng-template #notLoadingTransactionsMobile>\n          <div class=\"rounded-area interactable\" *ngIf=\"!accountHistory.length && !pendingBlocks.length\">\n            <div style=\"text-align: center;\">{{ 'account-details.no-transactions' | transloco }}</div>\n          </div>\n          <div class=\"rounded-area interactable more-results\" (click)=\"loadMore()\" *ngIf=\"accountHistory.length + 1 >= pageSize && pageSize <= maxPageSize\">\n            {{ 'general.show-more' | transloco }}<br>\n            <div class=\"chevron chevron-down\"></div>\n          </div>\n        </ng-template>\n      </div>\n\n      <table class=\"transactions-list hide-on-small-viewports uk-table uk-table-striped uk-table-small\" style=\"margin-top: 0;\">\n        <thead>\n        <tr>\n          <th scope=\"col\" class=\"type-column\"></th>\n          <th scope=\"col\" class=\"account-column\">{{ 'general.account' | transloco }} / {{ 'general.block' | transloco }}</th>\n          <th scope=\"col\" class=\"amount-column\">{{ 'general.amount' | transloco }}</th>\n          <th scope=\"col\" class=\"date-column\">{{ 'general.date' | transloco }}</th>\n        </tr>\n        </thead>\n        <tbody>\n\n        <tr *ngFor=\"let pending of pendingBlocks\" [class]=\"{ 'uk-text-muted': true, 'uk-hidden': pending.received }\">\n          <td class=\"type-column\">\n            <span class=\"type uk-text-small\" uk-icon=\"icon: plus-circle; ratio: 1.2;\"></span>\n          </td>\n          <td class=\"account-column uk-visible-toggle uk-text-truncate\">\n            <div uk-grid class=\"uk-flex-nowrap\">\n              <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                <a [routerLink]=\"'/account/' + pending.account\" class=\"account-container uk-text-truncate\" [title]=\"'general.view-details' | transloco\" uk-tooltip>\n                  <div class=\"identicon-name-row uk-text-truncate\">\n                    <app-nano-identicon scale=\"6\" [accountID]=\"pending.account\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                    <div class=\"account-label uk-text-truncate\" *ngIf=\"pending.addressBookName\">{{ pending.addressBookName }}</div>\n                  </div>\n                  <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\">\n                    <app-nano-account-id [accountID]=\"pending.account\" middle=\"auto\" [known]=\"known\"></app-nano-account-id>\n                  </div>\n                </a>\n              </div>\n              <div class=\"nano-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"pending.account\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" [title]=\"'general.copy' | transloco\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n            <a [routerLink]=\"'/transaction/' + pending.hash\" class=\"uk-link-text uk-text-small uk-text-muted uk-text-truncate block-hash block-hash-monospace\" [title]=\"'general.view-details' | transloco\" uk-tooltip>{{ pending.hash }}</a>\n          </td>\n          <ng-template #transactionActionsOrDate>\n            <ng-container *ngIf=\"(walletAccount || remoteVisible) else noActionsAvailable\">\n              <div class=\"button-container\" *ngIf=\"walletAccount\">\n                <button *ngIf=\"!pending.loading\" class=\"uk-button uk-button-primary uk-text-center uk-width-auto\" type=\"button\" (click)=\"receiveReceivableBlock(pending)\">RECEIVE</button>\n                <button *ngIf=\"pending.loading\" class=\"uk-button uk-button-secondary uk-disabled uk-button-small nlt-icon-button nlt-icon-button-inline\"><span class=\"spinner\" uk-spinner=\"ratio: 0.5;\"></span> Receiving</button>\n              </div>\n              <div class=\"button-container\" *ngIf=\"remoteVisible\">\n                <button class=\"uk-button uk-button-primary uk-text-center uk-width-auto remote-sign\" type=\"button\" (click)=\"generateReceive(pending.hash)\">SIGN BLOCK</button>\n              </div>\n            </ng-container>\n            <ng-template #noActionsAvailable>\n              <span\n                class=\"transaction-date\"\n                [class.uk-text-muted]=\"!pending.local_timestamp\"\n                [class.date-unknown]=\"!pending.local_timestamp\"\n              >\n                <span class=\"date\">{{ pending.local_date_string }}</span>\n                <span class=\"time\">{{ pending.local_time_string }}</span>\n              </span>\n            </ng-template>\n          </ng-template>\n          <td class=\"amount-column uk-text-middle uk-text-muted\" [title]=\"('Incoming Transaction') + ( (pending.amountRaw && (pending.amountRaw > 0) ) ? ( ', +' + ( pending.amountRaw.toString(10) ) + ' raw' ) : '' )\">\n            <span class=\"uk-text-small\">{{ 'general.blockactions.ready-to-receive' | transloco }}</span><br>\n            <span class=\"amount-integer\">{{ pending.amount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n            <span class=\"amount-fractional\">{{ pending.amount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n            <span class=\"currency-name\">NANO</span>\n            <div class=\"compact-actions-date\">\n              <ng-template [ngTemplateOutlet]=\"transactionActionsOrDate\"></ng-template>\n            </div>\n          </td>\n          <td class=\"date-column uk-text-middle uk-text-truncate\">\n            <ng-template [ngTemplateOutlet]=\"transactionActionsOrDate\"></ng-template>\n          </td>\n        </tr>\n\n        <!-- Don't show if \"Loading transactions...\" is already shown -->\n        <tr *ngIf=\"(loadingIncomingTxList && !loadingTxList && !loadingAccountDetails)\">\n          <td colspan=\"4\" style=\"text-align: center;\"><span class=\"uk-margin-right\" uk-spinner></span> {{ 'account-details.loading-incoming-transactions' | transloco }}</td>\n        </tr>\n\n        <tr *ngFor=\"let history of accountHistory\">\n          <td class=\"type-column\">\n            <span class=\"type uk-text-small uk-text-success\" uk-icon=\"icon: plus-circle; ratio: 1.2;\" *ngIf=\"(history.type == 'receive' || history.subtype == 'receive' || history.type == 'open')\"></span>\n            <span class=\"type uk-text-small uk-text-danger\" uk-icon=\"icon: minus-circle; ratio: 1.2;\" *ngIf=\"(history.type == 'send' || history.subtype == 'send')\"></span>\n            <span class=\"type uk-text-small rep-change\" uk-icon=\"icon: cog; ratio: 1.2;\" *ngIf=\"(history.type == 'change' || history.subtype == 'change')\"></span>\n          </td>\n          <td class=\"account-column uk-text-middle uk-visible-toggle uk-text-truncate\">\n            <div uk-grid class=\"uk-flex-nowrap\">\n              <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.account)\" class=\"account-container uk-text-truncate\" [title]=\"'general.view-details' | transloco\" uk-tooltip>\n                  <div class=\"identicon-name-row uk-text-truncate\">\n                    <app-nano-identicon scale=\"6\" [accountID]=\"history.link_as_account || history.account\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                    <div class=\"account-label uk-text-truncate\" *ngIf=\"history.addressBookName\">{{ history.addressBookName }}</div>\n                  </div>\n                  <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\">\n                    <app-nano-account-id [accountID]=\"history.link_as_account || history.account\" middle=\"auto\" [known]=\"known\"></app-nano-account-id>\n                  </div>\n                </a>\n              </div>\n              <div class=\"nano-address-actions uk-width-auto uk-flex uk-flex-bottom\" style=\"margin-bottom: 11px !important; flex-shrink: 0;\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"history.link_as_account || history.account\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" [title]=\"'general.copy' | transloco\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n            <a [routerLink]=\"'/transaction/' + history.hash\" class=\"uk-link-text uk-text-small uk-text-muted uk-text-truncate block-hash block-hash-monospace\" [title]=\"'general.view-details' | transloco\" uk-tooltip>{{ history.hash }}</a>\n          </td>\n          <ng-template #transactionActionsOrDate>\n            <span\n              class=\"transaction-date\"\n              [class.uk-text-muted]=\"!history.local_timestamp\"\n              [class.date-unknown]=\"!history.local_timestamp\"\n            >\n              <span class=\"date\">{{ history.local_date_string }}</span>\n              <span class=\"time\"> {{ history.local_time_string }}</span>\n            </span>\n            <div class=\"label-unconfirmed\" *ngIf=\"(history.confirmed === false)\">\n              <div class=\"uk-text-small uk-text-muted\">{{ 'account-details.awaiting-confirmation' | transloco }}</div>\n            </div>\n          </ng-template>\n          <td [ngClass]=\"{\n            'amount-column': true,\n            'uk-text-middle': true,\n            'uk-text-success': (history.type == 'receive' || history.subtype == 'receive' || history.type == 'open' || history.subtype == 'open'),\n            'uk-text-danger': (history.type == 'send' || history.subtype == 'send'),\n            'rep-change': (history.type == 'change' || history.subtype == 'change')\n          }\">\n            <span *ngIf=\"isNaN(history.amount)\">\n              <span\n                class=\"uk-text-small\"\n                [class.text-half-muted]=\"(history.confirmed === false)\"\n                [title]=\"( (history.confirmed === false) ? ('account-details.this-change-has-not-yet-been-confirmed-by-the-network' | transloco) : '' )\"\n                uk-tooltip\n              >\n                {{ 'general.blockactions.rep-change' | transloco }}\n                <span class=\"icon-unconfirmed\" uk-icon=\"icon: clock;\" *ngIf=\"(history.confirmed === false)\"></span>\n              </span>\n            </span>\n            <span *ngIf=\"!isNaN(history.amount)\">\n              <ng-container *ngIf=\"(history.type == 'receive' || history.subtype == 'receive' || history.type == 'open')\">\n                <span class=\"uk-text-small\"\n                [class.text-half-muted]=\"(history.confirmed === false)\"\n                [title]=\"( (history.confirmed === false) ? ('account-details.this-transaction-has-not-yet-been-confirmed-by-the-network' | transloco) : '' )\"\n                uk-tooltip\n              >\n                  {{ 'general.blockactions.received' | transloco }}\n                  <span class=\"icon-unconfirmed\" uk-icon=\"icon: clock;\" *ngIf=\"(history.confirmed === false)\"></span>\n                </span><br>\n              </ng-container>\n              <ng-container *ngIf=\"(history.type == 'send' || history.subtype == 'send')\">\n                <span class=\"uk-text-small\"\n                  [class.text-half-muted]=\"(history.confirmed === false)\"\n                  [title]=\"( (history.confirmed === false) ? ('account-details.this-transaction-has-not-yet-been-confirmed-by-the-network' | transloco) : '' )\"\n                  uk-tooltip\n                >\n                  {{ 'general.blockactions.sent' | transloco }}\n                  <span class=\"icon-unconfirmed\" uk-icon=\"icon: clock;\" *ngIf=\"(history.confirmed === false)\"></span>\n                </span><br>\n              </ng-container>\n              <span class=\"amount-integer\">{{ history.amount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n              <span class=\"amount-fractional\">{{ history.amount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n              <span class=\"currency-name\">NANO</span>\n              <div class=\"compact-actions-date text-half-muted\">\n                <ng-template [ngTemplateOutlet]=\"transactionActionsOrDate\"></ng-template>\n              </div>\n            </span>\n          </td>\n          <td class=\"date-column uk-text-middle uk-text-truncate\">\n            <ng-template [ngTemplateOutlet]=\"transactionActionsOrDate\"></ng-template>\n          </td>\n        </tr>\n\n        <tr *ngIf=\"(loadingIncomingTxList || loadingTxList || loadingAccountDetails) else notLoadingTransactions\">\n          <td colspan=\"4\" style=\"text-align: center;\"><span class=\"uk-margin-right\" uk-spinner></span> {{ 'account-details.loading-transactions' | transloco }}</td>\n        </tr>\n        <ng-template #notLoadingTransactions>\n          <tr *ngIf=\"!accountHistory.length && !pendingBlocks.length\">\n            <td colspan=\"4\" style=\"text-align: center;\">{{ 'account-details.no-transactions' | transloco }}</td>\n          </tr>\n          <tr *ngIf=\"accountHistory.length + 1 >= pageSize && pageSize <= maxPageSize\">\n            <td colspan=\"4\" class=\"more-results\">\n              <a (click)=\"loadMore()\" class=\"uk-link-text\">\n                {{ 'general.show-more' | transloco }}<br>\n                <div class=\"chevron chevron-down\"></div>\n              </a>\n            </td>\n          </tr>\n        </ng-template>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<!-- Modal for remote receive incoming -->\n<div class=\"modal-position-bottom\" id=\"receive-modal\" uk-modal>\n  <div class=\"uk-modal-dialog uk-modal-body modal-qr\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-header\">\n        <h2 class=\"uk-modal-title\">Unsigned Incoming Block</h2>\n    </div>\n    <div class=\"uk-modal-body modal-qr-body\">\n      <a routerLink=\"/qr-scan\" routerLinkActive=\"active\" class=\"uk-modal-close\">Scan</a> the unsigned QR with an offline Nault, or copy the \"Unsigned Block\" to <a routerLink=\"/remote-signing\" routerLinkActive=\"active\" class=\"uk-modal-close\">Step 2</a><br><br>\n\n      <div *ngIf=\"blockHashReceive\" class=\"uk-width-1-1 uk-text-center uk-margin-small-bottom\" style=\"display: flex; justify-content: center;\">\n        <span class=\"uk-text-small\" uk-tooltip title=\"Unsigned block string to be copied to remote device\" style=\"overflow-wrap: anywhere;\"><strong>Unsigned Block</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"qrString\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n        <span class=\"uk-text-small\" uk-tooltip title=\"Final block hash to be signed or verified\" style=\"overflow-wrap: anywhere; margin-left: 50px;\"><strong>Block Hash</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"blockHashReceive\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n      </div>\n\n      <div class=\"uk-width-1-1 uk-text-center\">\n        <img *ngIf=\"qrCodeImageBlockReceive\" [src]=\"qrCodeImageBlockReceive\" class=\"block-qr\" alt=\"QR code\"><br />\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal for creating send and change block for remote signing-->\n<div class=\"modal-position-bottom\" id=\"block-modal\" uk-modal>\n  <div class=\"uk-modal-dialog uk-modal-body modal-block\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-header\">\n        <h2 class=\"uk-modal-title\">Create Block for Remote Signing</h2>\n    </div>\n    <div class=\"uk-modal-body modal-block-body\">\n      <ol>\n        <li>Generate a nano block below. No wallet import needed.</li>\n        <li><a routerLink=\"/qr-scan\" routerLinkActive=\"active\" class=\"uk-modal-close\">Scan</a> the unsigned QR with an offline Nault, or copy the \"Unsigned Block\" to <a routerLink=\"/remote-signing\" routerLinkActive=\"active\" class=\"uk-modal-close\">Step 2</a>.</li>\n      </ol>\n\n      <div class=\"uk-margin-small-bottom\">\n        <strong style=\"margin-right: 6px;\">Block Type</strong>\n        <span uk-icon=\"icon: info;\" uk-tooltip title=\"The block type to create for remote signing. Receiving can be done from the transactions list.\"></span>\n      </div>\n      <label class=\"uk-margin-medium-right\"><input class=\"uk-radio\" type=\"radio\" name=\"blocktype\" value={{blockTypes[0]}} [(ngModel)]=\"blockTypeSelected\"> {{blockTypes[0]}}</label>\n      <label class=\"uk-margin-medium-right\"><input class=\"uk-radio\" type=\"radio\" name=\"blocktype\" value={{blockTypes[1]}} [(ngModel)]=\"blockTypeSelected\"> {{blockTypes[1]}}</label>\n      <br><br>\n\n      <div *ngIf=\"blockTypeSelected === blockTypes[0]\" class=\"uk-form-horizontal\">\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\" for=\"form-horizontal-text2\">To Account</label>\n          <div class=\"uk-form-controls\">\n            <div class=\"form-input-destination uk-inline uk-width-1-1\">\n              <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('account1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n              <input (blur)=\"validateDestination()\" (input)=\"searchAddressBook()\" (focus)=\"searchAddressBook()\" [(ngModel)]=\"toAccountID\" [ngClass]=\"{ 'uk-form-success': toAccountStatus === 2, 'uk-form-danger': toAccountStatus === 0 }\" class=\"uk-input\" id=\"form-horizontal-text2\" type=\"text\" placeholder=\"Account to send to\" autocomplete=\"off\">\n\n              <div *ngIf=\"(addressBookResults$ | async).length\" [hidden]=\"!showAddressBook\" class=\"uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                <ul class=\"uk-nav uk-nav-default\">\n                  <li class=\"uk-nav-header\">Address Book Results</li>\n                  <li class=\"uk-nav-divider\"></li>\n                  <li *ngFor=\"let book of addressBookResults$ | async\">\n                    <a (click)=\"selectBookEntry(book.account)\">{{ book.name }}</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-form-controls\" *ngIf=\"addressBookMatch\">\n            <div class=\"uk-inline uk-width-1-1\">\n              <span class=\"account-label blue uk-margin-small-top\">{{ addressBookMatch }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div uk-grid>\n          <div class=\"uk-width-1-1\">\n            <label class=\"uk-form-label\" for=\"form-horizontal-text\">Amount</label>\n            <div class=\"form-amount uk-form-controls\">\n              <div uk-grid>\n                <div class=\"uk-width-1-1\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip form-icon-btn\" (click)=\"setMaxAmount()\" style=\"padding-right: 7px;\" uk-tooltip title=\"Set Maximum Amount\">Max</a>\n                    <input [(ngModel)]=\"amount\" [ngClass]=\"{ 'uk-form-danger': amountStatus === 0 }\" class=\"uk-input\" id=\"form-horizontal-text\" (input)=\"syncFiatPrice()\" type=\"text\" placeholder=\"Amount of {{ selectedAmount.name }} to send\" maxlength=\"40\">\n                  </div>\n                  <div *ngIf=\"amountRaw.gt(0)\" class=\"uk-width-1-1 uk-width-3-5@m uk-text-small uk-text-muted uk-margin-remove\">\n                    <span uk-tooltip title=\"Additional raw to send\">+{{ amountRaw.toString(10) }} raw</span> &nbsp; <a class=\"uk-text-danger\" (click)=\"resetRaw()\" uk-tooltip title=\"Remove the additional raw amount from the total amount\" uk-icon=\"icon: close\"></a>\n                  </div>\n                  <div class=\"uk-width-1-1\" style=\"margin-top: 10px;\" *ngIf=\"settings.settings.displayCurrency\">\n                    <div class=\"uk-width-1-1 uk-inline\">\n                      <a class=\"uk-form-icon uk-link-reset uk-link-muted\" style=\"padding-left: 7px;\" uk-tooltip title=\"Last Price: {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / XNO\">{{ settings.settings.displayCurrency | currencySymbol }}</a>\n                      <input [(ngModel)]=\"amountFiat\" (input)=\"syncNanoPrice()\" style=\"padding-left: 50px !important;\" class=\"uk-input\" id=\"form-horizontal-text-fiat\" type=\"text\" placeholder=\"Amount of {{ settings.settings.displayCurrency }} to send\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"blockTypeSelected === blockTypes[1]\" class=\"uk-form-horizontal\">\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\" for=\"form-horizontal-text3\">Representative</label>\n          <div class=\"uk-form-controls\">\n            <div class=\"form-input-destination uk-inline uk-width-1-1\">\n              <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('rep1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n              <input (blur)=\"validateRepresentative()\" (input)=\"searchRepresentatives()\" (focus)=\"searchRepresentatives()\" (keyup.enter)=\"generateChange()\" [(ngModel)]=\"representativeModel\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': repStatus === 2, 'uk-form-danger': repStatus === 0 }\" id=\"form-horizontal-text3\" type=\"text\" placeholder=\"nano_abc...123\" #repInput>\n              \n              <div *ngIf=\"(representativeResults$ | async).length\" [hidden]=\"!showRepresentatives\" class=\"nlt-dropdown uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                <ul class=\"uk-nav uk-nav-default\">\n                  <li class=\"uk-nav-header\">Representative List Results</li>\n                  <li class=\"uk-nav-divider\"></li>\n                  <li *ngFor=\"let rep of representativeResults$ | async\">\n                    <a (click)=\"selectRepresentative(rep.id)\">\n                      {{ rep.name }}\n                      <span *ngIf=\"rep.trusted\" class=\"uk-text-success\" style=\"margin-left: 4px;\"><span uk-icon=\"icon: star;\"></span></span>\n                      <span *ngIf=\"rep.warn\" class=\"uk-text-warning\" style=\"margin-left: 4px;\"><span uk-icon=\"icon: warning;\"></span> Avoid</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"uk-form-controls\" *ngIf=\"representativeListMatch\">\n            <div class=\"uk-inline uk-width-1-1 uk-margin-small-top\">\n              <span class=\"account-label rep\">{{ representativeListMatch }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <br>\n      <button *ngIf=\"blockTypeSelected === blockTypes[0]\" class=\"uk-button uk-button-primary uk-text-center uk-width-1-1\" type=\"button\" style=\"margin-bottom: 20px;\" (click)=\"generateSend()\">Generate Send Block</button>\n      <button *ngIf=\"blockTypeSelected === blockTypes[1]\" class=\"uk-button uk-button-primary uk-text-center uk-width-1-1\" type=\"button\" style=\"margin-bottom: 20px;\" (click)=\"generateChange()\">Generate Change Block</button>\n\n      <div *ngIf=\"blockHash\" class=\"uk-width-1-1 uk-text-center\" style=\"display: flex; justify-content: center;\">\n        <span class=\"uk-text-small\" uk-tooltip title=\"Unsigned block string to be copied to remote device\" style=\"overflow-wrap: anywhere;\"><strong>Unsigned Block</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"qrString\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n        <span class=\"uk-text-small\" uk-tooltip title=\"Final block hash to be signed or verified\" style=\"overflow-wrap: anywhere; margin-left: 50px;\"><strong>Block Hash</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"blockHash\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n      </div>\n      <div class=\"uk-width-1-1 uk-text-center uk-margin-small-top\">\n        <img *ngIf=\"qrCodeImageBlock\" [src]=\"qrCodeImageBlock\" class=\"block-qr\" alt=\"QR code\"><br />\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"mobile-actions-fixed\" *ngIf=\"walletAccount && (showFullDetailsOnSmallViewports === false)\">\n  <div class=\"actions-area\">\n    <button routerLink=\"/receive\">{{ 'general.receive' | transloco }}</button>\n    <button routerLink=\"/send\">{{ 'general.send' | transloco }}</button>\n  </div>\n</div>\n\n<div class=\"modal-position-bottom\" id=\"qr-code-modal\" uk-modal>\n  <div class=\"uk-modal-dialog uk-margin-auto-vertical\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-body\">\n      <div class=\"uk-width-1-1 uk-text-center\">\n        <img *ngIf=\"qrCodeImage else qrCodeGenerating\" [src]=\"qrCodeImage\" class=\"qr-code\">\n        <ng-template #qrCodeGenerating>\n          <div class=\"qr-code-placeholder uk-align-center\"><div uk-spinner=\"ratio: 2;\"></div></div>\n        </ng-template>\n        <hr>\n        <div class=\"account-label uk-margin-small-bottom\">{{\n            addressBookEntry\n          ? addressBookEntry\n          : (\n              walletAccount\n            ? (('general.account' | transloco) + ' #' + walletAccount.index)\n            : ( 'account-details.external-address' | transloco )\n          )\n        }}</div>\n        <div class=\"uk-width-1-1\">\n          <div uk-grid class=\"uk-flex uk-flex-center\">\n            <span class=\"nano-address-monospace uk-width-auto\">\n              <app-nano-account-id [accountID]=\"accountID\" middle=\"off\" [known]=\"known\"></app-nano-account-id>\n            </span>\n            <span class=\"nano-address-actions uk-width-auto\" style=\"vertical-align: 1px;\">\n              <ul class=\"uk-iconnav\">\n                <li><a ngxClipboard [cbContent]=\"accountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" [title]=\"'general.copy' | transloco\" uk-tooltip></a></li>\n              </ul>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-position-bottom\" id=\"mobile-account-menu-modal\" uk-modal>\n  <div class=\"uk-modal-dialog\">\n    <div class=\"uk-modal-body\">\n      <div class=\"uk-width-1-1\">\n        <h3 class=\"menu-header\">{{\n            addressBookEntry\n          ? addressBookEntry\n          : (\n              walletAccount\n            ? (('general.account' | transloco) + ' #' + walletAccount.index)\n            : ( 'account-details.external-address' | transloco )\n          )\n        }}</h3>\n        <hr>\n        <div\n          class=\"menu-option\"\n          [routerLink]=\"( '/account/' + accountID )\"\n          (click)=\"mobileAccountMenuModal.hide()\"\n        >\n          <span class=\"icon\" uk-icon=\"icon: cog; ratio: 1.3;\" style=\"vertical-align: 2px;\"></span>\n          <span>View account details</span>\n        </div>\n        <div\n          class=\"menu-option\"\n          routerLink=\"/accounts\"\n          (click)=\"mobileAccountMenuModal.hide()\"\n        >\n          <span class=\"icon icon-leave\" uk-icon=\"icon: sign-out; ratio: 1.4;\"></span>\n          <span>Select a different account</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-position-bottom\" id=\"mobile-transaction-menu-modal\" uk-modal>\n  <div class=\"uk-modal-dialog\">\n    <div class=\"uk-modal-body\">\n      <div class=\"transactions-list-mobile\">\n        <app-nano-transaction-mobile\n          [isInteractable]=\"false\"\n          [transaction]=\"mobileTransactionData\"\n          [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\"\n          *ngIf=\"mobileTransactionData\"\n        ></app-nano-transaction-mobile>\n      </div>\n      <div class=\"uk-width-1-1\" *ngIf=\"mobileTransactionData\">\n        <hr>\n        <ng-container *ngIf=\"mobileTransactionData.isReceivable === true\">\n          <div\n            class=\"menu-option uk-text-success\"\n            (click)=\"onReceiveFundsPress(mobileTransactionData)\"\n            *ngIf=\"walletAccount\"\n          >\n            <span\n              class=\"icon icon-download\" uk-icon=\"icon: download; ratio: 1.5;\"\n              style=\"vertical-align: 2px;\"\n              *ngIf=\"!mobileTransactionData.received\"\n            ></span>\n            <span *ngIf=\"!mobileTransactionData.received && !mobileTransactionData.loading\">Receive funds</span>\n            <span *ngIf=\"!mobileTransactionData.received && mobileTransactionData.loading\">Receiving...</span>\n            <span\n              class=\"icon\" uk-icon=\"icon: check; ratio: 1.3;\"\n              style=\"vertical-align: 2px;\"\n              *ngIf=\"mobileTransactionData.received\"\n            ></span>\n            <span *ngIf=\"mobileTransactionData.received\">Received!</span>\n          </div>\n          <div\n            class=\"menu-option\"\n            (click)=\"mobileTransactionMenuModal.hide(); generateReceive(mobileTransactionData.hash)\"\n            *ngIf=\"remoteVisible\"\n          >\n            <span class=\"icon\" uk-icon=\"icon: pencil; ratio: 1.3;\" style=\"vertical-align: 2px;\"></span>\n            <span>Sign block</span>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"mobileTransactionData.isReceivable !== true\">\n          <div\n            class=\"menu-option\"\n            routerLink=\"/send\"\n            [queryParams]=\"{\n              to: mobileTransactionData.account,\n              amount: util.nano.rawToMnano(mobileTransactionData.amount)\n            }\"\n            (click)=\"mobileTransactionMenuModal.hide()\"\n            *ngIf=\"(\n                walletAccount\n              && !isNaN(mobileTransactionData.amount)\n              && (\n                  mobileTransactionData.type === 'receive'\n                || mobileTransactionData.subtype === 'receive'\n                || mobileTransactionData.type === 'open'\n              )\n            )\"\n          >\n            <span class=\"icon\" uk-icon=\"icon: reply; ratio: 1.3;\" style=\"vertical-align: 2px;\"></span>\n            <span>{{ 'account-details.send-funds-back' | transloco }}</span>\n          </div>\n          <div\n            class=\"menu-option\"\n            ngxClipboard\n            [cbContent]=\"mobileTransactionData.hash\"\n            (cbOnSuccess)=\"mobileTransactionMenuModal.hide(); copied()\"\n          >\n            <span class=\"icon icon-copy\" uk-icon=\"icon: copy; ratio: 1.5;\" style=\"vertical-align: 2px;\">\n              <span class=\"icon-inner\">#</span>\n            </span>\n            <span>{{ 'account-details.copy-transaction-id' | transloco }}</span>\n          </div>\n          <div\n            class=\"menu-option\"\n            ngxClipboard\n            [cbContent]=\"(mobileTransactionData.link_as_account || mobileTransactionData.account)\"\n            (cbOnSuccess)=\"mobileTransactionMenuModal.hide(); copied()\"\n          >\n            <span class=\"icon icon-copy\" uk-icon=\"icon: copy; ratio: 1.5;\" style=\"vertical-align: 2px;\">\n              <span class=\"icon-inner icon-user\" uk-icon=\"icon: user; ratio: 0.6;\"></span>\n            </span>\n            <ng-container *ngIf=\"isNaN(mobileTransactionData.amount)\">\n              <span>{{ 'account-details.copy-representatives-address' | transloco }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"!isNaN(mobileTransactionData.amount)\">\n              <ng-container *ngIf=\"(\n                  mobileTransactionData.type === 'receive'\n                || mobileTransactionData.subtype === 'receive'\n                || mobileTransactionData.type === 'open'\n              )\">\n                <span>{{ 'account-details.copy-senders-address' | transloco }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"(\n                  mobileTransactionData.type === 'send'\n                || mobileTransactionData.subtype === 'send'\n              )\">\n                <span>{{ 'account-details.copy-recipients-address' | transloco }}</span>\n              </ng-container>\n            </ng-container>\n          </div>\n        </ng-container>\n        <div\n          class=\"menu-option\"\n          [routerLink]=\"( '/transaction/' + mobileTransactionData.hash )\"\n          (click)=\"mobileTransactionMenuModal.hide()\"\n        >\n          <span class=\"icon\" uk-icon=\"icon: search; ratio: 1.3;\" style=\"vertical-align: 2px;\"></span>\n          <span>{{ 'account-details.view-transaction-details' | transloco }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Subject, timer} from 'rxjs';\nimport {debounce} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {\n  AppSettingsService,\n  LedgerService,\n  LedgerStatus,\n  ModalService,\n  NotificationService,\n  RepresentativeService,\n  WalletService\n} from '../../services';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-accounts',\n  templateUrl: './accounts.component.html',\n  styleUrls: ['./accounts.component.css']\n})\nexport class AccountsComponent implements OnInit {\n  \n  accounts = this.walletService.wallet.accounts;\n  isLedgerWallet = this.walletService.isLedgerWallet();\n  isSingleKeyWallet = this.walletService.isSingleKeyWallet();\n  viewAdvanced = false;\n  newAccountIndex = null;\n\n  // When we change the accounts, redetect changable reps (Debounce by 5 seconds)\n  accountsChanged$ = new Subject();\n  reloadRepWarning$ = this.accountsChanged$.pipe(debounce(() => timer(5000)));\n\n  constructor(\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    public modal: ModalService,\n    public settings: AppSettingsService,\n    private representatives: RepresentativeService,\n    private router: Router,\n    private ledger: LedgerService,\n    private translocoService: TranslocoService) { }\n\n  async ngOnInit() {\n    this.reloadRepWarning$.subscribe(a => {\n      this.representatives.detectChangeableReps();\n    });\n    this.sortAccounts();\n  }\n\n  async createAccount() {\n    if (this.walletService.isLocked()) {\n      const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n      if (wasUnlocked === false) {\n        return;\n      }\n    }\n\n    if ((this.isLedgerWallet) && (this.ledger.ledger.status !== LedgerStatus.READY)) {\n      return this.notificationService.sendWarning(this.translocoService.translate('accounts.ledger-device-must-be-ready'));\n    }\n    if (!this.walletService.isConfigured()) return this.notificationService.sendError(this.translocoService.translate('accounts.wallet-is-not-configured'));\n    if (this.walletService.wallet.accounts.length >= 20) return this.notificationService.sendWarning(this.translocoService.translate('accounts.you-can-only-track-up-to-x-accounts-at-a-time', { accounts: 20 }));\n    // Advanced view, manual account index?\n    let accountIndex = null;\n    if (this.viewAdvanced && this.newAccountIndex != null) {\n      const index = parseInt(this.newAccountIndex, 10);\n      if (index < 0) return this.notificationService.sendWarning(this.translocoService.translate('accounts.invalid-account-index-must-be-positive-number'));\n      const existingAccount = this.walletService.wallet.accounts.find(a => a.index === index);\n      if (existingAccount) {\n        return this.notificationService.sendWarning(\n          this.translocoService.translate('accounts.the-account-at-this-index-is-already-loaded')\n        );\n      }\n      accountIndex = index;\n    }\n    try {\n      const newAccount = await this.walletService.addWalletAccount(accountIndex);\n      this.notificationService.sendSuccess(\n        this.translocoService.translate('accounts.successfully-created-new-account', { account: newAccount.id })\n      );\n      this.newAccountIndex = null;\n      this.accountsChanged$.next(newAccount.id);\n    } catch (err) {\n      this.notificationService.sendError(this.translocoService.translate('accounts.unable-to-add-new-account', { error: err.message }));\n    }\n  }\n\n  sortAccounts() {\n    // if (this.walletService.isLocked()) return this.notificationService.sendError(`Wallet is locked.`);\n    // if (!this.walletService.isConfigured()) return this.notificationService.sendError(`Wallet is not configured`);\n    // if (this.walletService.wallet.accounts.length <= 1) {\n      // return this.notificationService.sendWarning(`You need at least 2 accounts to sort them`);\n    // }\n    if (this.walletService.isLocked() || !this.walletService.isConfigured() ||\n      this.walletService.wallet.accounts.length <= 1) return;\n    this.walletService.wallet.accounts = this.walletService.wallet.accounts.sort((a, b) => a.index - b.index);\n    // this.accounts = this.walletService.wallet.accounts;\n    this.walletService.saveWalletExport(); // Save new sorted accounts list\n    // this.notificationService.sendSuccess(`Successfully sorted accounts by index!`);\n  }\n\n  navigateToAccount(account) {\n    const isSmallViewport = (window.innerWidth < 940);\n\n    if (isSmallViewport === true) {\n        this.walletService.wallet.selectedAccountId = account ? account.id : null;\n        this.walletService.wallet.selectedAccount = account;\n        this.walletService.wallet.selectedAccount$.next(account);\n        this.walletService.saveWalletExport();\n    }\n\n    this.router.navigate([`account/${account.id}`], { queryParams: {'compact': 1} });\n  }\n\n  copied() {\n    this.notificationService.removeNotification('success-copied');\n    this.notificationService.sendSuccess(this.translocoService.translate('general.successfully-copied-to-clipboard'), { identifier: 'success-copied' });\n  }\n\n  async deleteAccount(account) {\n    if (this.walletService.isLocked()) {\n      const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n      if (wasUnlocked === false) {\n        return;\n      }\n    }\n\n    try {\n      await this.walletService.removeWalletAccount(account.id);\n      this.notificationService.sendSuccess(\n        this.translocoService.translate('accounts.successfully-removed-account', { account: account.id })\n      );\n      this.accountsChanged$.next(account.id);\n    } catch (err) {\n      this.notificationService.sendError(this.translocoService.translate('accounts.unable-to-delete-account', { error: err.message }));\n    }\n  }\n\n  async showLedgerAddress(account) {\n    if (this.ledger.ledger.status !== LedgerStatus.READY) {\n      return this.notificationService.sendWarning(this.translocoService.translate('accounts.ledger-device-must-be-ready'));\n    }\n    this.notificationService.sendInfo(this.translocoService.translate('accounts.confirming-account-address-on-ledger-device'), { identifier: 'ledger-account', length: 0 });\n    try {\n      await this.ledger.getLedgerAccount(account.index, true);\n      this.notificationService.sendSuccess(this.translocoService.translate('accounts.account-address-confirmed-on-ledger'));\n    } catch (err) {\n      this.notificationService.sendError(this.translocoService.translate('accounts.account-address-denied-if-it-is-wrong-do-not-use-the-wallet'));\n    }\n    this.notificationService.removeNotification('ledger-account');\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    \n    <div class=\"uk-margin-bottom\" uk-grid>\n      <div class=\"uk-width-expand@s uk-width-1-1\">\n        <h2 class=\"uk-heading-divider uk-text-truncate\">\n          {{ 'general.accounts' | transloco }}\n          <a (click)=\"viewAdvanced = !viewAdvanced\" class=\"uk-text-truncate\" style=\"font-size: 12px;margin-left: 25px;opacity: 0.4;color: #FFF;\">{{ viewAdvanced ? ('accounts.simple-mode' | transloco | uppercase) : ('accounts.advanced-mode' | transloco | uppercase) }}</a>\n        </h2>\n      </div>\n      <div class=\"\">\n        <div class=\"uk-grid-small uk-child-width-expand\" uk-grid>\n          <div>\n            <input type=\"number\" class=\"uk-input uk-form-width-small uk-width-1-1@m\" [(ngModel)]=\"newAccountIndex\" placeholder=\"Account #\" *ngIf=\"viewAdvanced\">\n          </div>\n          <div class=\"uk-width-auto@m\">\n            <button class=\"uk-button uk-button-secondary uk-width-1-1@m\" (click)=\"createAccount()\">\n              {{ 'accounts.add-new-account' | transloco }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-overflow-hidden\">\n      <table class=\"accounts-list uk-table uk-table-striped uk-table-small\">\n        <thead>\n        <tr>\n          <th scope=\"col\" class=\"account-column uk-width-3-5@m uk-width-1-2\" [class.identicons-enabled]=\"(settings.settings.identiconsStyle !== 'none')\">\n            {{ 'general.account' | transloco }}\n          </th>\n          <th scope=\"col\" class=\"account-amounts-column uk-width-1-5@m uk-width-1-4 uk-text-right\">{{ 'general.balance' | transloco }}</th>\n          <th scope=\"col\" [class]=\"{\n            'account-actions-column': true,\n            'table-header-delete-account': true,\n            'uk-width-1-5@m': true,\n            'uk-width-1-4': true,\n            'uk-text-right': true,\n            'hidden-column': ( isSingleKeyWallet || !viewAdvanced )\n          }\"></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let account of accounts\" class=\"uk-visible-toggle\">\n          <ng-template #accountAmounts>\n            <ng-container *ngIf=\"(walletService.wallet.updatingBalance === false) else balanceLoading\">\n              <div class=\"account-amounts-primary uk-width-1-1\">\n                <div *ngIf=\"account.pending.gt(0)\" class=\"incoming-label\">\n                  <div class=\"text-snippet\">{{ 'general.new' | transloco }}</div>\n                  <div class=\"text-full\">+{{ account.pending | rai: 'mnano,true' | amountsplit: 0 }}{{ account.pending | rai: 'mnano,true' | amountsplit: 1 }} NANO</div>\n                </div>\n                <span class=\"amounts\" [title]=\"( account.balanceRaw.gt(0) ? ( '+' + ( account.balanceRaw.toString(10) ) + ' raw' ) : '' )\">\n                  <span class=\"amount-integer\">{{ account.balance | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                  <span class=\"amount-fractional\">{{ account.balance | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                  <span class=\"currency-name\">NANO</span>\n                </span>\n              </div>\n              <div class=\"account-amounts-converted uk-width-1-1 text-half-muted\">\n                {{ account.balanceFiat | fiat: settings.settings.displayCurrency }}\n              </div>\n            </ng-container>\n            <ng-template #balanceLoading>\n              <div class=\"account-amounts-primary uk-width-1-1\">\n                <div uk-spinner=\"ratio: 0.5;\"></div>\n              </div>\n            </ng-template>\n          </ng-template>\n          <ng-template #accountActions>\n            <!-- Icon for regular view -->\n            <a (click)=\"deleteAccount(account)\" class=\"icon-delete-account uk-text-danger\" [title]=\"'accounts.hide-account' | transloco\" uk-tooltip><span uk-icon=\"icon: close;\"></span></a>\n            <!-- Button for compact view -->\n            <button\n              (click)=\"deleteAccount(account)\"\n              class=\"button-delete-account uk-button uk-button-secondary uk-text-danger uk-text-center uk-width-auto nlt-icon-button\"\n              type=\"button\"\n            ><span class=\"nlt-icon\" uk-icon=\"icon: close;\" style=\"vertical-align: 1px;\"></span>{{ 'accounts.hide-account' | transloco | uppercase }}</button>\n          </ng-template>\n          <td class=\"account-column uk-visible-toggle uk-text-truncate\" [class.identicons-enabled]=\"(settings.settings.identiconsStyle !== 'none')\">\n            <div uk-grid>\n              <a\n                (click)=\"navigateToAccount(account); $event.stopPropagation()\"\n                [routerLink]=\"( '/account/' + account.id )\" [queryParams]=\"{ compact: '1' }\"\n                [class]=\"[ 'uk-width-auto', 'uk-text-truncate', 'account-container', !isLedgerWallet ? 'narrow' : 'wide' ]\"\n              >\n                <div class=\"uk-flex\">\n                  <app-nano-identicon scale=\"12\" [accountID]=\"account.id\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                  <div class=\"uk-width-expand\">\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"account-index\" *ngIf=\"viewAdvanced\"><span>#</span>{{ account.index }}</div>\n                      <div class=\"account-label\">{{\n                          account.addressBookName\n                        ? account.addressBookName\n                        : (\n                            viewAdvanced\n                          ? ('general.account' | transloco)\n                          : ('general.account' | transloco) + ' #' + account.index\n                        )\n                      }}</div>\n                    </div>\n                    <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\">\n                      <app-nano-account-id [accountID]=\"account.id\" middle=\"auto\"></app-nano-account-id>\n                    </div>\n                  </div>\n                </div>\n              </a>\n              <div class=\"nano-address-actions uk-width-auto copy-container\">\n                <ul class=\"uk-iconnav copy-icons\">\n                  <li><a ngxClipboard [cbContent]=\"account.id\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" [title]=\"'general.copy' | transloco\" uk-tooltip></a></li>\n                  <li *ngIf=\"isLedgerWallet\"><a uk-icon=\"icon: commenting\" [title]=\"'accounts.confirm-address-on-ledger' | transloco\" (click)=\"showLedgerAddress(account)\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n            <div class=\"compact-account-amounts\">\n              <ng-template [ngTemplateOutlet]=\"accountAmounts\"></ng-template>\n            </div>\n            <div class=\"compact-account-actions\" [class.hidden-section]=\"( isSingleKeyWallet || !viewAdvanced )\">\n              <ng-template [ngTemplateOutlet]=\"accountActions\"></ng-template>\n            </div>\n          </td>\n          <td class=\"account-amounts-column uk-text-right\">\n            <ng-template [ngTemplateOutlet]=\"accountAmounts\"></ng-template>\n          </td>\n          <td [class]=\"{\n            'account-actions-column': true,\n            'uk-text-right': true,\n            'hidden-column': ( isSingleKeyWallet || !viewAdvanced )\n          }\">\n            <div class=\"uk-float-right\">\n              <ng-template [ngTemplateOutlet]=\"accountActions\"></ng-template>\n            </div>\n          </td>\n        </tr>\n        <tr *ngIf=\"!accounts.length\">\n          <td colspan=\"4\" style=\"text-align: center;\">{{ 'accounts.you-dont-have-any-accounts-yet.1' | transloco }} <a (click)=\"createAccount()\">{{ 'accounts.you-dont-have-any-accounts-yet.2-link' | transloco }}</a> {{ 'accounts.you-dont-have-any-accounts-yet.3' | transloco }}</td>\n        </tr>\n        </tbody>\n      </table>\n      <table class=\"uk-table uk-table-striped uk-table-small\" *ngIf=\"false && !isSingleKeyWallet\">\n        <thead>\n          <tr class=\"uk-alert uk-alert-primary missing-accounts-hint\">\n            <td colspan=\"4\" style=\"text-align: center;\"><span uk-icon=\"icon: info\"></span> {{ 'accounts.missing-accounts.1' | transloco }} <a class=\"hint-action\" (click)=\"createAccount()\">{{ 'accounts.missing-accounts.2-link' | transloco }}</a> {{ 'accounts.missing-accounts.3' | transloco }}</td>\n          </tr>\n        </thead>\n      </table>\n    </div>\n\n  </div>\n</div>\n","import {AfterViewInit, Component, OnInit, OnDestroy} from '@angular/core';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ModalService} from '../../services/modal.service';\nimport {UtilService} from '../../services/util.service';\nimport { QrModalService } from '../../services/qr-modal.service';\nimport {Router} from '@angular/router';\nimport * as QRCode from 'qrcode';\nimport {BigNumber} from 'bignumber.js';\nimport {ApiService} from '../../services/api.service';\nimport {PriceService} from '../../services/price.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {TranslocoService} from '@ngneat/transloco';\n\nexport interface BalanceAccount {\n  balance: BigNumber;\n  balanceRaw: BigNumber;\n  pending: BigNumber;\n  balanceFiat: number;\n}\n\n@Component({\n  selector: 'app-address-book',\n  templateUrl: './address-book.component.html',\n  styleUrls: ['./address-book.component.css']\n})\n\nexport class AddressBookComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  nano = 1000000000000000000000000;\n  activePanel = 0;\n  creatingNewEntry = false;\n\n  addressBook$ = this.addressBookService.addressBook$;\n  previousAddressName = '';\n  newAddressAccount = '';\n  newAddressName = '';\n  addressBookShowQRExport = false;\n  addressBookShowFileExport = false;\n  addressBookQRExportUrl = '';\n  addressBookQRExportImg = '';\n  importExport = false;\n  newTrackBalance = false;\n  newTrackTransactions = false;\n  accounts: BalanceAccount[] = [];\n  totalTrackedBalance = new BigNumber(0);\n  totalTrackedBalanceRaw = new BigNumber(0);\n  totalTrackedBalanceFiat = 0;\n  totalTrackedPending = new BigNumber(0);\n  fiatPrice = 0;\n  priceSub = null;\n  refreshSub = null;\n  statsRefreshEnabled = true;\n  timeoutIdAllowingRefresh: any = null;\n  loadingBalances = false;\n  numberOfTrackedBalance = 0;\n\n  constructor(\n    private addressBookService: AddressBookService,\n    private walletService: WalletService,\n    public notificationService: NotificationService,\n    public modal: ModalService,\n    private util: UtilService,\n    private qrModalService: QrModalService,\n    private router: Router,\n    private api: ApiService,\n    private price: PriceService,\n    public appSettings: AppSettingsService,\n    private translocoService: TranslocoService) { }\n\n  async ngOnInit() {\n    this.addressBookService.loadAddressBook();\n    // Keep price up to date with the service\n    this.priceSub = this.price.lastPrice$.subscribe(event => {\n      this.fiatPrice = this.price.price.lastPrice;\n    });\n\n    // Detect if local wallet balance is refreshed\n    this.refreshSub = this.walletService.wallet.refresh$.subscribe(shouldRefresh => {\n      if (shouldRefresh) {\n        this.loadingBalances = true;\n        // Check if we have a local wallet account tracked and update the balances\n        for (const entry of this.addressBookService.addressBook) {\n          if (!entry.trackBalance || !this.accounts[entry.account]) continue;\n          // If the account exist in the wallet, take the info from there to save on RPC calls\n          const walletAccount = this.walletService.wallet.accounts.find(a => a.id === entry.account);\n          if (walletAccount) {\n            // Subtract first so we can add back any updated amounts\n            this.totalTrackedBalance = this.totalTrackedBalance.minus(this.accounts[entry.account].balance);\n            this.totalTrackedBalanceRaw = this.totalTrackedBalanceRaw.minus(this.accounts[entry.account].balanceRaw);\n            this.totalTrackedBalanceFiat = this.totalTrackedBalanceFiat - this.accounts[entry.account].balanceFiat;\n            this.totalTrackedPending = this.totalTrackedPending.minus(this.accounts[entry.account].pending);\n\n            this.accounts[entry.account].balance = walletAccount.balance;\n            this.accounts[entry.account].pending = walletAccount.pending;\n            this.accounts[entry.account].balanceFiat = walletAccount.balanceFiat;\n            this.accounts[entry.account].balanceRaw = walletAccount.balanceRaw;\n\n            this.totalTrackedBalance = this.totalTrackedBalance.plus(walletAccount.balance);\n            this.totalTrackedBalanceRaw = this.totalTrackedBalanceRaw.plus(walletAccount.balanceRaw);\n            this.totalTrackedBalanceFiat = this.totalTrackedBalanceFiat + walletAccount.balanceFiat;\n            this.totalTrackedPending = this.totalTrackedPending.plus(this.accounts[entry.account].pending);\n          }\n        }\n        this.loadingBalances = false;\n      }\n    });\n\n    this.updateTrackedBalances();\n  }\n\n  ngOnDestroy() {\n    if (this.priceSub) {\n      this.priceSub.unsubscribe();\n    }\n    if (this.refreshSub) {\n      this.refreshSub.unsubscribe();\n    }\n  }\n\n  ngAfterViewInit() {\n    // Listen for reordering events\n    document.getElementById('address-book-sortable').addEventListener('moved', (e) => {\n      const element = e.target as HTMLDivElement;\n      const elements = element.children;\n\n      const result = [].slice.call(elements);\n      const datas = result.map(el => el.dataset.account);\n\n      this.addressBookService.setAddressBookOrder(datas);\n      this.notificationService.sendSuccess(this.translocoService.translate('address-book.updated-address-book-order'));\n    });\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  async updateTrackedBalances(refresh= false) {\n    if (refresh && !this.statsRefreshEnabled) return;\n    this.statsRefreshEnabled = false;\n    if (this.timeoutIdAllowingRefresh != null) {\n      clearTimeout(this.timeoutIdAllowingRefresh);\n    }\n    this.timeoutIdAllowingRefresh = setTimeout(() => this.statsRefreshEnabled = true, 5000);\n    this.loadingBalances = true;\n\n     // Inform html that at least one entry is tracked\n    this.numberOfTrackedBalance = 0;\n    for (const entry of this.addressBookService.addressBook) {\n      if (entry.trackBalance) {\n        this.numberOfTrackedBalance++;\n      }\n    }\n    // No need to process if there is nothing to track\n    if (this.numberOfTrackedBalance === 0) return;\n\n    this.totalTrackedBalance = new BigNumber(0);\n    this.totalTrackedBalanceRaw = new BigNumber(0);\n    this.totalTrackedBalanceFiat = 0;\n    this.totalTrackedPending = new BigNumber(0);\n\n    // Get account balances for all account in address book not in wallet (which has tracking active)\n    const accountIDsWallet = this.walletService.wallet.accounts.map(a => a.id);\n    const accountIDs = this.addressBookService.addressBook.filter(a => !accountIDsWallet.includes(a.account) &&\n      a.trackBalance).map(a => a.account);\n    const apiAccounts = await this.api.accountsBalances(accountIDs);\n\n    // Fetch pending of all tracked accounts\n    let pending;\n    if (this.appSettings.settings.minimumReceive) {\n      const minAmount = this.util.nano.mnanoToRaw(this.appSettings.settings.minimumReceive);\n      pending = await this.api.accountsPendingLimitSorted(accountIDs, minAmount.toString(10));\n    } else {\n      pending = await this.api.accountsPendingSorted(accountIDs);\n    }\n\n    // Save balances\n    for (const entry of this.addressBookService.addressBook) {\n      if (!entry.trackBalance) continue;\n\n      const balanceAccount: BalanceAccount = {\n        balance: new BigNumber(0),\n        balanceRaw: new BigNumber(0),\n        pending: new BigNumber(0),\n        balanceFiat: 0\n      };\n      // If the account exist in the wallet, take the info from there to save on RPC calls\n      const walletAccount = this.walletService.wallet.accounts.find(a => a.id === entry.account);\n      if (walletAccount) {\n        balanceAccount.balance = walletAccount.balance;\n        balanceAccount.pending = walletAccount.pending;\n        balanceAccount.balanceFiat = walletAccount.balanceFiat;\n        balanceAccount.balanceRaw = walletAccount.balanceRaw;\n      // Add balances from RPC data\n      } else {\n        balanceAccount.balance = new BigNumber(apiAccounts.balances[entry.account].balance);\n        balanceAccount.balanceFiat = this.util.nano.rawToMnano(balanceAccount.balance).times(this.fiatPrice).toNumber();\n        balanceAccount.balanceRaw = new BigNumber(balanceAccount.balance).mod(this.nano);\n      }\n      this.totalTrackedBalance = this.totalTrackedBalance.plus(balanceAccount.balance);\n      this.totalTrackedBalanceRaw = this.totalTrackedBalanceRaw.plus(balanceAccount.balanceRaw);\n      this.totalTrackedBalanceFiat = this.totalTrackedBalanceFiat + balanceAccount.balanceFiat;\n      this.accounts[entry.account] = balanceAccount;\n    }\n\n    // Add pending from RPC data\n    if (pending && pending.blocks) {\n      for (const block in pending.blocks) {\n        if (!pending.blocks.hasOwnProperty(block)) {\n          continue;\n        }\n\n        const targetAccount = this.accounts[block];\n\n        if (pending.blocks[block]) {\n          let accountPending = new BigNumber(0);\n\n          for (const hash in pending.blocks[block]) {\n            if (!pending.blocks[block].hasOwnProperty(hash)) {\n              continue;\n            }\n            accountPending = accountPending.plus(pending.blocks[block][hash].amount);\n          }\n          if (targetAccount) {\n            targetAccount.pending = accountPending;\n            this.totalTrackedPending = this.totalTrackedPending.plus(targetAccount.pending);\n          }\n        }\n      }\n    }\n\n    // If not already updating balances, update to get latest values from internal wallet\n    if (this.walletService.wallet.updatingBalance) {\n      while (this.walletService.wallet.updatingBalance) {\n        await this.sleep(100); // Wait until update is finished\n      }\n    } else {\n      await this.walletService.reloadBalances();\n    }\n\n    this.loadingBalances = false;\n  }\n\n  addEntry() {\n    this.previousAddressName = '';\n    this.newTrackBalance = false;\n    this.newTrackTransactions = false;\n    this.creatingNewEntry = true;\n    this.activePanel = 1;\n  }\n\n  editEntry(addressBook) {\n    this.newAddressAccount = addressBook.account;\n    this.previousAddressName = addressBook.name;\n    this.newAddressName = addressBook.name;\n    this.newTrackBalance = addressBook.trackBalance;\n    this.newTrackTransactions = addressBook.trackTransactions;\n    this.creatingNewEntry = false;\n    this.activePanel = 1;\n    setTimeout(() => {\n      document.getElementById('new-address-name').focus();\n    }, 150);\n  }\n\n  async saveNewAddress() {\n    if (!this.newAddressAccount || !this.newAddressName) {\n      return this.notificationService.sendError(this.translocoService.translate('address-book.account-and-name-are-required'));\n    }\n\n    if (this.newTrackBalance && this.numberOfTrackedBalance >= 20) {\n      return this.notificationService.sendError(this.translocoService.translate('address-book.you-can-only-track-the-balance-of-maximum-20-addresses'));\n    }\n\n    // Trim and remove duplicate spaces\n    this.newAddressName = this.newAddressName.trim().replace(/ +/g, ' ');\n\n    const regexp = new RegExp('^(Account|' + this.translocoService.translate('general.account') + ') #\\\\d+$', 'g');\n    if ( regexp.test(this.newAddressName) === true ) {\n      return this.notificationService.sendError(this.translocoService.translate('address-book.this-name-is-reserved-for-wallet-accounts-without-a-label'));\n    }\n\n    // Remove spaces and convert to nano prefix\n    this.newAddressAccount = this.newAddressAccount.replace(/ /g, '').replace('xrb_', 'nano_');\n\n    // If the name has been changed, make sure no other entries are using that name\n    if ( (this.newAddressName !== this.previousAddressName) && this.addressBookService.nameExists(this.newAddressName) ) {\n      return this.notificationService.sendError(this.translocoService.translate('address-book.this-name-is-already-in-use-please-use-a-unique-name'));\n    }\n\n    // Make sure the address is valid\n    const valid = this.util.account.isValidAccount(this.newAddressAccount);\n    if (!valid) {\n      return this.notificationService.sendWarning(\n        this.translocoService.translate('address-book.account-id-is-not-a-valid-account')\n      );\n    }\n\n    // Store old setting\n    const wasTransactionTracked = this.addressBookService.getTransactionTrackingById(this.newAddressAccount);\n\n    try {\n      await this.addressBookService.saveAddress(this.newAddressAccount,\n        this.newAddressName, this.newTrackBalance, this.newTrackTransactions);\n      this.notificationService.sendSuccess(this.translocoService.translate('address-book.address-book-entry-saved-successfully'));\n      // If this is one of our accounts, set its name and let it propagate through the app\n      const walletAccount = this.walletService.wallet.accounts.find(a => a.id === this.newAddressAccount);\n      if (walletAccount) {\n        walletAccount.addressBookName = this.newAddressName;\n      }\n\n      // track account transaction (if unchanged)\n      if (this.newTrackTransactions && !wasTransactionTracked) {\n        this.walletService.trackAddress(this.newAddressAccount);\n\n      } else if (!this.newTrackTransactions && wasTransactionTracked) {\n        this.walletService.untrackAddress(this.newAddressAccount);\n      }\n\n      this.updateTrackedBalances();\n      this.cancelNewAddress();\n    } catch (err) {\n      this.notificationService.sendError(this.translocoService.translate('address-book.unable-to-save-entry', { message: err.message }));\n    }\n  }\n\n  cancelNewAddress() {\n    this.newAddressName = '';\n    this.newAddressAccount = '';\n    this.activePanel = 0;\n  }\n\n  copied() {\n    this.notificationService.removeNotification('success-copied');\n    this.notificationService.sendSuccess(this.translocoService.translate('address-book.account-address-copied-to-clipboard'), { identifier: 'success-copied' });\n  }\n\n  async deleteAddress(account) {\n    try {\n      this.addressBookService.deleteAddress(account);\n      this.notificationService.sendSuccess(this.translocoService.translate('address-book.successfully-deleted-address-book-entry'));\n      this.walletService.untrackAddress(account);\n      this.updateTrackedBalances();\n    } catch (err) {\n      this.notificationService.sendError(this.translocoService.translate('address-book.unable-to-delete-entry', { message: err.message }));\n    }\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'account1':\n          this.newAddressAccount = data.content;\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n  // converts a Unicode string to a string in which\n  // each 16-bit unit occupies only one byte\n  toBinary(string) {\n    const codeUnits = new Uint16Array(string.length);\n    for (let i = 0; i < codeUnits.length; i++) {\n      codeUnits[i] = string.charCodeAt(i);\n    }\n    return String.fromCharCode(...new Uint8Array(codeUnits.buffer));\n  }\n\n  async exportAddressBook() {\n    const exportData = this.addressBookService.addressBook;\n    const base64Data = btoa(this.toBinary(JSON.stringify(exportData)));\n    const exportUrl = `https://nault.cc/import-address-book#${base64Data}`;\n    this.addressBookQRExportUrl = exportUrl;\n    this.addressBookShowFileExport = true;\n\n    if (base64Data.length <= 2260) {\n      this.addressBookShowQRExport = true;\n      this.addressBookQRExportImg = await QRCode.toDataURL(exportUrl);\n    }\n  }\n\n  exportAddressBookToFile() {\n    const fileName = `Nault-AddressBook.json`;\n\n    const exportData = this.addressBookService.addressBook;\n    this.triggerFileDownload(fileName, exportData);\n\n    this.notificationService.sendSuccess(this.translocoService.translate('address-book.address-book-export-downloaded'));\n  }\n\n  importFromFile(files) {\n    if (!files.length) {\n      return;\n    }\n\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const fileData = event.target['result'] as string;\n      try {\n        const importData = JSON.parse(fileData);\n        if (!importData.length || !importData[0].account) {\n          return this.notificationService.sendError(this.translocoService.translate('address-book.bad-import-data-make-sure-you-selected-a-nault-address-book'));\n        }\n\n        const encoded = btoa(this.toBinary(JSON.stringify(importData)));\n        this.router.navigate(['import-address-book'], { fragment: encoded });\n      } catch (err) {\n        this.notificationService.sendError(this.translocoService.translate('address-book.unable-to-parse-import-data-make-sure-you-selected-the-right'));\n      }\n    };\n\n    reader.readAsText(file);\n  }\n\n  triggerFileDownload(fileName, exportData) {\n    const blob = new Blob([JSON.stringify(exportData)], { type: 'application/json' });\n\n    // Check for iOS, which is weird with saving files\n    const iOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n    const elem = window.document.createElement('a');\n    const objUrl = window.URL.createObjectURL(blob);\n    if (iOS) {\n      elem.href = `data:attachment/file,${JSON.stringify(exportData)}`;\n    } else {\n      elem.href = objUrl;\n    }\n    elem.download = fileName;\n    document.body.appendChild(elem);\n    elem.click();\n    setTimeout(function() {\n      document.body.removeChild(elem);\n      window.URL.revokeObjectURL(objUrl);\n    }, 200);\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid *transloco=\"let t\">\n  <div class=\"uk-width-1-1\" id=\"address-book-sortable\">\n    \n    <div class=\"uk-margin-bottom\" uk-grid>\n      <div class=\"uk-width-expand@s uk-width-1-1\">\n        <h2 class=\"uk-heading-divider uk-text-truncate\">\n          {{ 'general.address-book' | transloco }}\n          <a *ngIf=\"activePanel !== 1\" (click)=\"activePanel =  activePanel === 0 ? 2 : 0; addressBookShowFileExport = false;\" style=\"font-size: 12px; margin-left: 25px;\">{{ activePanel === 2 ? ('address-book.back-to-address-book' | transloco | uppercase) : ('address-book.import-export' | transloco | uppercase) }}</a>\n        </h2>\n      </div>\n      <div class=\"uk-width-auto@s uk-width-1-1 uk-text-right\">\n        <button class=\"uk-button uk-button-secondary uk-align-right uk-width-auto@s\" (click)=\"addEntry()\" *ngIf=\"activePanel === 0\">{{ 'address-book.add-new-entry' | transloco }}</button>\n      </div>\n    </div>\n\n    <div class=\"uk-width-1-1 nlt-page-intro\" *ngIf=\"activePanel === 0\">\n      <p>\n        {{ 'address-book.you-can-use-the-address-book-to-store.1' | transloco }}<br>\n        {{ 'address-book.you-can-use-the-address-book-to-store.2' | transloco }}\n      </p>\n      <div class=\"account-amounts-primary uk-width-1-1\">\n        <div class=\"details-header advanced-options-link\" (click)=\"showAdvancedOptions = !showAdvancedOptions\">\n          {{ 'address-book.show-total-tracked-balance' | transloco }}\n          <div [class]=\"['chevron', ( showAdvancedOptions ? 'chevron-up' : 'chevron-down' )]\"></div>\n        </div>\n\n        <div class=\"advanced-options\" *ngIf=\"showAdvancedOptions\">\n          <span [title]=\"( totalTrackedBalanceRaw.gt(0) ? ( '+' + ( totalTrackedBalanceRaw.toString(10) ) + ' raw' ) : '' )\">\n            <span class=\"amount-integer\">{{ totalTrackedBalance | rai: 'mnano,true' | amountsplit: 0 }}</span>\n            <span class=\"amount-fractional\">{{ totalTrackedBalance | rai: 'mnano,true' | amountsplit: 1 }}</span>\n            <span class=\"currency-name\">NANO</span>\n          </span>\n          <div *ngIf=\"totalTrackedPending.gt(0)\" class=\"incoming-label\">\n            <div class=\"text-snippet\">{{ 'general.new' | transloco }}</div>\n            <div class=\"text-full\">+{{ totalTrackedPending | rai: 'mnano,true' | amountsplit: 0 }}{{ totalTrackedPending | rai: 'mnano,true' | amountsplit: 1 }} NANO</div>\n          </div>\n          <div class=\"account-amounts-converted uk-width-1-1 text-half-muted\">\n            {{ totalTrackedBalanceFiat | fiat: appSettings.settings.displayCurrency }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel === 0\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-margin\">\n\n          <ul class=\"uk-list uk-list-striped\" style=\"margin-bottom: 0;\">\n            <li class=\"uk-list-header\">\n              <div uk-grid>\n                <div class=\"uk-width-2-5\">{{ 'general.name' | transloco }}</div>\n                <div class=\"uk-width-expand\">{{ 'general.address' | transloco }}\n                  <div *ngIf=\"numberOfTrackedBalance > 0\" style=\"display: flex;\">\n                    {{ 'address-book.reload-balances' | transloco | uppercase }}\n                    <ul class=\"uk-width-auto uk-iconnav uk-margin-remove-left\" style=\"margin-top: -1px;\">\n                      <li>\n                        <div\n                          uk-spinner=\"ratio: 0.5;\"\n                          class=\"icon-transactions-refresh spinner\"\n                          *ngIf=\"(loadingBalances || walletService.wallet.updatingBalance === true) else notUpdatingTxList\"\n                        ></div>\n                        <ng-template #notUpdatingTxList>\n                          <a\n                            class=\"icon-transactions-refresh\"\n                            [class.disabled]=\"!statsRefreshEnabled\"\n                            [class.uk-text-muted]=\"!statsRefreshEnabled\"\n                            uk-icon=\"icon: refresh;\"\n                            title=\"Reload tracked balances (for addresses not in your Nault wallet)\"\n                            uk-tooltip\n                            (click)=\"updateTrackedBalances(true)\"\n                          ></a>\n                        </ng-template>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <div class=\"uk-width-1-6 uk-text-center\" style=\"padding-left: 0;\">{{ 'general.actions' | transloco }}</div>\n              </div>\n            </li>\n          </ul>\n\n          <ul class=\"uk-list uk-list-striped\" style=\"margin-top: 0;\" uk-sortable=\"handle: .uk-sortable-handle; cls-custom: uk-box-shadow-small uk-background uk-background-default;\">\n            <li class=\"\" *ngFor=\"let addressBook of addressBook$ | async;\" [attr.data-account]=\"addressBook.account\">\n              <div uk-grid>\n                <div class=\"uk-width-2-5 uk-text-truncate uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-expand uk-text-truncate uk-margin-small-right\">\n                      {{ addressBook.name }}\n                    </div>\n                    <ul class=\"uk-iconnav uk-width-auto\">\n                      <li><a (click)=\"editEntry(addressBook)\" title=\"Edit Entry\" uk-tooltip uk-icon=\"icon: pencil;\" class=\"edit-name-icon\"></a></li>\n                      <li><a class=\"uk-sortable-handle uk-margin-small-right\" uk-icon=\"icon: table\"></a></li>\n                    </ul>\n                  </div>\n                </div>\n                <div class=\"uk-width-expand uk-text-truncate uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-expand uk-text-truncate\">\n                      <a [routerLink]=\"'/account/' + addressBook.account\" class=\"nano-address-clickable nano-address-monospace uk-display-block\" [title]=\"t('general.view-on-network-explorer')\" uk-tooltip>\n                        <app-nano-account-id [accountID]=\"addressBook.account\"></app-nano-account-id>\n                      </a>\n                    </div>\n                    <ul class=\"nano-address-actions uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"addressBook.account\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" [title]=\"t('general.copy-to-clipboard')\" uk-tooltip></a></li>\n                    </ul>\n                    <div class=\"uk-width-expand amount-container\" *ngIf=\"addressBook.trackBalance\">\n                      <ng-container *ngIf=\"(walletService.wallet.updatingBalance === false) else balanceLoading\">\n                        <div class=\"account-amounts-primary uk-width-1-1\">\n                          <span [title]=\"( accounts[addressBook.account]?.balanceRaw.gt(0) ? ( '+' + ( accounts[addressBook.account]?.balanceRaw.toString(10) ) + ' raw' ) : '' )\">\n                            <span class=\"amount-integer\">{{ accounts[addressBook.account]?.balance | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                            <span class=\"amount-fractional\">{{ accounts[addressBook.account]?.balance | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                            <span class=\"currency-name\">NANO</span>\n                          </span>\n                          <div *ngIf=\"accounts[addressBook.account]?.pending.gt(0)\" class=\"incoming-label\">\n                            <div class=\"text-snippet\">New</div>\n                            <div class=\"text-full\">+{{ accounts[addressBook.account]?.pending | rai: 'mnano,true' | amountsplit: 0 }}{{ accounts[addressBook.account]?.pending | rai: 'mnano,true' | amountsplit: 1 }} NANO</div>\n                          </div>\n                        </div>\n                        <div class=\"account-amounts-converted uk-width-1-1 text-half-muted\">\n                          {{ accounts[addressBook.account]?.balanceFiat | fiat: appSettings.settings.displayCurrency }}\n                        </div>\n                      </ng-container>\n                      <ng-template #balanceLoading>\n                        <div class=\"account-amounts-primary uk-width-1-1\">\n                          <div uk-spinner=\"ratio: 0.5;\"></div>\n                        </div>\n                      </ng-template>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"uk-width-1-6 uk-text-center\" style=\"padding-left: 0;\">\n                  <a (click)=\"deleteAddress(addressBook.account)\" class=\"uk-text-danger\" title=\"Remove From Address Book\" uk-tooltip><span uk-icon=\"icon: trash;\"></span></a>\n                </div>\n              </div>\n\n            </li>\n            <li *ngIf=\"!(addressBook$ | async).length\" class=\"uk-text-center\">\n              {{ 'address-book.you-do-not-have-any-address-book-entries-saved-yet.1' | transloco }} <a (click)=\"addEntry()\">{{ 'address-book.you-do-not-have-any-address-book-entries-saved-yet.2-link' | transloco }}</a>{{ 'address-book.you-do-not-have-any-address-book-entries-saved-yet.3' | transloco }}\n            </li>\n          </ul>\n\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel === 1\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-header\">\n            <h2 class=\"uk-card-title\">{{ creatingNewEntry ? ( 'address-book.add-new-entry' | transloco ) : ( 'address-book.edit-entry' | transloco ) }}</h2>\n          </div>\n          <div class=\"uk-card-body\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-address-name\">{{ 'general.name' | transloco }}</label>\n                <div class=\"uk-form-controls\">\n                  <input type=\"text\" class=\"uk-input\" id=\"new-address-name\" [(ngModel)]=\"newAddressName\" (keyup.enter)=\"saveNewAddress()\" [placeholder]=\"t('address-book.exchange-deposit-address-main-trading-account-etc')\" maxlength=\"64\">\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-address-account\">{{ 'general.address' | transloco }}</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('account1','account')\" uk-tooltip [title]=\"t('general.scan-qr-code')\" *ngIf=\"creatingNewEntry\"></a>\n                    <input type=\"text\" class=\"uk-input\" id=\"new-address-account\" [(ngModel)]=\"newAddressAccount\" [disabled]=\"!creatingNewEntry\" placeholder=\"nano_abc123\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-track-balance\">{{ 'address-book.track-balance' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('address-book.the-balance-will-be-displayed-in-the-address-book')\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <input class=\"uk-checkbox checkbox-aligned\" type=\"checkbox\" id=\"new-track-balance\" value=\"1\" [(ngModel)]=\"newTrackBalance\">\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-track-transactions\">{{ 'address-book.track-transactions' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('address-book.a-notification-will-be-shown-whenever-the-address-has-a-new')\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <input class=\"uk-checkbox checkbox-aligned\" type=\"checkbox\" id=\"new-track-transactions\" value=\"1\" [(ngModel)]=\"newTrackTransactions\">\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"uk-card-footer uk-text-right@s nlt-button-group\">\n            <button class=\"uk-button uk-button-danger uk-width-1-1@s uk-width-auto@m\" (click)=\"cancelNewAddress()\">{{ 'general.cancel' | transloco }}</button>\n            <button class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m\" (click)=\"saveNewAddress()\">{{ 'general.save' | transloco }}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel === 2\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-header\">\n            <h3 class=\"uk-card-title\">{{ 'address-book.address-book-import' | transloco }}</h3>\n          </div>\n          <div class=\"uk-card-body\">\n            <p>{{ 'address-book.import-address-book-entries-from-a-file' | transloco }}</p>\n          </div>\n          <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n            <div class=\"js-upload uk-text-left uk-width-auto@s uk-width-1-1\" style=\"display: inline-block;\" uk-form-custom>\n              <input type=\"file\" id=\"import-from-file\" (change)=\"importFromFile($event.target.files)\" multiple>\n              <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" type=\"button\" tabindex=\"-1\">{{ 'address-book.import-address-book' | transloco }}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-header\">\n            <h3 class=\"uk-card-title\">{{ 'address-book.address-book-export' | transloco }}</h3>\n          </div>\n          <div class=\"uk-card-body\">\n            <p>{{ 'address-book.export-all-address-book-entries-to-a-file-or-qr-code-url' | transloco }}</p>\n            <p>{{ 'address-book.note-exported-address-book-will-not-be-encrypted-by-your-wal' | transloco }}</p>\n            <div *ngIf=\"addressBookShowFileExport\" uk-grid>\n              <div class=\"uk-width-1-1\">\n                <hr class=\"uk-divider-icon\">\n              </div>\n\n              <div class=\"uk-width-1-1@s uk-width-1-2@m uk-width-1-3@l\">\n                <img *ngIf=\"addressBookShowQRExport\" [src]=\"addressBookQRExportImg\" alt=\"QR code\" style=\"border-radius: 6px;\">\n                <span *ngIf=\"!addressBookShowQRExport\" class=\"uk-text-warning\">{{ 'address-book.address-book-too-large-for-a-qr-code' | transloco }}<br>{{ 'address-book.if-you-need-a-qr-use-fewer-entries-or-shorter-aliases' | transloco }}</span>\n              </div>\n              <div class=\"uk-width-1-1@s uk-width-1-2@m uk-width-2-3@l\">\n                <span *ngIf=\"addressBookShowQRExport\">{{ 'address-book.scan-the-qr-code-on-any-device-to-import-your-address-book' | transloco }}<br><br></span>\n                <span *ngIf=\"addressBookShowQRExport\">{{ 'address-book.you-can-also-import-your-address-book-by-using-the-url-below' | transloco }}</span>\n                <span *ngIf=\"!addressBookShowQRExport\">{{ 'address-book.you-can-still-import-your-address-book-by-using-the-url' | transloco }}</span>\n                <br><br>\n                <input type=\"text\" class=\"uk-input\" style=\"max-width: 750px;\" value=\"{{ addressBookQRExportUrl }}\"><br>\n                <div class=\"nlt-button-group\">\n                  <button ngxClipboard [cbContent]=\"addressBookQRExportUrl\" (cbOnSuccess)=\"notificationService.sendSuccess('Address book export copied to clipboard!')\" class=\"uk-button uk-button-secondary uk-width-1-1@s uk-width-auto@m uk-margin-small-top\" style=\"margin-left: 0;\">{{ 'general.copy-to-clipboard' | transloco }}</button>\n                  <button (click)=\"exportAddressBookToFile()\" class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m uk-margin-small-top\">{{ 'address-book.export-as-file' | transloco }}</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"!addressBookShowFileExport\" class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n            <button (click)=\"exportAddressBook()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">{{ 'address-book.export-address-book' | transloco }}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</div>\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport BigNumber from 'bignumber.js';\nimport {UtilService} from '../../services/util.service';\nimport {NanoBlockService} from '../../services/nano-block.service';\n// import {Subject, timer} from 'rxjs';\n// import {debounce} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {\n  AppSettingsService,\n  // LedgerService,\n  // LedgerStatus,\n  // ModalService,\n  NotificationService,\n  // RepresentativeService,\n  WalletService\n} from '../../services';\n// import { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-ai',\n  templateUrl: './ai.component.html',\n  styleUrls: ['./ai.component.css']\n})\n\nexport class AiComponent implements OnInit {\n\n  @ViewChild('aiFrame') childIframe: ElementRef;\n\n  // accounts = this.walletService.wallet.accounts;\n  // isLedgerWallet = this.walletService.isLedgerWallet();\n  // isSingleKeyWallet = this.walletService.isSingleKeyWallet();\n  // viewAdvanced = false;\n  // hidePopup = true;\n  // string = '';\n  locked = this.walletService.isLocked();\n\n  // // When we change the accounts, redetect changable reps (Debounce by 5 seconds)\n  // accountsChanged$ = new Subject();\n  // reloadRepWarning$ = this.accountsChanged$.pipe(debounce(() => timer(5000)));\n\n  constructor(\n    private http: HttpClient,\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    // public modal: ModalService,\n    // public settings: AppSettingsService,\n    private nanoBlock: NanoBlockService,\n    // private representatives: RepresentativeService,\n    private router: Router,\n    private util: UtilService,\n    // private ledger: LedgerService,\n    // private translocoService: TranslocoService\n    ) { }\n\n  ngOnChanges() {\n    this.locked = this.walletService.isLocked()\n  }\n\n  async ngOnInit() {\n\n    var self = this\n\n    var on = false\n\n    // if (this.walletService.isLocked()) {\n\n    //   const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n    //   if (wasUnlocked === false) {\n    //     this.router.navigate(['accounts']);\n    //     return;\n    //   }\n\n    // }\n\n\n    // this.showPopup = false\n\n    // window.addEventListener(\n    //   \"prompt\",\n    //   (event) => {\n    //     // if (event.data && typeof event.data === 'string' && event.data.includes('success')) {\n\n    //     //   this.purchasePrompt\n          \n    //     //   // this.string = event.data\n\n    //     //   // const params = new URLSearchParams(this.string.split('?')[1]);\n\n    //     //   // this.router.navigate(['send'], { queryParams: { \n    //     //   //   to: event.data.replace('nano:', '').split('?')[0],\n    //     //   //   amount: params.getAll('amount') || \"0\",\n    //     //   //   callback: params.getAll('callback'),\n    //     //   // } });\n\n    //     // }\n    //     alert('Yooo')\n    //   },\n    //   false\n    // );\n\n    // window.onmessage = function(e) {\n    //     if (e.data == 'mounted') {\n    //         // alert('It mounted');\n    //     }\n    //     if (e.data == 'prompt') {\n    //         // alert('It prompted');\n    //         self.purchasePrompt()\n    //     }\n    // };\n\n    // window.addEventListener(\"message\", ({data}) => {\n    //   console.log(\"Message from worker: \" + data); // 3\n    // });\n\n\n    // window.addEventListener('message', receiveMessage, false);\n\n    // function receiveMessage(event) {\n    //   // Check the origin of the message to ensure it's from a trusted source\n    //   if (event.origin !== 'http://example.com') {\n    //     return;\n    //   }\n      \n    //   // Log the received message from the child iframe\n    //   console.log('Received message from child iframe:', event.data);\n\n    // }\n\n    // iframe.contentWindow.postMessage('purchase', '*');\n\n  }\n\n  ngAfterViewInit() {\n    // Get the reference to the iframe element\n   const isIFrame = (input: HTMLElement | null): input is HTMLIFrameElement => input !== null && input.tagName === 'IFRAME';\n\n   //  var iframe = document.getElementById('aiFrame');\n\n   //  if (isIFrame(iframe) && iframe.contentWindow) {\n   //      iframe.contentWindow.postMessage('message', '*');\n   //      console.log(\"sdas\")\n   //  }\n\n    // Add an event listener to listen for messages from the child iframe\n    window.addEventListener('message', this.receiveMessage.bind(this), false);\n\n    // Send a message to the child iframe\n    // iframe.contentWindow.postMessage('Hello from parent!', 'http://example.com');\n  }\n\n  receiveMessage(event: MessageEvent) {\n    // Check the origin of the message to ensure it's from a trusted source\n    if (event.origin !== 'https://ai.nault.pro') {\n      return;\n    }\n\n    // Log the received message from the child iframe\n    // if (event.data.action === 'loading') this.notificationService.sendError(`Thinking..`);\n    if (event.data.action === 'prompt') this.purchasePrompt(event.data.price)\n  }\n\n  async purchasePrompt(amount) {\n\n    // console.log('CHILD->PARENT:', \"Purchasing Prompt\");\n\n    // if (this.walletService.isLocked()) {\n\n    //   const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n    //   if (wasUnlocked === false) {\n    //     this.router.navigate(['accounts']);\n    //     return;\n    //   }\n\n    // }\n\n    const walletAccount = this.walletService.wallet.accounts[0]\n\n    try {\n\n      // hard code\n      const destinationID = 'nano_1chatai164r4whzni648buh5u58ju9kfej8kmw4h73zhmszxbb7k1dgto6gu';\n\n      // const newHash = await this.nanoBlock.generateSend(walletAccount, destinationID,this.util.nano.mnanoToRaw('0.01'), this.walletService.isLedgerWallet());\n      const newHash = await this.nanoBlock.generateSend(walletAccount, destinationID,this.util.nano.mnanoToRaw(amount), this.walletService.isLedgerWallet());\n      // const newHash = await this.nanoBlock.generateSend(walletAccount, destinationID,this.util.nano.mnanoToRaw('0.01'), this.walletService.isLedgerWallet());\n\n      if (newHash) {\n\n        const isIFrame = (input: HTMLElement | null): input is HTMLIFrameElement => input !== null && input.tagName === 'IFRAME';\n\n        var iframe = document.getElementById('aiFrame');\n\n        if (isIFrame(iframe) && iframe.contentWindow) {\n\n            iframe.contentWindow.postMessage({ hash: newHash }, '*');\n\n            // this.notificationService.sendError(`Sent.`);\n            // this.notificationService.sendSuccess(`Payed 0.01`);\n\n        }\n\n      } else {\n        \n        if (!this.walletService.isLedgerWallet()) {\n          this.notificationService.sendError(`Error paying, please try again.`);\n        }\n\n      }\n\n    } catch (err) {\n\n      console.log( err.message )\n\n      // this.notificationService.sendError(`Error paying: ${err.message}`);\n    \n    }\n\n    await this.walletService.reloadBalances();\n\n    // return newHash\n\n  }\n\n\n}\n","<div>\n\t<!-- <iframe id=\"aiFrame\" src=\"http://localhost:8080\" name=\"nault\" style=\" width: 100%; height: 94vh; \" frameborder=\"0\"></iframe> -->\n\t<!-- <iframe id=\"aiFrame\" src=\"https://xno.social\" name=\"nault\" style=\" width: 100%; height: 95vh; \" frameborder=\"0\"></iframe> -->\n\t<iframe id=\"aiFrame\" src=\"https://ai.nault.pro\" name=\"nault\" style=\" width: 100%; height: 95vh; \" frameborder=\"0\"></iframe>\n</div>","<div class=\"nav-representative-info\" *ngIf=\"(displayedRepresentatives.length > 0) else noRepresentatives\">\n  <div class=\"representative\" *ngFor=\"let rep of displayedRepresentatives; let repIdx = index\" (mouseover)=\"showRepHelp=rep.id\" (mouseout)=\"showRepHelp=null\">\n    <h2>{{\n        (repIdx !== 0)\n      ? (\n          'change-rep-widget.representative-for-account' | transloco: { account: (\n            rep.accounts[0].addressBookName\n          ? ( '\"' + rep.accounts[0].addressBookName + '\"' )\n          : ( rep.accounts[0].id.slice(0, 10) + '...' )\n        )}\n      )\n      : ('general.representative' | transloco)\n    }}</h2>\n    <div class=\"representative-name-row\">\n      <a (click)=\"showRepSelectionForSpecificRep(rep)\" class=\"name\">{{ rep.label || ('change-rep-widget.unknown-rep' | transloco) }}</a>\n      <div class=\"weight-total\" *ngIf=\"!rep.percent.isZero()\">{{ rep.percent.toFixed(2) }}%</div>\n    </div>\n    <ng-container [ngSwitch]=\"true\">\n      <div class=\"representative-health-row health-green\" *ngSwitchCase=\"(rep.statusText == 'trusted')\">\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">{{ 'change-rep-widget.good-representative' | transloco }}</div>\n      </div>\n      <div class=\"representative-health-row health-green\" *ngSwitchCase=\"(rep.statusText == 'ok')\">\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">{{ 'change-rep-widget.good-representative' | transloco }}</div>\n      </div>\n      <div class=\"representative-health-row health-yellow\" *ngSwitchCase=\"(rep.statusText == 'warn')\">\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">{{ 'change-rep-widget.acceptable-representative' | transloco }}</div>\n      </div>\n      <div class=\"representative-health-row health-red\" *ngSwitchCase=\"(rep.statusText == 'alert')\">\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">{{ 'change-rep-widget.bad-representative' | transloco }}</div>\n      </div>\n      <div class=\"representative-health-row health-unknown\" *ngSwitchDefault>\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">{{ 'change-rep-widget.unknown-status' | transloco }}</div>\n      </div>\n    </ng-container>\n    <div [class]=\"[ 'representative-help-tooltip', showRepHelp==rep.id ? 'visible' : 'hidden' ]\">\n      <p class=\"primary\">{{ 'change-rep-widget.rep-represents-you' | transloco: { name: (rep.label || ('change-rep-widget.unknown-rep' | transloco)) } }}</p>\n      <p>{{ 'change-rep-widget.you-can-change-representative-at-any-time' | transloco }}</p>\n      <div class=\"header-row\">\n        <div class=\"separator\"></div>\n        <h2>{{ 'change-rep-widget.health' | transloco }}</h2>\n        <div class=\"separator\"></div>\n      </div>\n      <p class=\"uk-text-danger\" *ngIf=\"rep.status.markedToAvoid\">\n        <span uk-icon=\"icon: warning;\"></span>{{ 'change-rep-widget.this-representative-is-marked-as-avoid' | transloco }}\n      </p>\n      <p class=\"uk-text-danger\" *ngIf=\"rep.status.markedAsNF\">\n        <span uk-icon=\"icon: warning;\"></span>{{ 'change-rep-widget.this-representative-is-marked-as-nf' | transloco }}\n      </p>\n      <p class=\"uk-text-danger\" *ngIf=\"rep.status.closing\">\n        <span uk-icon=\"icon: warning;\"></span>{{ 'change-rep-widget.this-representative-has-announced-plans-to-permanently-shutdown' | transloco }}\n      </p>\n      <p class=\"uk-text-danger\" *ngIf=\"rep.status.veryHighWeight\">\n        <span uk-icon=\"icon: warning;\"></span>{{ 'change-rep-widget.this-representative-has-a-very-high-voting-weight' | transloco: { percent: 5 } }}\n      </p>\n      <p class=\"uk-text-warning\" *ngIf=\"rep.status.highWeight\">\n        <span uk-icon=\"icon: warning;\"></span>{{ 'change-rep-widget.this-representative-has-a-high-voting-weight' | transloco: { percent: 3 } }}\n      </p>\n      <p class=\"uk-text-danger\" *ngIf=\"rep.status.veryLowUptime && rep.status.uptime > 0\">\n        <span uk-icon=\"icon: warning;\"></span>{{ 'change-rep-widget.this-representative-is-often-offline' | transloco: { percent: rep.status.uptime.toFixed(1) } }}\n      </p>\n      <p class=\"uk-text-warning\" *ngIf=\"rep.status.lowUptime && rep.status.uptime > 0\">\n        <span uk-icon=\"icon: warning;\"></span>{{ 'change-rep-widget.this-representative-is-sometimes-offline' | transloco: { percent: rep.status.uptime.toFixed(1) } }}\n      </p>\n      <p class=\"uk-text-danger\" *ngIf=\"!rep.status.online && rep.status.uptime === 0\">\n        <span uk-icon=\"icon: warning;\"></span>{{ 'change-rep-widget.this-representative-has-been-offline-for-the-past-days' | transloco: { days: rep.status.daysSinceLastVoted } }}\n      </p>\n      <ng-container [ngSwitch]=\"true\">\n        <p *ngSwitchCase=\"(rep.statusText == 'trusted')\">\n          {{ 'change-rep-widget.you-have-marked-this-representative-as-trusted' | transloco }}\n        </p>\n        <p class=\"uk-text-success\" *ngSwitchCase=\"(rep.statusText == 'ok')\">\n          <span uk-icon=\"icon: check;\"></span>{{ 'change-rep-widget.we-found-no-issues-with-uptime-or-weight' | transloco }}\n        </p>\n        <p *ngSwitchCase=\"(rep.statusText == 'warn')\">\n          {{ 'change-rep-widget.switching-to-a-different-representative-could-improve' | transloco }}\n        </p>\n        <p *ngSwitchCase=\"(rep.statusText == 'alert')\">\n          {{ 'change-rep-widget.it-is-highly-advised-to-switch-to-a-different-representative' | transloco }}\n        </p>\n        <p *ngSwitchDefault>\n          <span uk-icon=\"icon: question;\"></span>{{ 'change-rep-widget.we-could-not-determine-status-of-this-representative' | transloco }}\n        </p>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<ng-template #noRepresentatives>\n  <div class=\"nav-representative-info\" *ngIf=\"(!initialLoadComplete || selectedAccountHasRepresentative) else selectedAccountHasNoRep\">\n    <div class=\"representative\">\n      <h2>{{ 'general.representative' | transloco }}</h2>\n      <div class=\"representative-name-row\">\n        <div class=\"name no-interact\">{{ 'general.loading' | transloco }}</div>\n      </div>\n      <div class=\"representative-health-row health-unknown health-loading\">\n        <div uk-spinner=\"ratio: 0.5;\"></div>\n        <div class=\"label\">{{ 'change-rep-widget.checking-status' | transloco }}</div>\n      </div>\n    </div>\n  </div>\n  <ng-template #selectedAccountHasNoRep>\n    <div class=\"nav-representative-info\">\n      <div class=\"representative\">\n        <h2>{{ 'general.representative' | transloco }}</h2>\n        <div class=\"representative-name-row\">\n          <div class=\"name no-interact\">{{ 'change-rep-widget.representative-none' | transloco }}</div>\n        </div>\n        <div class=\"representative-health-row health-unknown\">\n          <div class=\"health-icon\"></div>\n          <div class=\"label\">{{ 'change-rep-widget.receive-a-transaction-to-configure' | transloco }}</div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</ng-template>\n\n<div class=\"nav-status-row interactable uk-animation-slide-left\" (click)=\"showRepSelectionForAllChangeableReps()\" *ngIf=\"showRepChangeRequired\">\n  <div class=\"status-icon\">\n    <span class=\"uk-text-warning\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n  </div>\n  <div class=\"status-labels\">\n    <div class=\"label primary uk-text-warning\">{{ 'change-rep-widget.representative-change-required' | transloco }}</div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {NanoBlockService} from '../../services/nano-block.service';\nimport {RepresentativeService} from '../../services/representative.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-change-rep-widget',\n  templateUrl: './change-rep-widget.component.html',\n  styleUrls: ['./change-rep-widget.component.css']\n})\nexport class ChangeRepWidgetComponent implements OnInit {\n\n  changeableRepresentatives = this.repService.changeableReps;\n  displayedRepresentatives = [];\n  representatives = [];\n  showRepChangeRequired = false;\n  showRepHelp = false;\n  selectedAccount = null;\n  selectedAccountHasRep = false;\n  initialLoadComplete = false;\n\n  constructor(\n    private walletService: WalletService,\n    private blockService: NanoBlockService,\n    private repService: RepresentativeService,\n    private router: Router\n    ) { }\n\n  async ngOnInit() {\n    this.repService.walletReps$.subscribe(async reps => {\n      if ( reps[0] === null ) {\n        // initial state from new BehaviorSubject([null])\n        return;\n      }\n\n      this.representatives = reps;\n      await this.updateChangeableRepresentatives();\n      this.updateDisplayedRepresentatives();\n      this.initialLoadComplete = true;\n    });\n\n    this.walletService.wallet.selectedAccount$.subscribe(async acc => {\n      this.selectedAccount = acc;\n      this.updateDisplayedRepresentatives();\n    });\n\n    // Detect if a wallet is reset\n    this.walletService.wallet.newWallet$.subscribe(shouldReload => {\n      if (shouldReload) {\n        this.resetRepresentatives();\n      }\n    });\n\n    // Detect if a new open block is received\n    this.blockService.newOpenBlock$.subscribe(async shouldReload => {\n      if (shouldReload) {\n        await this.repService.getRepresentativesOverview(); // calls walletReps$.next\n      }\n    });\n\n    this.repService.changeableReps$.subscribe(async reps => {\n      // Includes both acceptable and bad reps\n      // When user clicks 'Rep Change Required' action, acceptable reps will also be included\n      this.changeableRepresentatives = reps;\n\n      // However 'Rep Change Required' action will only appear when there is at least one bad rep\n      this.showRepChangeRequired = reps.some(rep => (rep.status.changeRequired === true));\n\n      this.updateDisplayedRepresentatives();\n    });\n\n    this.selectedAccount = this.walletService.wallet.selectedAccount;\n    this.updateSelectedAccountHasRep();\n    await this.repService.getRepresentativesOverview(); // calls walletReps$.next\n  }\n\n  async resetRepresentatives() {\n    console.log('Reloading representatives..');\n    this.initialLoadComplete = false;\n    this.selectedAccount = null;\n    this.representatives = [];\n    this.changeableRepresentatives = [];\n    this.showRepChangeRequired = false;\n    this.updateDisplayedRepresentatives();\n    await this.repService.getRepresentativesOverview(); // calls walletReps$.next\n    console.log('Representatives reloaded');\n  }\n\n  async updateChangeableRepresentatives() {\n    await this.repService.detectChangeableReps(this.representatives);\n  }\n\n  updateDisplayedRepresentatives() {\n    this.updateSelectedAccountHasRep();\n    this.displayedRepresentatives = this.getDisplayedRepresentatives(this.representatives);\n  }\n\n  includeRepRequiringChange(displayedReps: any[]) {\n    const repRequiringChange =\n      this.changeableRepresentatives\n        .sort((a, b) => b.delegatedWeight.minus(a.delegatedWeight))\n        .filter(\n          (changeableRep) => (\n              (changeableRep.status.changeRequired === true)\n            && displayedReps.every(\n              (displayedRep) =>\n                (displayedRep.id !== changeableRep.id)\n            )\n          )\n        )[0];\n\n    if (repRequiringChange == null) {\n      return [...displayedReps];\n    }\n\n    return [ ...displayedReps, Object.assign({}, repRequiringChange) ];\n  }\n\n  updateSelectedAccountHasRep() {\n    if (this.selectedAccount != null) {\n      this.selectedAccountHasRep = !!this.selectedAccount.frontier;\n      return;\n    }\n\n    this.selectedAccountHasRep =\n      this.walletService.wallet.accounts.some(\n        (acc) =>\n          (acc.frontier)\n      );\n  }\n\n  getDisplayedRepresentatives(representatives: any[]) {\n    if (this.representatives.length === 0) {\n      return [];\n    }\n\n    if (this.selectedAccount !== null) {\n      const selectedAccountRep =\n        this.representatives\n          .filter(\n            (rep) =>\n              rep.accounts.some(\n                (a) =>\n                  (a.id === this.selectedAccount.id)\n              )\n          )[0];\n\n      if (selectedAccountRep == null) {\n        return [];\n      }\n\n      const displayedRepsAllAccounts = [ Object.assign( {}, selectedAccountRep ) ];\n\n      return this.includeRepRequiringChange(displayedRepsAllAccounts);\n    }\n\n    const sortedRepresentatives: any[] = [...representatives];\n\n    sortedRepresentatives.sort((a, b) => b.delegatedWeight.minus(a.delegatedWeight));\n\n    const displayedReps = [ Object.assign( {}, sortedRepresentatives[0] ) ];\n\n    return this.includeRepRequiringChange(displayedReps);\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  showRepSelectionForSpecificRep(clickedRep) {\n    this.showRepHelp = false;\n    const accountsToChangeRepFor = (\n        (\n            (this.selectedAccount !== null)\n          && clickedRep.accounts.some(a => (a.id === this.selectedAccount.id))\n        )\n      ? this.selectedAccount.id\n      : ( // all accounts that delegate to this rep\n        this.representatives\n          .filter(\n            (rep) =>\n              (rep.id === clickedRep.id)\n          )\n          .map(\n            (rep) =>\n              rep.accounts.map(a => a.id).join(',')\n          )\n          .join(',')\n      )\n    );\n\n    this.router.navigate(['/representatives'], {\n      queryParams: { hideOverview: true, accounts: accountsToChangeRepFor, showRecommended: true }\n    });\n  }\n\n  showRepSelectionForAllChangeableReps() {\n    const allAccounts = this.changeableRepresentatives.map(rep => rep.accounts.map(a => a.id).join(',')).join(',');\n\n    this.router.navigate(['/representatives'], { queryParams: { hideOverview: true, accounts: allAccounts, showRecommended: true } });\n  }\n\n}\n","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {PriceService} from '../../services/price.service';\nimport {PowService} from '../../services/pow.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {ApiService} from '../../services/api.service';\nimport {WebsocketService} from '../../services/websocket.service';\nimport {NodeService} from '../../services/node.service';\nimport {UtilService} from '../../services/util.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {RepresentativeService} from '../../services/representative.service';\nimport {NinjaService} from '../../services/ninja.service';\nimport {QrModalService} from '../../services/qr-modal.service';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-configure-app',\n  templateUrl: './configure-app.component.html',\n  styleUrls: ['./configure-app.component.css']\n})\n\nexport class ConfigureAppComponent implements OnInit {\n\n  constructor(\n    private walletService: WalletService,\n    private notifications: NotificationService,\n    private appSettings: AppSettingsService,\n    private addressBook: AddressBookService,\n    private pow: PowService,\n    private api: ApiService,\n    private websocket: WebsocketService,\n    private workPool: WorkPoolService,\n    private repService: RepresentativeService,\n    private node: NodeService,\n    private util: UtilService,\n    private price: PriceService,\n    private ninja: NinjaService,\n    private renderer: Renderer2,\n    private qrModalService: QrModalService,\n    private translocoService: TranslocoService) { }\n  wallet = this.walletService.wallet;\n\n  languages = this.translocoService.getAvailableLangs() as [{id: string, label: string}];\n  \n  selectedLanguage = this.languages[0].id;\n\n  denominations = [\n    { name: 'XNO', value: 'mnano' },\n    { name: 'knano', value: 'knano' },\n    { name: 'nano', value: 'nano' },\n  ];\n  selectedDenomination = this.denominations[0].value;\n\n  storageOptions = [\n    { name: this.translocoService.translate('configure-app.storage-options.browser-local-storage'), value: 'localStorage' },\n    { name: this.translocoService.translate('configure-app.storage-options.none'), value: 'none' },\n  ];\n\n  selectedStorage = this.storageOptions[0].value;\n\n  currencies = [\n    { name: this.translocoService.translate('configure-app.currencies.none'), value: '' },\n    { name: 'USD - US Dollar', value: 'USD' },\n    { name: 'BTC - Bitcoin', value: 'BTC' },\n    { name: 'AUD - Australian Dollar', value: 'AUD' },\n    { name: 'BRL - Brazilian Real', value: 'BRL' },\n    { name: 'CUP - Cuban Peso', value: 'CUP' },\n    { name: 'CAD - Canadian Dollar', value: 'CAD' },\n    { name: 'CHF - Swiss Franc', value: 'CHF' },\n    { name: 'CLP - Chilean Peso', value: 'CLP' },\n    { name: 'CNY - Chinese Yuan', value: 'CNY' },\n    { name: 'CZK - Czech Koruna', value: 'CZK' },\n    { name: 'DKK - Danish Krown', value: 'DKK' },\n    { name: 'EUR - Euro', value: 'EUR' },\n    { name: 'GBP - British Pound', value: 'GBP' },\n    { name: 'HKD - Hong Kong Dollar', value: 'HKD' },\n    { name: 'HUF - Hungarian Forint', value: 'HUF' },\n    { name: 'IDR - Indonesian Rupiah', value: 'IDR' },\n    { name: 'ILS - Israeli New Shekel', value: 'ILS' },\n    { name: 'INR - Indian Rupee', value: 'INR' },\n    { name: 'JPY - Japanese Yen', value: 'JPY' },\n    { name: 'KRW - South Korean Won', value: 'KRW' },\n    { name: 'MXN - Mexican Peso', value: 'MXN' },\n    { name: 'MYR - Malaysian Ringgit', value: 'MYR' },\n    { name: 'NOK - Norwegian Krone', value: 'NOK' },\n    { name: 'NZD - New Zealand Dollar', value: 'NZD' },\n    { name: 'PHP - Philippine Piso', value: 'PHP' },\n    { name: 'PKR - Pakistani Rupee', value: 'PKR' },\n    { name: 'PLN - Polish Zloty', value: 'PLN' },\n    { name: 'RUB - Russian Ruble', value: 'RUB' },\n    { name: 'SEK - Swedish Krona', value: 'SEK' },\n    { name: 'SGD - Singapore Dollar', value: 'SGD' },\n    { name: 'THB - Thai Baht', value: 'THB' },\n    { name: 'TRY - Turkish Lira', value: 'TRY' },\n    { name: 'TWD - New Taiwan Dollar', value: 'TWD' },\n    { name: 'ZAR - South African Rand', value: 'ZAR' },\n  ];\n  selectedCurrency = this.currencies[0].value;\n\n  nightModeOptions = [\n    { name: this.translocoService.translate('configure-app.night-mode-options.enabled'), value: 'enabled' },\n    { name: this.translocoService.translate('configure-app.night-mode-options.disabled'), value: 'disabled' },\n  ];\n  selectedNightModeOption = this.nightModeOptions[0].value;\n\n  identiconOptions = [\n    { name: this.translocoService.translate('configure-app.identicon-options.none'), value: 'none' },\n    { name: this.translocoService.translate('configure-app.identicon-options.nanoidenticons-by-keerifox'), value: 'nanoidenticons' },\n    { name: this.translocoService.translate('configure-app.identicon-options.natricon-by-appditto'), value: 'natricon' },\n  ];\n  selectedIdenticonOption = this.identiconOptions[0].value;\n\n  inactivityOptions = [\n    { name: this.translocoService.translate('configure-app.identicon-options.never'), value: 0 },\n    { name: this.translocoService.translate('configure-app.identicon-options.1-minute'), value: 1 },\n    { name: this.translocoService.translate('configure-app.identicon-options.x-minutes', { minutes: 5 }), value: 5 },\n    { name:  this.translocoService.translate('configure-app.identicon-options.x-minutes', { minutes: 15 }), value: 15 },\n    { name:  this.translocoService.translate('configure-app.identicon-options.x-minutes', { minutes: 30 }), value: 30 },\n    { name: this.translocoService.translate('configure-app.identicon-options.1-hour'), value: 60 },\n    { name: this.translocoService.translate('configure-app.identicon-options.x-hours', { hours: 6 }), value: 360 },\n  ];\n  selectedInactivityMinutes = this.inactivityOptions[4].value;\n\n  powOptions = [\n    { name: this.translocoService.translate('configure-app.pow-options.external-nano-to'), value: 'nano.to' },\n    { name: this.translocoService.translate('configure-app.pow-options.best-option-available'), value: 'best' },\n    { name: this.translocoService.translate('configure-app.pow-options.client-side-gpu-webgl'), value: 'clientWebGL' },\n    { name: this.translocoService.translate('configure-app.pow-options.client-side-cpu-slowest'), value: 'clientCPU' },\n    // { name: this.translocoService.translate('configure-app.pow-options.external-selected-server'), value: 'server' },\n    { name: this.translocoService.translate('configure-app.pow-options.external-custom-server'), value: 'custom' },\n  ];\n  selectedPoWOption = this.powOptions[0].value;\n\n  multiplierOptions = [\n    { name: this.translocoService.translate('configure-app.multiplier-options.default-1x-or-1-64x'), value: 1 },\n    { name: '2x', value: 2 },\n    { name: '4x', value: 4 },\n    { name: '8x', value: 8 },\n    { name: '16x', value: 16 },\n    { name: '32x', value: 32 },\n    { name: '64x', value: 64 },\n  ];\n  selectedMultiplierOption: number = this.multiplierOptions[0].value;\n\n  pendingOptions = [\n    { name: this.translocoService.translate('configure-app.pending-options.automatic-largest-amount-first'), value: 'amount' },\n    { name: this.translocoService.translate('configure-app.pending-options.automatic-oldest-transaction-first'), value: 'date' },\n    { name: this.translocoService.translate('configure-app.pending-options.manual'), value: 'manual' },\n  ];\n  selectedPendingOption = this.pendingOptions[0].value;\n\n  // prefixOptions = [\n  //   { name: 'xrb_', value: 'xrb' },\n  //   { name: 'nano_', value: 'nano' },\n  // ];\n  // selectedPrefix = this.prefixOptions[0].value;\n\n  serverOptions = [];\n  selectedServer = null;\n\n  defaultRepresentative = null;\n  representativeResults$ = new BehaviorSubject([]);\n  showRepresentatives = false;\n  representativeListMatch = '';\n  repStatus = null;\n  representativeList = [];\n\n  serverAPI = null;\n  serverAPIUpdated = null;\n  serverWS = null;\n  serverAuth = null;\n  minimumReceive = null;\n\n  nodeBlockCount = null;\n  nodeUnchecked = null;\n  nodeCemented = null;\n  nodeUncemented = null;\n  peersStakeReq = null;\n  peersStakeTotal = null;\n  nodeVendor = null;\n  nodeNetwork = null;\n  statsRefreshEnabled = true;\n  shouldRandom = null;\n\n  customWorkServer = '';\n\n  showServerValues = () => this.selectedServer && this.selectedServer !== 'random' && this.selectedServer !== 'offline';\n  showStatValues = () => this.selectedServer && this.selectedServer !== 'offline';\n  showServerConfigs = () => this.selectedServer && this.selectedServer === 'custom';\n\n  async ngOnInit() {\n    this.loadFromSettings();\n    this.updateNodeStats();\n\n    setTimeout(() => this.populateRepresentativeList(), 500);\n  }\n\n  async populateRepresentativeList() {\n    // add trusted/regular local reps to the list\n    const localReps = this.repService.getSortedRepresentatives();\n    this.representativeList.push( ...localReps.filter(rep => (!rep.warn)) );\n\n    if (this.serverAPI) {\n      const verifiedReps = await this.ninja.recommendedRandomized();\n\n      // add random recommended reps to the list\n      for (const representative of verifiedReps) {\n        const temprep = {\n          id: representative.account,\n          name: representative.alias\n        };\n\n        this.representativeList.push(temprep);\n      }\n    }\n\n    // add untrusted local reps to the list\n    this.representativeList.push( ...localReps.filter(rep => (rep.warn)) );\n  }\n\n  async updateNodeStats(refresh= false) {\n    if ((!this.serverAPIUpdated ||\n      (this.serverAPIUpdated !== this.appSettings.settings.serverAPI && this.selectedServer === 'random'))) return;\n    // refresh is not enabled\n    if (refresh && !this.statsRefreshEnabled) return;\n    // Offline mode selected\n    if (this.selectedServer === 'offline') return;\n\n    this.statsRefreshEnabled = false;\n    try {\n      const blockCount = await this.api.blockCount();\n      this.nodeBlockCount = Number(blockCount.count).toLocaleString('en-US');\n      this.nodeUnchecked = Number(blockCount.unchecked).toLocaleString('en-US');\n      this.nodeCemented = Number(blockCount.cemented).toLocaleString('en-US');\n      this.nodeUncemented = Number(blockCount.count - blockCount.cemented).toLocaleString('en-US');\n    } catch {console.warn('Failed to get node stats: block count'); }\n\n    try {\n      const quorumData = await this.api.confirmationQuorum();\n      this.peersStakeReq = quorumData ? Number(this.util.nano.rawToMnano(quorumData.quorum_delta)).toLocaleString('en-US') : null;\n      this.peersStakeTotal = quorumData ? Number(this.util.nano.rawToMnano(quorumData.peers_stake_total)).toLocaleString('en-US') : null;\n    } catch {console.warn('Failed to get node stats: confirmation quorum'); }\n\n    try {\n      const version = await this.api.version();\n      this.nodeVendor = version.node_vendor;\n      this.nodeNetwork = version.network;\n    } catch {console.warn('Failed to get node stats: version'); }\n\n    setTimeout(() => this.statsRefreshEnabled = true, 5000);\n  }\n\n  loadFromSettings() {\n    const settings = this.appSettings.settings;\n\n    const matchingLanguage = this.languages.find(language => language.id === settings.language);\n    this.selectedLanguage = matchingLanguage.id || this.languages[0].id;\n\n    const matchingCurrency = this.currencies.find(d => d.value === settings.displayCurrency);\n    this.selectedCurrency = matchingCurrency.value || this.currencies[0].value;\n\n    const nightModeOptionString = (settings.lightModeEnabled === true) ? 'disabled' : 'enabled';\n    const matchingNightModeOption = this.nightModeOptions.find(d => d.value === nightModeOptionString);\n    this.selectedNightModeOption = matchingNightModeOption.value || this.nightModeOptions[0].value;\n\n    const matchingIdenticonOptions = this.identiconOptions.find(d => d.value === settings.identiconsStyle);\n    this.selectedIdenticonOption = matchingIdenticonOptions.value || this.identiconOptions[0].value;\n\n    const matchingStorage = this.storageOptions.find(d => d.value === settings.walletStore);\n    this.selectedStorage = matchingStorage.value || this.storageOptions[0].value;\n\n    const matchingInactivityMinutes = this.inactivityOptions.find(d => d.value === settings.lockInactivityMinutes);\n    this.selectedInactivityMinutes = matchingInactivityMinutes ? matchingInactivityMinutes.value : this.inactivityOptions[4].value;\n\n    const matchingPowOption = this.powOptions.find(d => d.value === settings.powSource);\n    this.selectedPoWOption = matchingPowOption ? matchingPowOption.value : this.powOptions[0].value;\n\n    const matchingMultiplierOption = this.multiplierOptions.find(d => d.value === settings.multiplierSource);\n    this.selectedMultiplierOption = matchingMultiplierOption ? matchingMultiplierOption.value : this.multiplierOptions[0].value;\n\n    this.customWorkServer = settings.customWorkServer;\n\n    const matchingPendingOption = this.pendingOptions.find(d => d.value === settings.pendingOption);\n    this.selectedPendingOption = matchingPendingOption ? matchingPendingOption.value : this.pendingOptions[0].value;\n\n    this.serverOptions = this.appSettings.serverOptions;\n    this.selectedServer = settings.serverName;\n    this.serverAPI = settings.serverAPI;\n    this.serverAPIUpdated = this.serverAPI;\n    this.serverWS = settings.serverWS;\n    this.serverAuth = settings.serverAuth;\n\n    this.minimumReceive = settings.minimumReceive;\n    this.defaultRepresentative = settings.defaultRepresentative;\n    if (this.defaultRepresentative) {\n      this.validateRepresentative();\n    }\n  }\n\n  async updateDisplaySettings() {\n    if (this.selectedNightModeOption === 'disabled') {\n      this.renderer.addClass(document.body, 'light-mode');\n      this.renderer.removeClass(document.body, 'dark-mode');\n      this.appSettings.setAppSetting('lightModeEnabled', true);\n    } else {\n      this.renderer.addClass(document.body, 'dark-mode');\n      this.renderer.removeClass(document.body, 'light-mode');\n      this.appSettings.setAppSetting('lightModeEnabled', false);\n    }\n\n    this.appSettings.setAppSetting('identiconsStyle', this.selectedIdenticonOption);\n\n    const newCurrency = this.selectedCurrency;\n    // const updatePrefixes = this.appSettings.settings.displayPrefix !== this.selectedPrefix;\n    const reloadFiat = this.appSettings.settings.displayCurrency !== newCurrency;\n    this.notifications.sendSuccess(this.translocoService.translate('configure-app.app-display-settings-successfully-updated'));\n\n    if (reloadFiat) {\n      // Reload prices with our currency, then call to reload fiat balances.\n      await this.price.getPrice(newCurrency);\n      this.appSettings.setAppSetting('displayCurrency', newCurrency);\n      this.walletService.reloadFiatBalances();\n    }\n\n    this.appSettings.setAppSetting('language', this.selectedLanguage);\n    this.translocoService.setActiveLang(this.selectedLanguage);\n\n    // if (updatePrefixes) {\n    //   this.appSettings.setAppSetting('displayPrefix', this.selectedPrefix);\n      // Go through accounts?\n      // this.wallet.accounts.forEach(account => {\n      //   account.id = this.util.account.setPrefix(account.id, this.selectedPrefix);\n      // });\n      // this.walletService.saveWalletExport();\n      //\n      // this.addressBook.addressBook.forEach(entry => {\n      //   entry.account = this.util.account.setPrefix(entry.account, this.selectedPrefix);\n      // });\n      // this.addressBook.saveAddressBook();\n    // }\n\n  }\n\n  async updateWalletSettings(hideAlert) {\n    const newStorage = this.selectedStorage;\n    const resaveWallet = this.appSettings.settings.walletStore !== newStorage;\n\n    // ask for user confirmation before clearing the wallet cache\n    if (resaveWallet && newStorage === this.storageOptions[1].value) {\n      const UIkit = window['UIkit'];\n      try {\n        await UIkit.modal.confirm(\n          `<p class=\"uk-alert uk-alert-danger\"><br><span class=\"uk-flex\"><span uk-icon=\"icon: warning; ratio: 3;\" class=\"uk-align-center\"></span></span>\n          <span style=\"font-size: 18px;\">\n          ${ this.translocoService.translate('configure-app.you-are-about-to-disable-storage-of-all-wallet-data-which') }\n          </span><br>\n          ${ this.walletService.isConfigured() ? '<br><b style=\"font-size: 18px;\">' + this.translocoService.translate('reset-wallet.before-continuing-make-sure-you-have-saved-the-nano-seed') + '</b><br><br><span style=\"font-size: 18px;\"><b>' + this.translocoService.translate('reset-wallet.you-will-not-be-able-to-recover-the-funds-without-a-backup') + '</b></span></p><br>' : '' }`\n        );\n      } catch (err) {\n        // pressing cancel, reset storage setting and interrupt\n        this.selectedStorage = this.storageOptions[0].value;\n        this.notifications.sendInfo(this.translocoService.translate('configure-app.switched-back-to-browser-local-storage-for-the-wallet-data'), {length: 10000});\n        return;\n      }\n    }\n\n    let newPoW = this.selectedPoWOption;\n    const newMultiplier = this.selectedMultiplierOption;\n    const pendingOption = this.selectedPendingOption;\n    let minReceive = null;\n    if (this.util.account.isValidNanoAmount(this.minimumReceive)) {\n      minReceive = this.minimumReceive;\n    }\n\n    // reload pending if threshold changes or if receive priority changes from manual to auto\n    let reloadPending = this.appSettings.settings.minimumReceive !== this.minimumReceive\n    || (pendingOption !== 'manual' && pendingOption !== this.appSettings.settings.pendingOption);\n\n    if (this.defaultRepresentative && this.defaultRepresentative.length) {\n      const valid = this.util.account.isValidAccount(this.defaultRepresentative);\n      if (!valid) {\n        return this.notifications.sendWarning(\n          this.translocoService.translate('configure-app.default-representative-is-not-a-valid-account')\n        );\n      }\n    }\n\n    if (this.appSettings.settings.powSource !== newPoW) {\n      if (newPoW === 'clientWebGL' && !this.pow.hasWebGLSupport()) {\n        this.notifications.sendWarning(this.translocoService.translate('configure-app.webgl-support-not-available-set-pow-to-best'));\n        newPoW = 'best';\n      }\n      if (newPoW === 'clientCPU' && !this.pow.hasWorkerSupport()) {\n        this.notifications.sendWarning(this.translocoService.translate('configure-app.cpu-worker-support-not-available-set-pow-to-best'));\n        newPoW = 'best';\n      }\n      // reset multiplier when not using it to avoid user mistake\n      if (newPoW !== 'clientWebGL' && newPoW !== 'clientCPU' && newPoW !== 'custom' && newPoW !== 'nano.to') {\n        this.selectedMultiplierOption = this.multiplierOptions[0].value;\n      }\n      // Cancel ongoing PoW if the old method was local PoW\n      if (this.appSettings.settings.powSource === 'clientWebGL' || this.appSettings.settings.powSource === 'clientCPU') {\n        // Check if work is ongoing, and cancel it\n        if (this.pow.cancelAllPow(false)) {\n          reloadPending = true; // force reload balance => re-work pow\n        }\n      }\n    } else if ((newPoW === 'clientWebGL' || newPoW === 'clientCPU') &&\n      newMultiplier < this.appSettings.settings.multiplierSource) {\n      // Cancel pow and re-work if multiplier is lower than earlier\n      if (this.pow.cancelAllPow(false)) {\n        reloadPending = true;\n      }\n    }\n\n    // reset work cache so that the new PoW will be used but only if larger than before\n    if (\n      newMultiplier > this.appSettings.settings.multiplierSource &&\n      newMultiplier > 1 &&\n      ((newPoW === 'clientWebGL' && this.pow.hasWebGLSupport()) ||\n      (newPoW === 'clientCPU' && this.pow.hasWorkerSupport()))\n    ) {\n      // if user accept to reset cache\n      if (await this.clearWorkCache()) {\n        reloadPending = true; // force reload balance => re-work pow\n      }\n    }\n\n    const newSettings = {\n      walletStore: newStorage,\n      lockInactivityMinutes: Number(this.selectedInactivityMinutes),\n      powSource: newPoW,\n      multiplierSource: Number(this.selectedMultiplierOption),\n      customWorkServer: this.customWorkServer,\n      pendingOption: pendingOption,\n      minimumReceive: minReceive,\n      defaultRepresentative: this.defaultRepresentative || null,\n    };\n\n    this.appSettings.setAppSettings(newSettings);\n\n    if (!hideAlert) this.notifications.sendSuccess(this.translocoService.translate('configure-app.app-wallet-settings-successfully-updated'));\n\n    if (resaveWallet) {\n      this.walletService.saveWalletExport(); // If swapping the storage engine, resave the wallet\n    }\n    if (reloadPending) {\n      this.walletService.reloadBalances();\n    }\n  }\n\n  async updateServerAndWalletSettings() {\n    this.updateWalletSettings(true)\n    this.updateServerSettings()\n  }\n\n  async updateServerSettings() {\n    const newSettings = {\n      serverName: this.selectedServer,\n      serverAPI: null,\n      serverWS: null,\n      serverAuth: null,\n    };\n\n    // Custom... do some basic validation\n    if (this.serverAPI != null && this.serverAPI.trim().length > 1) {\n      if (this.serverAPI.startsWith('https://') || this.serverAPI.startsWith('http://')) {\n        newSettings.serverAPI = this.serverAPI;\n      } else {\n        return this.notifications.sendWarning(this.translocoService.translate('configure-app.custom-api-server-has-an-invalid-address'));\n      }\n    }\n\n    if (this.serverWS != null && this.serverWS.trim().length > 1) {\n      if (this.serverWS.startsWith('wss://') || this.serverWS.startsWith('ws://')) {\n        newSettings.serverWS = this.serverWS;\n      } else {\n        return this.notifications.sendWarning(this.translocoService.translate('configure-app.custom-update-server-has-an-invalid-address'));\n      }\n    }\n\n    if (this.serverAuth != null && this.serverAuth.trim().length > 1) {\n      newSettings.serverAuth = this.serverAuth;\n    }\n\n    this.appSettings.setAppSettings(newSettings);\n    this.appSettings.loadAppSettings();\n\n    this.notifications.sendSuccess(this.translocoService.translate('configure-app.server-settings-successfully-updated'));\n\n    this.node.node.status = false; // Directly set node to offline since API url changed.  Status will get set by reloadBalances\n\n    // Reload balances which triggers an api check + reconnect to websocket server\n    await this.walletService.reloadBalances();\n    this.websocket.forceReconnect();\n    // this is updated after setting server to random and doing recheck of wallet balance\n    this.serverAPIUpdated = this.appSettings.settings.serverAPI;\n    this.serverAPI = this.serverAPIUpdated;\n    this.statsRefreshEnabled = true;\n    this.updateNodeStats();\n  }\n\n  searchRepresentatives() {\n    if (this.defaultRepresentative && !this.util.account.isValidAccount(this.defaultRepresentative)) this.repStatus = 0;\n    else this.repStatus = null;\n\n    this.showRepresentatives = true;\n    const search = this.defaultRepresentative || '';\n\n    const matches = this.representativeList\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      // remove duplicate accounts\n      .filter((item, pos, self) => this.util.array.findWithAttr(self, 'id', item.id) === pos)\n      .slice(0, 5);\n\n    this.representativeResults$.next(matches);\n  }\n\n  selectRepresentative(rep) {\n    this.showRepresentatives = false;\n    this.defaultRepresentative = rep;\n    this.searchRepresentatives();\n    this.validateRepresentative();\n  }\n\n  async validateRepresentative() {\n    setTimeout(() => this.showRepresentatives = false, 400);\n    if (this.defaultRepresentative) this.defaultRepresentative = this.defaultRepresentative.replace(/ /g, '');\n\n    if (!this.defaultRepresentative) {\n      this.representativeListMatch = '';\n      return;\n    }\n\n    const rep = this.repService.getRepresentative(this.defaultRepresentative);\n    // const ninjaRep = await this.ninja.getAccount(this.defaultRepresentative);\n\n    if (rep) {\n      this.representativeListMatch = rep.name;\n    } \n    // else if (ninjaRep) {\n    //   this.representativeListMatch = ninjaRep.alias;\n    // } \n    else {\n      this.representativeListMatch = '';\n    }\n  }\n\n  // When changing the Server Config option, prefill values\n  serverConfigChange(newServer) {\n    const custom = this.serverOptions.find(c => c.value === newServer);\n    if (custom) {\n      this.serverAPI = custom.api;\n      this.serverAPIUpdated = null;\n      this.serverWS = custom.ws;\n      this.serverAuth = custom.auth;\n      this.shouldRandom = custom.shouldRandom ? this.translocoService.translate('general.yes') : this.translocoService.translate('general.no');\n    }\n\n    // reset server stats until updated\n    this.nodeBlockCount = null;\n    this.nodeUnchecked = null;\n    this.nodeCemented = null;\n    this.nodeUncemented = null;\n    this.peersStakeReq = null;\n    this.peersStakeTotal = null;\n    this.nodeVendor = null;\n    this.nodeNetwork = null;\n    this.statsRefreshEnabled = newServer === 'random' ? false : true;\n  }\n\n  getRemotePoWOptionName() {\n    const optionName = 'External - Selected Server';\n\n    if ( (this.selectedServer === 'random') || (this.selectedServer === 'offline') ) {\n      return optionName;\n    }\n\n    const selectedServerOption = this.appSettings.serverOptions.find(d => d.value === this.selectedServer);\n\n    if (!selectedServerOption) {\n      return optionName;\n    }\n\n    return ( optionName + ' (' + selectedServerOption.name + ')' );\n  }\n\n  async clearWorkCache() {\n    const UIkit = window['UIkit'];\n    try {\n      await UIkit.modal.confirm('<p style=\"text-align: center;\">' + this.translocoService.translate('configure-app.you-are-about-to-delete-all-locally-cached-proof-of-work') + '<br><br><b>' + this.translocoService.translate('configure-app.are-you-sure') + '</b></p>');\n      this.workPool.clearCache();\n      this.notifications.sendSuccess(this.translocoService.translate('configure-app.successfully-cleared-the-work-cache'));\n      return true;\n    } catch (err) { return false; }\n  }\n\n  async clearWalletData() {\n    const UIkit = window['UIkit'];\n    try {\n      await UIkit.modal.confirm('<p class=\"uk-alert uk-alert-danger\"><br><span class=\"uk-flex\"><span uk-icon=\"icon: warning; ratio: 3;\" class=\"uk-align-center\"></span></span><span style=\"font-size: 18px;\">' + this.translocoService.translate('configure-app.you-are-about-to-delete-all-locally-stored-data-about-your') + '</span><br><br><b style=\"font-size: 18px;\">' + this.translocoService.translate('reset-wallet.before-continuing-make-sure-you-have-saved-the-nano-seed') + '</b><br><br><span style=\"font-size: 18px;\"><b>' + this.translocoService.translate('reset-wallet.you-will-not-be-able-to-recover-the-funds-without-a-backup') + '</b></span></p><br>');\n      this.walletService.resetWallet();\n      this.walletService.removeWalletData();\n\n      this.notifications.sendSuccess(this.translocoService.translate('configure-app.successfully-deleted-all-wallet-data'));\n    } catch (err) {}\n  }\n\n  async clearAllData() {\n    const UIkit = window['UIkit'];\n    try {\n      await UIkit.modal.confirm('<p class=\"uk-alert uk-alert-danger\"><br><span class=\"uk-flex\"><span uk-icon=\"icon: warning; ratio: 3;\" class=\"uk-align-center\"></span></span><span style=\"font-size: 18px;\">' + this.translocoService.translate('configure-app.clear-all-data.1') + '</span><br><br><b style=\"font-size: 18px;\">' + this.translocoService.translate('reset-wallet.before-continuing-make-sure-you-have-saved-the-nano-seed') + '</b><br><br><span style=\"font-size: 18px;\"><b>' + this.translocoService.translate('reset-wallet.you-will-not-be-able-to-recover-the-funds-without-a-backup') + '</b></span></p><br>');\n      this.walletService.resetWallet();\n      this.walletService.removeWalletData();\n\n      this.workPool.deleteCache();\n      this.addressBook.clearAddressBook();\n      this.appSettings.clearAppSettings();\n      this.repService.resetRepresentativeList();\n      this.api.deleteCache();\n\n      this.loadFromSettings();\n\n      this.notifications.sendSuccess(this.translocoService.translate('configure-app.clear-all-data.successfully-deleted-locally-stored-data-and-reset-the'));\n\n      // Get a new random API server or Nault will get stuck in offline mode\n      this.updateServerSettings();\n    } catch (err) {}\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'rep1':\n          this.defaultRepresentative = data.content;\n          this.validateRepresentative();\n          break;\n      }\n    }, () => {}\n    );\n  }\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid *transloco=\"let t\">\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">{{ 'configure-app.configure-nault' | transloco }}</h2>\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">{{ 'configure-app.display-settings' | transloco }}</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"languageselector\">\n                  {{ 'configure-app.language' | transloco }}\n                </label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"selectedLanguage\" id=\"languageselector\">\n                    <option *ngFor=\"let language of languages\" [value]=\"language.id\">{{ language.label }}</option>\n                  </select>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">{{ 'configure-app.fiat-currency' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.change-the-currency-pair-used-when-showing-fiat-values')\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"selectedCurrency\" id=\"form-horizontal-select\">\n                    <option *ngFor=\"let currency of currencies\" [value]=\"currency.value\">{{ currency.name }}</option>\n                  </select>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">{{ 'configure-app.night-mode' | transloco }}</label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"selectedNightModeOption\" id=\"form-horizontal-select\">\n                    <option *ngFor=\"let nightModeOption of nightModeOptions\" [value]=\"nightModeOption.value\">{{ nightModeOption.name }}</option>\n                  </select>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div style=\"display: none;\" class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">{{ 'configure-app.identicons' | transloco }}</label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"selectedIdenticonOption\" id=\"form-horizontal-select\">\n                    <option *ngFor=\"let identiconOption of identiconOptions\" [value]=\"identiconOption.value\">{{ identiconOption.name }}</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n        <button (click)=\"updateDisplaySettings()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">{{ 'configure-app.update-display-settings' | transloco }}</button>\n      </div>\n    </div>\n\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">{{ 'configure-app.wallet-settings' | transloco }}</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">{{ 'configure-app.lock-after-inactivity' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.change-if-your-wallet-should-be-locked-automatically-after')\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedInactivityMinutes\">\n                      <option *ngFor=\"let option of inactivityOptions\" [value]=\"option.value\">{{ option.name }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">{{ 'configure-app.component.wallet-storage' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.change-where-your-wallet-is-stored-if-you-select-none-your')\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedStorage\">\n                      <option *ngFor=\"let storage of storageOptions\" [value]=\"storage.value\">{{ storage.name }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">{{ 'configure-app.receive-method' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.if-automatically-receiving-incoming-transactions-with-the')\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedPendingOption\">\n                      <option *ngFor=\"let pending of pendingOptions\" [value]=\"pending.value\">{{ pending.name }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">{{ 'configure-app.min-receive-amount' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.minimum-nano-amount-to-receive-transactions-below-this')\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\">\n                        <label class=\"uk-form-icon uk-link-reset uk-link-muted xno-symbol\" for=\"form-horizontal-amount\"></label>\n                        <input [(ngModel)]=\"minimumReceive\" class=\"uk-input\" style=\"padding-left: 52px !important;\" id=\"form-horizontal-text4\" type=\"text\" [placeholder]=\"t('configure-app.leave-blank-to-accept-transactions-of-any-amount')\">\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">{{ 'configure-app.default-representative' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.this-representative-will-be-used-for-any-new-account')\"></span></label>\n\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('rep1','account')\" uk-tooltip [title]=\"t('general.scan-qr-code')\"></a>\n                    <input (blur)=\"validateRepresentative()\" (input)=\"searchRepresentatives()\" (focus)=\"searchRepresentatives()\" [(ngModel)]=\"defaultRepresentative\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': repStatus === 2, 'uk-form-danger': repStatus === 0 }\" id=\"form-horizontal-text3\" type=\"text\" [placeholder]=\"t('configure-app.leave-blank-to-use-a-recommended-one')\" #repInput>\n                    \n                    <div *ngIf=\"(representativeResults$ | async).length\" [hidden]=\"!showRepresentatives\" class=\"nlt-dropdown uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                      <ul class=\"uk-nav uk-nav-default\">\n                        <li class=\"uk-nav-header\">{{ 'representative-search.representative-list-results' | transloco }}</li>\n                        <li class=\"uk-nav-divider\"></li>\n                        <li *ngFor=\"let rep of representativeResults$ | async\">\n                          <a (click)=\"selectRepresentative(rep.id)\">\n                            {{ rep.name }}\n                            <span *ngIf=\"rep.trusted\" class=\"uk-text-success\" style=\"margin-left: 4px;\"><span uk-icon=\"icon: star;\"></span></span>\n                            <span *ngIf=\"rep.warn\" class=\"uk-text-warning\" style=\"margin-left: 4px;\"><span uk-icon=\"icon: warning;\"></span> {{ 'general.avoid' | transloco }}</span>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"uk-form-controls\" *ngIf=\"representativeListMatch\">\n                  <div class=\"uk-inline uk-width-1-1 uk-margin-small-top\">\n                    <span class=\"account-label rep\">{{ representativeListMatch }}</span>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n        <button (click)=\"updateWalletSettings()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">{{ 'configure-app.update-wallet-settings' | transloco }}</button>\n      </div>\n    </div>\n\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header\" id=\"server-settings\">\n        <h3 class=\"uk-card-title\">{{ 'configure-app.server-settings' | transloco }}</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">{{ 'configure-app.server-configuration' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.change-which-server-is-used-to-communicate-with-the-nano')\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"selectedServer\" (change)=\"serverConfigChange(selectedServer)\" id=\"form-horizontal-select\">\n                    <option *ngFor=\"let server of serverOptions\" [value]=\"server.value\">{{ server.name }}</option>\n                  </select>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\" *ngIf=\"showServerValues()\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"\">\n                <label class=\"uk-form-label uk-text-right\">{{ 'configure-app.api-server' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.this-server-is-used-for-rpc-communication-with-the-nano-node')\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"!showServerConfigs()\">\n                    <strong>{{ serverAPI }}</strong>\n                  </div>\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"showServerConfigs()\">\n                    <input [(ngModel)]=\"serverAPI\" class=\"uk-input uk-margin-small-bottom\" type=\"text\" placeholder=\"https://domain.com/path\">\n                    <span class=\"uk-text-meta\">\n                      {{ 'configure-app.this-has-to-be-a-valid-rpc.1' | transloco }} <a href=\"https://docs.nano.org/commands/rpc-protocol/\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'configure-app.this-has-to-be-a-valid-rpc.2-link-rpc' | transloco }}</a> {{ 'configure-app.this-has-to-be-a-valid-rpc.3' | transloco }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\" *ngIf=\"showServerValues() && serverWS\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"\">\n                <label class=\"uk-form-label uk-text-right\">{{ 'configure-app.websocket-server' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.this-server-is-used-to-notify-the-wallet-in-real-time-when')\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"!showServerConfigs()\">\n                    <strong>{{ serverWS }}</strong>\n                  </div>\n\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"showServerConfigs()\">\n                    <input [(ngModel)]=\"serverWS\" class=\"uk-input uk-margin-small-bottom\" id=\"form-horizontal-text2\" type=\"text\" placeholder=\"wss://domain.com/path\">\n                    <span class=\"uk-text-meta\">\n                      {{ 'configure-app.this-has-to-be-a-valid-websocket.1' | transloco }} <a href=\"https://docs.nano.org/integration-guides/websockets/#configuration\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'configure-app.this-has-to-be-a-valid-websocket.2-link-websocket' | transloco }}</a> {{ 'configure-app.this-has-to-be-a-valid-websocket.3' | transloco }}<br>\n                      <i>{{ 'configure-app.note-since-this-server-only-notifies-about-new-transactions' | transloco }}</i>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\" *ngIf=\"showServerValues()\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"\">\n                <label class=\"uk-form-label uk-text-right\">{{ 'configure-app.authorization' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.use-if-the-api-requires-authentication')\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input [(ngModel)]=\"serverAuth\" class=\"uk-input uk-margin-small-bottom\" type=\"text\" placeholder=\"Optional\">\n                    <span class=\"uk-text-meta\">\n                      {{ 'configure-app.this-has-to-be-a-valid-authorization-header' | transloco }} <a href=\"https://rpc.nano.to/?key\" target=\"_blank\">Get Nano.to RPC Key</a>\n                    </span>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\" *ngIf=\"showStatValues() || showServerConfigs()\">\n            <div class=\"uk-form-horizontal\">\n              <div>\n                <label class=\"uk-form-label uk-text-right\">{{ 'configure-app.node-stats' | transloco }} <span class=\"{{statsRefreshEnabled ? '':'node-stats-disabled'}}\" id=\"node-stats\" uk-icon=\"icon: refresh;\" (click)=\"updateNodeStats(true)\" uk-tooltip [title]=\"t('configure-app.click-to-refresh')\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <span class=\"uk-text-meta\">\n                      <table id=\"node-stats-table\">\n                        <tr>\n                          <td>\n                            <strong>{{ 'general.server' | transloco }}</strong>\n                          </td>\n                          <td>\n                            {{serverAPIUpdated ? serverAPI: ('configure-app.save-settings-to-update' | transloco)}}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <strong>{{ 'general.block-count' | transloco }}</strong>\n                          </td>\n                          <td>\n                            {{nodeBlockCount || 'N/A'}}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <strong>{{ 'general.uncemented-blocks' | transloco }}</strong>\n                          </td>\n                          <td>\n                            {{nodeUncemented || 'N/A'}}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <strong>{{ 'general.peers-stake-required' | transloco }}</strong>\n                          </td>\n                          <td>\n                            {{peersStakeReq || 'N/A'}}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <strong>{{ 'general.peers-stake-total' | transloco }}</strong>\n                          </td>\n                          <td>\n                            {{peersStakeTotal || 'N/A'}}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <strong>{{ 'general.node-version' | transloco }}</strong>\n                          </td>\n                          <td>\n                            {{nodeVendor || 'N/A'}}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <strong>{{ 'general.network' | transloco }}</strong>\n                          </td>\n                          <td>\n                            {{nodeNetwork ? nodeNetwork.toUpperCase() : 'N/A'}}\n                          </td>\n                        </tr>\n                        <tr *ngIf=\"false && showServerValues() && !showServerConfigs()\">\n                          <td>\n                            <strong>{{ 'configure-app.random-server' | transloco }}</strong>\n                          </td>\n                          <td>\n                            {{shouldRandom || ('general.no' | transloco)}}\n                          </td>\n                        </tr>\n                      </table>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">{{ 'configure-app.pow-source' | transloco }}</label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedPoWOption\">\n                      <option *ngFor=\"let pow of powOptions\" [value]=\"pow.value\">\n                        <ng-element *ngIf=\"pow.value === 'server'\">{{ getRemotePoWOptionName() }}</ng-element>\n                        <ng-element *ngIf=\"pow.value !== 'server'\">{{ pow.name }}</ng-element>\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div class=\"uk-margin\" *ngIf=\"selectedPoWOption === 'custom'\">\n                <label class=\"uk-form-label\">{{ 'configure-app.work-server' | transloco }}</label>\n                  <div class=\"uk-form-controls\">\n                      <input [(ngModel)]=\"customWorkServer\" class=\"uk-input uk-margin-small-bottom\" type=\"text\" placeholder=\"https://rpc.nano.to\">\n                      <span class=\"uk-text-meta\">\n                        {{ 'configure-app.this-has-to-be-a-valid-work.1' | transloco }} <a href=\"https://docs.nault.cc/2021/02/13/custom-work-server.html\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'configure-app.this-has-to-be-a-valid-work.2-link-work' | transloco }}</a> {{ 'configure-app.this-has-to-be-a-valid-work.3' | transloco }}\n                      </span>\n                  </div>\n              </div>\n              <div class=\"uk-margin\" *ngIf=\"selectedPoWOption === 'clientWebGL' || selectedPoWOption === 'clientCPU' || selectedPoWOption === 'custom'\">\n                <label class=\"uk-form-label\">{{ 'configure-app.pow-multiplier' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip [title]=\"t('configure-app.optional-increased-work-for-transaction-priority-during')\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedMultiplierOption\">\n                      <option *ngFor=\"let multiplier of multiplierOptions\" [value]=\"multiplier.value\">{{ multiplier.name }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right@s uk-text-center\">\n        <button (click)=\"updateServerAndWalletSettings()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">{{ 'configure-app.update-server-settings' | transloco }}</button>\n      </div>\n    </div>\n\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">{{ 'configure-app.advanced-options' | transloco }}</h3>\n      </div>\n      <div class=\"uk-card-body uk-text-center\">\n        <div uk-grid>\n\n          <div class=\"uk-width-1-3@m\">\n            <button class=\"uk-button uk-button-danger\" (click)=\"clearWorkCache()\" uk-tooltip [title]=\"t('configure-app.this-will-delete-all-locally-cached-proof-of-work-values')\">{{ 'configure-app.clear-work-cache' | transloco }}</button>\n          </div>\n          <div class=\"uk-width-1-3@m\">\n            <button class=\"uk-button uk-button-danger\" (click)=\"clearWalletData()\" uk-tooltip [title]=\"t('configure-app.this-will-delete-all-data-related-to-your-wallet-your-seed-a')\">{{ 'configure-app.delete-wallet-data' | transloco }}</button>\n          </div>\n          <div class=\"uk-width-1-3@m\">\n            <button class=\"uk-button uk-button-danger\" (click)=\"clearAllData()\" uk-tooltip [title]=\"t('configure-app.this-will-delete-all-stored-data-and-reset-app-settings-incl')\">{{ 'configure-app.delete-all-data' | transloco }}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {WalletService, NotificationService, RepresentativeService} from '../../services';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport * as bip39 from 'bip39';\nimport {LedgerService, LedgerStatus} from '../../services/ledger.service';\nimport { QrModalService } from '../../services/qr-modal.service';\nimport {UtilService} from '../../services/util.service';\nimport { wallet } from 'nanocurrency-web';\nimport { TranslocoService } from '@ngneat/transloco';\n\nenum panels {\n  'landing',\n  'mnemonicTypeSelection',\n  'import',\n  'password',\n  'backup',\n  'final',\n}\n\nconst INDEX_MAX = 4294967295; // seed index\n\n@Component({\n  selector: 'app-configure-wallet',\n  templateUrl: './configure-wallet.component.html',\n  styleUrls: ['./configure-wallet.component.css']\n})\nexport class ConfigureWalletComponent implements OnInit {\n  panels = panels;\n  activePanel = panels.landing;\n  wallet = this.walletService.wallet;\n  isConfigured = this.walletService.isConfigured;\n  isNewWallet = true;\n  hasConfirmedBackup = false;\n  importSeed = '';\n  isExpanded = false;\n  keyString = '';\n\n  exampleSeed = '';\n  examplePrivateKey = '';\n  exampleExpandedPrivateKey = '';\n  exampleMnemonicWords = [];\n  showMoreImportOptions = false;\n\n  newWalletSeed = '';\n  newWalletMnemonic = '';\n  newWalletMnemonicLines = [];\n  newPassword = '';\n  importSeedModel = '';\n  importPrivateKeyModel = '';\n  importExpandedKeyModel = '';\n  importSeedMnemonicModel = '';\n  importSeedBip39MnemonicModel = '';\n  importSeedBip39MnemonicIndexModel = '0';\n  importSeedBip39MnemonicPasswordModel = '';\n  walletPasswordModel = '';\n  walletPasswordConfirmModel = '';\n  validIndex = true;\n  indexMax = INDEX_MAX;\n\n  selectedImportOption = 'seed';\n\n  ledgerStatus = LedgerStatus;\n  ledger = this.ledgerService.ledger;\n\n  constructor(\n    private router: ActivatedRoute,\n    public walletService: WalletService,\n    private notifications: NotificationService,\n    private route: Router,\n    private qrModalService: QrModalService,\n    private ledgerService: LedgerService,\n    private util: UtilService,\n    private translocoService: TranslocoService) {\n    if (this.route.getCurrentNavigation().extras.state && this.route.getCurrentNavigation().extras.state.seed) {\n      this.activePanel = panels.import;\n      this.importSeedModel = this.route.getCurrentNavigation().extras.state.seed;\n      this.isNewWallet = false;\n    } else if (this.route.getCurrentNavigation().extras.state && this.route.getCurrentNavigation().extras.state.key) {\n      this.activePanel = panels.import;\n      this.importPrivateKeyModel = this.route.getCurrentNavigation().extras.state.key;\n      this.selectedImportOption = 'privateKey';\n      this.isNewWallet = false;\n    }\n  }\n\n  async ngOnInit() {\n    const exampleSeedBytes = this.util.account.generateSeedBytes();\n    const exampleSeedFull = this.util.hex.fromUint8(exampleSeedBytes);\n\n    let exampleSeedTrimmed = '';\n    let trimIdx = 0;\n    do {\n      exampleSeedTrimmed = exampleSeedFull.slice(trimIdx, trimIdx + 6);\n      trimIdx += 2;\n    } while (\n        (trimIdx < 30)\n      && ( exampleSeedTrimmed.match(/^([0-9]+|[A-F]+)$/g) !== null )\n    );\n\n    // must have both letters and numbers\n    this.exampleSeed = exampleSeedTrimmed + '...';\n\n    // may have only letters or only numbers with enough luck\n    this.examplePrivateKey = exampleSeedFull.slice(trimIdx + 6, trimIdx + 12) + '...';\n    this.exampleExpandedPrivateKey = exampleSeedFull.slice(trimIdx + 12, trimIdx + 18) + '...';\n\n    // array of mnemonic words\n    this.exampleMnemonicWords = bip39.entropyToMnemonic(exampleSeedFull).split(' ');\n  }\n\n  async importExistingWallet() {\n    this.notifications.sendInfo(`Starting to scan the first 20 accounts and importing them if they have been used...`, {length: 7000});\n    this.route.navigate(['accounts']); // load accounts and watch them update in real-time\n    await this.walletService.createWalletFromSeed(this.importSeed);\n    this.importSeed = '';\n    this.storePassword();\n\n    this.notifications.sendSuccess(`Successfully imported wallet!`, {length: 10000});\n\n    // this.repService.detectChangeableReps(); // this is now called from change-rep-widget.component when new wallet\n    this.walletService.informNewWallet();\n  }\n\n  async importSingleKeyWallet() {\n    this.walletService.createWalletFromSingleKey(this.keyString, this.isExpanded);\n    this.storePassword();\n    this.route.navigate(['accounts']); // load accounts and watch them update in real-time\n    this.keyString = '';\n\n    this.notifications.sendSuccess(`Successfully imported wallet from a private key!`);\n    this.walletService.informNewWallet();\n  }\n\n  async connectLedgerByBluetooth() {\n    this.ledgerService.enableBluetoothMode(true);\n    await this.importLedgerWallet();\n  }\n\n  async connectLedgerByUsb() {\n    this.ledgerService.enableBluetoothMode(false);\n    await this.importLedgerWallet();\n  }\n\n  async importLedgerWallet(refreshOnly = false) {\n     // If a wallet exists already, make sure they know they are overwriting it\n     if (!refreshOnly && this.isConfigured()) {\n      const confirmed = await this.confirmWalletOverwrite();\n      if (!confirmed) {\n        return;\n      }\n      this.walletService.resetWallet();\n    }\n\n    // Determine status of ledger device using ledger service\n    this.notifications.sendInfo(`Checking for Ledger device...`, { identifier: 'ledger-status', length: 0 });\n    await this.ledgerService.loadLedger(true);\n    this.notifications.removeNotification('ledger-status');\n    this.notifications.removeNotification('ledger-error');\n\n    if (this.ledger.status === LedgerStatus.NOT_CONNECTED) {\n      this.ledgerService.resetLedger();\n      return this.notifications.sendWarning(`Failed to connect the Ledger device. Make sure the nano app is running on the Ledger. If the error persists: Check the <a href=\"https://docs.nault.cc/2020/08/04/ledger-guide.html#troubleshooting\" target=\"_blank\" rel=\"noopener noreferrer\">troubleshooting guide</a>`, { identifier: 'ledger-error', length: 0 });\n    }\n\n    if (this.ledger.status === LedgerStatus.LOCKED) {\n      return this.notifications.sendWarning(`Unlock your Ledger device and open the nano app to continue`);\n    }\n\n    if (this.ledger.status === LedgerStatus.READY) {\n      this.notifications.sendSuccess(`Successfully connected to Ledger device`);\n    }\n\n    if (refreshOnly) {\n      return;\n    }\n\n    // We skip the password panel\n    this.route.navigate(['accounts']); // load accounts and watch them update in real-time\n\n    // Create new ledger wallet\n    const newWallet = await this.walletService.createLedgerWallet();\n    this.notifications.sendSuccess(`Successfully loaded ledger device!`);\n\n    this.walletService.informNewWallet();\n  }\n\n  // Send a confirmation dialog to the user if they already have a wallet configured\n  async confirmWalletOverwrite() {\n    if (!this.isConfigured()) return true;\n\n    const UIkit = window['UIkit'];\n    let msg;\n    try {\n      if (this.walletService.isLedgerWallet()) {\n        msg = '<p class=\"uk-alert uk-alert-danger\"><br><span class=\"uk-flex\"><span uk-icon=\"icon: warning; ratio: 3;\" class=\"uk-align-center\"></span></span><span style=\"font-size: 18px;\">You are about to configure a new wallet, which will <b>disconnect your Ledger device from Nault</b>.</span><br><br>If you need to use the Ledger wallet, simply import your device again.<br><br><b style=\"font-size: 18px;\">Make sure you have saved the recovery phrase you got when initially setting up your Ledger device</b>.<br><br><span style=\"font-size: 18px;\"><b>YOU WILL NOT BE ABLE TO RECOVER THE FUNDS</b><br>if you lose both the recovery phrase and access to your Ledger device.</span></p><br>';\n      } else {\n        msg = '<p class=\"uk-alert uk-alert-danger\" style=\" background-color: #e74c3c !important\"><br><span class=\"uk-flex\"><span uk-icon=\"icon: warning; ratio: 3;\" class=\"uk-align-center\"></span></span><span style=\"font-size: 18px;\"><b>Creating new wallet will destroy existing wallet.</b></p>';\n      }\n      await UIkit.modal.confirm(msg);\n      return true;\n    } catch (err) {\n      if (!this.walletService.isLedgerWallet()) {\n        this.notifications.sendInfo(`Visit 'Backup Wallet' create backup.`);\n      }\n      return false;\n    }\n  }\n\n  async setPasswordInit() {\n    // if importing from existing, the format check must be done prior the password page\n    if (!this.isNewWallet) {\n      if (this.selectedImportOption === 'mnemonic' || this.selectedImportOption === 'seed') {\n        if (this.selectedImportOption === 'seed') {\n          const existingSeed = this.importSeedModel.trim();\n          if (existingSeed.length !== 64 || !this.util.nano.isValidSeed(existingSeed)) return this.notifications.sendError(`Seed is invalid, double check it!`);\n          this.importSeed = existingSeed;\n        } else if (this.selectedImportOption === 'mnemonic') {\n          // Clean the value by trimming it and removing newlines\n          const mnemonic = this.importSeedMnemonicModel.toLowerCase().trim().replace(/\\n/g, ``);\n\n          const words = mnemonic.split(' ');\n          if (words.length < 20) return this.notifications.sendError(`Mnemonic is too short, double check it!`);\n\n          // Try and decode the mnemonic\n          try {\n            const newSeed = bip39.mnemonicToEntropy(mnemonic);\n            if (!newSeed || newSeed.length !== 64 || !this.util.nano.isValidSeed(newSeed)) return this.notifications.sendError(`Mnemonic is invalid, double check it!`);\n            this.importSeed = newSeed.toUpperCase(); // Force uppercase, for consistency\n          } catch (err) {\n            return this.notifications.sendError(`Unable to decode mnemonic, double check it!`);\n          }\n        } else {\n          return this.notifications.sendError(`Invalid import option`);\n        }\n      } else if (this.selectedImportOption === 'privateKey' || this.selectedImportOption === 'expandedKey') {\n        if (this.selectedImportOption === 'privateKey') {\n          this.isExpanded = false;\n        } else if (this.selectedImportOption === 'expandedKey') {\n          this.isExpanded = true;\n        } else {\n          return this.notifications.sendError(`Invalid import option`);\n        }\n\n        this.keyString = this.isExpanded ? this.importExpandedKeyModel : this.importPrivateKeyModel;\n        this.keyString = this.keyString.trim();\n        if (this.isExpanded && this.keyString.length === 128) {\n          // includes deterministic R value material which we ignore\n          this.keyString = this.keyString.substring(0, 64);\n          if (!this.util.nano.isValidSeed(this.keyString)) {\n            return this.notifications.sendError(`Private key is invalid, double check it!`);\n          }\n        } else if (this.keyString.length !== 64 || !this.util.nano.isValidSeed(this.keyString)) {\n          return this.notifications.sendError(`Private key is invalid, double check it!`);\n        }\n      } else if (this.selectedImportOption === 'bip39-mnemonic') {\n        // If bip39, import wallet as a single private key\n        if (!bip39.validateMnemonic(this.importSeedBip39MnemonicModel)) {\n          return this.notifications.sendError(`Mnemonic is invalid, double check it!`);\n        }\n        if (!this.validIndex) {\n          return this.notifications.sendError(`The account index is invalid, double check it!`);\n        }\n\n        // convert mnemonic to bip39 seed\n        const bip39Seed = this.importSeedBip39MnemonicPasswordModel !== '' ?\n        this.util.string.mnemonicToSeedSync(this.importSeedBip39MnemonicModel, this.importSeedBip39MnemonicPasswordModel).toString('hex') :\n        this.util.string.mnemonicToSeedSync(this.importSeedBip39MnemonicModel).toString('hex');\n\n        // derive private key from bip39 seed using the account index provided\n        const accounts = wallet.accounts(bip39Seed, Number(this.importSeedBip39MnemonicIndexModel),\n        Number(this.importSeedBip39MnemonicIndexModel));\n        this.keyString = accounts[0].privateKey;\n        this.isExpanded = false;\n      }\n    }\n\n    // If a wallet already exists, confirm that the seed is saved\n    const confirmed = await this.confirmWalletOverwrite();\n    if (!confirmed) return;\n    this.activePanel = panels.password;\n  }\n\n  async createNewWallet() {\n    const seedBytes = this.util.account.generateSeedBytes();\n    this.newWalletSeed = this.util.hex.fromUint8(seedBytes);\n    this.newWalletMnemonic = bip39.entropyToMnemonic(this.newWalletSeed);\n\n    // Split the seed up so we can show 4 per line\n    const words = this.newWalletMnemonic.split(' ');\n    const lines = [\n      words.slice(0, 4),\n      words.slice(4, 8),\n      words.slice(8, 12),\n      words.slice(12, 16),\n      words.slice(16, 20),\n      words.slice(20, 24),\n    ];\n    this.newWalletMnemonicLines = lines;\n\n    this.activePanel = panels.backup;\n  }\n\n  confirmNewSeed() {\n    // if (!this.hasConfirmedBackup) {\n    //   return this.notifications.sendWarning(`Please confirm you have saved a wallet backup!`);\n    // }\n    this.walletService.createNewWallet(this.newWalletSeed);\n    this.storePassword();\n    this.newWalletSeed = '';\n    this.newWalletMnemonicLines = [];\n    this.saveNewWallet();\n\n    this.route.navigate(['accounts']);\n    // this.activePanel = panels.final;\n  }\n\n  saveWalletPassword() {\n\n    if (this.walletPasswordConfirmModel !== this.walletPasswordModel) {\n      return this.notifications.sendError(`Password confirmation does not match, try again!`);\n    }\n    if (this.walletPasswordModel.length < 3) {\n      return this.notifications.sendWarning(`Password length must be at least 3`);\n    }\n    this.newPassword = this.walletPasswordModel;\n    this.walletPasswordModel = '';\n    this.walletPasswordConfirmModel = '';\n\n    if (this.isNewWallet) {\n      this.createNewWallet();\n    } else if (this.selectedImportOption === 'mnemonic' || this.selectedImportOption === 'seed') {\n      this.importExistingWallet();\n    } else if (this.selectedImportOption === 'privateKey' || this.selectedImportOption === 'expandedKey'\n    || this.selectedImportOption === 'bip39-mnemonic') {\n      this.importSingleKeyWallet();\n    }\n\n    this.confirmNewSeed()\n  }\n\n  storePassword() {\n    this.walletService.wallet.password = this.newPassword;\n    this.newPassword = '';\n  }\n\n  saveNewWallet() {\n    this.walletService.saveWalletExport();\n    this.walletService.informNewWallet();\n\n    this.notifications.sendSuccess(`New wallet created.`);\n  }\n\n  setPanel(panel) {\n    this.activePanel = panel;\n    if (panel === panels.landing) {\n      this.isNewWallet = true;\n    } else if (panel === panels.import) {\n      this.isNewWallet = false;\n    }\n  }\n\n  copiedNewWalletSeed() {\n    this.notifications.removeNotification('success-copied');\n    this.notifications.sendSuccess(\n      this.translocoService.translate('configure-wallet.new-wallet.successfully-copied-secret-recovery-seed'),\n      { identifier: 'success-copied' }\n    );\n  }\n\n  copiedNewWalletMnemonic() {\n    this.notifications.removeNotification('success-copied');\n    this.notifications.sendSuccess(\n      this.translocoService.translate('configure-wallet.new-wallet.successfully-copied-secret-recovery-mnemonic'),\n      { identifier: 'success-copied' }\n    );\n  }\n\n  importFromFile(files) {\n    if (!files.length) return;\n\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const fileData = event.target['result'] as string;\n      try {\n        const importData = JSON.parse(fileData);\n        if ((!importData.seed && !importData.privateKey && !importData.expandedKey) ||\n        (!importData.hasOwnProperty('accountsIndex') && !importData.hasOwnProperty('indexes'))) {\n          return this.notifications.sendError(`Bad import data `);\n        }\n\n        const walletEncrypted = btoa(JSON.stringify(importData));\n        this.route.navigate(['import-wallet'], { fragment: walletEncrypted });\n      } catch (err) {\n        this.notifications.sendError(`Unable to parse import data, make sure you selected the right file!`);\n      }\n    };\n\n    reader.readAsText(file);\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'seed1':\n          this.importSeedModel = data.content;\n          break;\n        case 'mnemo1':\n          this.importSeedMnemonicModel = data.content;\n          break;\n        case 'mnemo2':\n          this.importSeedBip39MnemonicModel = data.content;\n          break;\n        case 'priv1':\n          this.importPrivateKeyModel = data.content;\n          break;\n        case 'expanded1':\n          this.importExpandedKeyModel = data.content;\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n  accountIndexChange(index) {\n    let invalid = false;\n    if (this.util.string.isNumeric(index) && index % 1 === 0) {\n      index = parseInt(index, 10);\n      if (!this.util.nano.isValidIndex(index)) {\n        invalid = true;\n      }\n      if (index > INDEX_MAX) {\n        invalid = true;\n      }\n    } else {\n      invalid = true;\n    }\n    this.validIndex = !invalid;\n  }\n\n}\n","<h2 class=\"uk-heading-divider\">New Wallet</h2>\n\n<!-- \n<div *ngIf=\"isConfigured() && !walletService.isLedgerWallet() && (activePanel === panels.landing || activePanel === panels.import || activePanel === panels.mnemonicTypeSelection)\" class=\"uk-margin-small-bottom\">\n  <div class=\"uk-alert uk-alert-danger nlt-inline-alert\">\n    <div class=\"icon-column\">\n      <div uk-icon=\"icon: warning; ratio: 2;\"></div>\n    </div>\n    <p>\n      <b>You already have a local Nault wallet configured</b><br>\n      Before going any further, be 100% certain you have backed up the secret recovery phrase for your current wallet!<br>\n      Without it, <b>any funds you have will become completely unrecoverable!</b>\n    </p>\n  </div>\n</div>\n -->\n \n<div class=\"uk-card uk-card-default wallet-setup-card\" *ngIf=\"activePanel === panels.landing\">\n  <div class=\"uk-card-body\">\n    <div class=\"landing-container uk-grid-divider\" uk-grid>\n      <div class=\"uk-width-auto@l uk-width-1-1@m\">\n        <button class=\"wallet-option\" (click)=\"setPasswordInit()\">\n          <div class=\"icon\">\n            <svg width=\"120\" height=\"120\" version=\"1.1\" viewBox=\"0 0 160 160\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"m132.03 98.355v26.667c0 1.662-1.338 3-3 3h-112.4c-1.662 0-3-1.338-3-3v-78.19c0-1.662 1.338-3 3-3h112.4c1.662 0 3 1.338 3 3v26.132\" fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-width=\"2\"/>\n              <g>\n                <rect x=\"104.67\" y=\"73.192\" width=\"34.824\" height=\"25.469\" rx=\".88236\" ry=\".90757\" fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-width=\"2\"/>\n              </g>\n              <g>\n                <path d=\"m30.302 43.95 74.72-30.197c1.3768-0.55642 2.9319 0.12482 3.4851 1.5235l5.4462 13.77\" fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-width=\"2\"/>\n              </g>\n              <g>\n                <path d=\"m31.086 43.794 87.915-15.48c1.4625-0.25752 2.8426 0.72898 3.0942 2.2119l2.0896 12.312\" fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-width=\"2\"/>\n              </g>\n              <g fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-width=\"2\">\n                <rect transform=\"rotate(90)\" x=\"136.31\" y=\"-149.14\" width=\".53454\" height=\"18.174\" rx=\"3\" ry=\"3\" stop-color=\"#000000\" style=\"font-variation-settings:normal\"/>\n                <rect x=\"139.78\" y=\"127.49\" width=\".53454\" height=\"18.174\" rx=\"3\" ry=\"3\" stop-color=\"#000000\" style=\"font-variation-settings:normal\"/>\n              </g>\n            </svg>\n          </div>\n          <h2>New<br>Wallet</h2>\n          <p>Generate seed<br>and mnemonic</p>\n        </button>\n      </div>\n      <div class=\"uk-width-expand\">\n        <button class=\"wallet-option\" (click)=\"setPanel(panels.import); selectedImportOption = 'file';\">\n          <div class=\"icon\">\n            <svg width=\"120\" height=\"120\" version=\"1.1\" viewBox=\"0 0 160 160\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"m111.24 21.503c6.0699 1.9309 10.664 6.5178 13.516 14.24m-88.044-14.24h74.527l0.32099 14.165 13.195 0.07558v99.871c0 1.5009-1.2083 2.7092-2.7092 2.7092h-85.334c-1.5009 0-2.7092-1.2083-2.7092-2.7092v-111.4c0-1.5009 1.2083-2.7092 2.7092-2.7092z\" fill=\"none\" stroke=\"#000\" stroke-width=\"2\"/>\n            </svg>\n          </div>\n          <h2>Nault<br>Import</h2>\n          <p>Nault.Pro <span style=\"opacity: 0.7\">or</span> Nault.cc</p>\n        </button>\n    <!--     <button class=\"wallet-option more-options\" (click)=\"showMoreImportOptions = true;\" *ngIf=\"!showMoreImportOptions\">\n          <div class=\"icon\">\n            <div class=\"more-options\">···</div>\n          </div>\n          <h2>More<br>Options</h2>\n          <p>Import from file<br>or a private key</p>\n        </button> -->\n        <button class=\"wallet-option\" (click)=\"setPanel(panels.import); selectedImportOption = 'ledger';\" *ngIf=\"showMoreImportOptions\">\n          <div class=\"icon\">\n            <svg width=\"120\" height=\"120\" version=\"1.1\" viewBox=\"0 0 160 160\" xmlns=\"http://www.w3.org/2000/svg\">\n              <g>\n                <path d=\"m42.088 127.05-9.6353 7.2071c-1.3309 0.99548-3.2037 0.72546-4.1992-0.60542l-20.857-27.884c-0.99548-1.3309-0.72546-3.2037 0.60543-4.1992l105.07-78.588c1.3309-0.99548 3.2037-0.72546 4.1992 0.60543l20.857 27.884c0.99548 1.3309 0.72546 3.2037-0.60543 4.1992l-41.858 31.309\" fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-width=\"2\"/>\n              </g>\n              <g fill=\"none\" stroke=\"#000\" stroke-width=\"2\">\n                <circle cx=\"35.53\" cy=\"106.97\" r=\"10.756\"/>\n                <path d=\"m153.08 86.935h-118.68s-19.277-0.014-19.277 20.789c0 19.291 19.655 19.655 19.655 19.655h118.31z\"/>\n              </g>\n            </svg>\n          </div>\n          <h2>Use<br>Ledger</h2>\n          <p>Nano S / Nano X</p>\n        </button>\n        <button *ngIf=\"showMoreImportOptions\" class=\"wallet-option\" (click)=\"setPanel(panels.import); selectedImportOption = 'seed';\">\n          <div class=\"icon\">\n            <div class=\"seed\">{{ exampleSeed }}</div>\n          </div>\n          <h2>Import<br>Seed</h2>\n          <p>64 hex<br>characters</p>\n        </button>\n        <button *ngIf=\"showMoreImportOptions\" class=\"wallet-option\" (click)=\"setPanel(panels.mnemonicTypeSelection);\">\n          <div class=\"icon\">\n            <div class=\"mnemonic\">\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">1.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[0] }}</div>\n              </div>\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">2.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[1] }}</div>\n              </div>\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">3.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[2] }}</div>\n              </div>\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">4.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[3] }}</div>\n              </div>\n            </div>\n          </div>\n          <h2>Import<br>Mnemonic</h2>\n          <p>12, 15, 18, 21<br>or 24 words</p>\n        </button>\n        <button class=\"wallet-option\" (click)=\"setPanel(panels.import); selectedImportOption = 'privateKey';\" *ngIf=\"showMoreImportOptions\">\n          <div class=\"icon\">\n            <div class=\"seed\">{{ examplePrivateKey }}</div>\n          </div>\n          <h2>Import<br>Private Key</h2>\n          <p>64 hex<br>characters</p>\n        </button>\n        <button class=\"wallet-option\" (click)=\"setPanel(panels.import); selectedImportOption = 'expandedKey';\" *ngIf=\"showMoreImportOptions\">\n          <div class=\"icon\">\n            <div class=\"seed\">{{ exampleExpandedPrivateKey }}</div>\n          </div>\n          <h2 class=\"long-header\">Import<br>Expanded<br>Private Key</h2>\n          <p>64 or 128 hex<br>characters</p>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"import-panel-navigation\"\n  *ngIf=\"( (activePanel === panels.import) || (activePanel === panels.mnemonicTypeSelection) )\"\n  (click)=\"\n      (\n          (activePanel === panels.import)\n        && (\n             (selectedImportOption === 'mnemonic')\n          || (selectedImportOption === 'bip39-mnemonic')\n        )\n      )\n    ? setPanel(panels.mnemonicTypeSelection)\n    : setPanel(panels.landing)\n  \">\n  <span uk-icon=\"icon: arrow-left; ratio: 1.5;\"></span>\n  <span class=\"label\">Back</span>\n</div>\n\n<div class=\"uk-card uk-card-default wallet-setup-card\" *ngIf=\"activePanel === panels.mnemonicTypeSelection\">\n  <div class=\"uk-card-body\">\n    <div class=\"landing-container uk-grid-divider\" uk-grid>\n      <div>\n        <button class=\"wallet-option\" (click)=\"setPanel(panels.import); selectedImportOption = 'mnemonic';\">\n          <div class=\"icon\">\n            <div class=\"mnemonic\">\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">1.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[0] }}</div>\n              </div>\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">2.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[1] }}</div>\n              </div>\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">3.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[2] }}</div>\n              </div>\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">4.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[3] }}</div>\n              </div>\n            </div>\n          </div>\n          <h2>Nano<br>Mnemonic</h2>\n          <p>24 words</p>\n        </button>\n      </div>\n      <div>\n        <button class=\"wallet-option\" (click)=\"setPanel(panels.import); selectedImportOption = 'bip39-mnemonic';\">\n          <div class=\"icon\">\n            <div class=\"mnemonic\">\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">1.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[0] }}</div>\n              </div>\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">2.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[1] }}</div>\n              </div>\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">3.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[2] }}</div>\n              </div>\n              <div class=\"mnemonic-row\">\n                <div class=\"number\">4.</div>\n                <div class=\"word\">{{ exampleMnemonicWords[3] }}</div>\n              </div>\n            </div>\n          </div>\n          <h2>BIP39<br>Mnemonic</h2>\n          <p>12, 15, 18, 21<br>or 24 words</p>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div\n  *ngIf=\"(activePanel === panels.import) && ( (selectedImportOption === 'mnemonic') || (selectedImportOption === 'bip39-mnemonic') )\"\n>\n  <div class=\"uk-alert uk-alert-primary nlt-inline-alert\">\n    <div class=\"icon-column\">\n      <div uk-icon=\"icon: info; ratio: 2;\"></div>\n    </div>\n    <p style=\"max-width: 580px;\">\n      <b>Note for Ledger device owners:</b><br>\n      Entering the mnemonic of your Ledger on this or any other device may expose your private keys, and should only be used as an emergency option to access the wallet.\n    </p>\n  </div>\n</div>\n\n<div\n  *ngIf=\"(activePanel === panels.import) && ( (selectedImportOption === 'seed') )\"\n>\n  <div class=\"uk-alert uk-alert-info nlt-inline-alert\">\n    <div class=\"icon-column\">\n      <div uk-icon=\"icon: info; ratio: 2;\"></div>\n    </div>\n    <p style=\"max-width: 580px;\">\n      <b>Note:</b> A secret recovery seed provides access to 4,294,967,295 accounts.<br>\n      To import a single-account private key instead, <a class=\"inline-link\" (click)=\"selectedImportOption = 'privateKey';\">click here</a>\n    </p>\n  </div>\n</div>\n\n<div\n  *ngIf=\"(activePanel === panels.import) && ( (selectedImportOption === 'privateKey') )\"\n>\n  <div class=\"uk-alert uk-alert-info nlt-inline-alert\">\n    <div class=\"icon-column\">\n      <div uk-icon=\"icon: info; ratio: 2;\"></div>\n    </div>\n    <p style=\"max-width: 580px;\">\n      <b>Note:</b> A private key provides access to exactly one account.<br>\n      To import a multi-account secret recovery seed instead, <a class=\"inline-link\" (click)=\"selectedImportOption = 'seed';\">click here</a>\n    </p>\n  </div>\n</div>\n\n<div class=\"uk-card uk-card-default\" *ngIf=\"activePanel === panels.import\">\n  <div class=\"uk-card-body\">\n    <div uk-grid *ngIf=\"selectedImportOption === 'file'\">\n      <div class=\"uk-width-1-1\">\n        <h3>Import File</h3>\n        <p>Click button below to import JSON file.</p>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'seed'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <h3>Import Secret Recovery Seed</h3>\n        <p>\n          Enter your secret recovery seed below.\n        </p>\n        <div class=\"uk-inline uk-width-1-1\">\n          <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('seed1','hash')\" uk-tooltip title=\"Scan from QR code\"></a>\n          <input type=\"text\" class=\"uk-input\" (keyup.enter)=\"setPasswordInit()\" [(ngModel)]=\"importSeedModel\" placeholder=\"64 hex character secret recovery seed\">\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'mnemonic'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <h3>Import Secret Recovery Mnemonic</h3>\n        <p>\n          Enter your secret recovery mnemonic below.<br>If it came from a Ledger device or certain multi-currency wallets, use <a (click)=\"selectedImportOption = 'bip39-mnemonic';\">BIP39 Mnemonic</a> import type instead.\n        </p>\n        <div class=\"uk-inline uk-width-1-1\">\n          <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('mnemo1','mnemonic')\" uk-tooltip title=\"Scan from QR code\"></a>\n          <textarea class=\"uk-textarea\" rows=\"3\" [(ngModel)]=\"importSeedMnemonicModel\" placeholder=\"24-words secret recovery mnemonic\"></textarea>\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'bip39-mnemonic'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <h3>Import Secret Recovery BIP39 Mnemonic</h3>\n        <p>\n          Enter your secret recovery BIP39 mnemonic below. It is typically generated by Ledger devices and certain multi-currency wallets.<br>If it was generated in Nault, use <a (click)=\"selectedImportOption = 'mnemonic';\">Nano Mnemonic</a> import type instead.\n        </p>\n        <div class=\"uk-form-horizontal\">\n          <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"form-horizontal-select\">BIP39 Mnemonic</label>\n            <div class=\"uk-form-controls\">\n              <div class=\"uk-inline uk-width-expand\">\n                <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('mnemo2','mnemonic')\" uk-tooltip title=\"Scan from QR code\"></a>\n                <textarea class=\"uk-textarea\" rows=\"2\" [(ngModel)]=\"importSeedBip39MnemonicModel\" placeholder=\"12,15,18,21 or 24-words secret recovery BIP39 mnemonic\" autocomplete=\"off\"></textarea>\n              </div>\n           </div>\n          </div>\n        </div>\n        <div class=\"uk-form-horizontal\">\n          <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"form-horizontal-select\">Account Index <span uk-icon=\"icon: info;\" uk-tooltip title=\"The wallet will be imported as a single private key for the account index you provide.\"></span></label>\n            <div class=\"uk-form-controls\">\n              <input type=\"text\" class=\"uk-input uk-margin-small-bottom {{validIndex ? '':'uk-form-danger'}}\" (keyup.enter)=\"setPasswordInit()\" [(ngModel)]=\"importSeedBip39MnemonicIndexModel\" (ngModelChange)=\"accountIndexChange(importSeedBip39MnemonicIndexModel)\" maxLength=\"10\" placeholder=\"0 to {{indexMax}}\" autocomplete=\"off\">\n            </div>\n          </div>\n        </div>\n        <div class=\"uk-form-horizontal\">\n          <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"form-horizontal-select\">BIP39 Passphrase <span uk-icon=\"icon: info;\" uk-tooltip title=\"Required only if the BIP39 seed is protected by a password or passphrase.\"></span></label>\n            <div class=\"uk-form-controls\">\n              <input type=\"password\" class=\"uk-input\" (keyup.enter)=\"setPasswordInit()\" [(ngModel)]=\"importSeedBip39MnemonicPasswordModel\" placeholder=\"Optional\" autocomplete=\"off\">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'ledger'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <h3>Use Ledger Hardware Wallet</h3>\n        <p>\n          Make sure you have the nano app installed and running on your Ledger, then click one of the buttons below to connect via either USB or Bluetooth.<br> \n          <a href=\"https://docs.nault.cc/2020/08/04/ledger-guide.html\" target=\"_blank\" rel=\"noopener noreferrer\">Ledger/Nault User Guide and Troubleshooting</a><br>\n          <br>\n        </p>\n        <div *ngIf=\"!ledgerService.supportsUSB\">\n          <div class=\"uk-alert uk-alert-warning nlt-inline-alert\">\n            <div class=\"icon-column\">\n              <div uk-icon=\"icon: warning; ratio: 2;\"></div>\n            </div>\n            <p>\n              <b>Unsupported Browser</b><br>\n              It looks like your browser does not support USB communication. Recommended browsers are: Chrome, Edge, Brave, or Opera.<br>\n              Note: iOS is currently unsupported. On Mac, use any browser other than Safari.\n            </p>\n          </div>\n        </div>\n        <div *ngIf=\"ledgerService.supportsUSB\">\n          <div *ngIf=\"ledger.status === ledgerStatus.NOT_CONNECTED\">\n            <div class=\"uk-alert uk-alert-warning nlt-inline-alert\">\n              <div class=\"icon-column\">\n                <div uk-icon=\"icon: warning; ratio: 2;\"></div>\n              </div>\n              <p>\n                <b>Ledger Device Not Connected</b><br>\n                Connect your Ledger device and make sure you have the nano app installed and running, then press the button below.<br>\n                <span *ngIf=!ledgerService.supportsBluetooth>Bluetooth is currently not supported by your browser, please use Google Chrome or <a href=\"https://github.com/Nault/Nault/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\">download the Desktop App</a></span>\n              </p>\n            </div>\n          </div>\n          <div *ngIf=\"ledger.status === ledgerStatus.LOCKED\">\n            <div class=\"uk-alert uk-alert-warning nlt-inline-alert\">\n              <div class=\"icon-column\">\n                <div uk-icon=\"icon: warning; ratio: 2;\"></div>\n              </div>\n              <p>\n                <b>Ledger Device Locked</b><br>\n                Unlock your Ledger device, then press the button below to retry\n              </p>\n            </div>\n          </div>\n          <div *ngIf=\"ledger.status === ledgerStatus.READY\">\n            <div class=\"uk-alert uk-alert-success nlt-inline-alert\">\n              <div class=\"icon-column\">\n                <div uk-icon=\"icon: check; ratio: 2;\"></div>\n              </div>\n              <p>\n                <b>Ledger Device Ready</b><br>\n                Press the import button below to use your ledger wallet\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'privateKey'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <h3>Import Private Key</h3>\n        <p>\n          Enter your nano account's private key below.\n        </p>\n        <div class=\"uk-inline uk-width-1-1\">\n          <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('priv1','hash')\" uk-tooltip title=\"Scan from QR code\"></a>\n          <input type=\"text\" class=\"uk-input\" (keyup.enter)=\"setPasswordInit()\" [(ngModel)]=\"importPrivateKeyModel\" placeholder=\"64 hex character Nano Private Key\">\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'expandedKey'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <h3>Import Expanded Private Key</h3>\n        <p>\n          Enter your nano account's expanded private key below. These are rare, and are usually generated from multi-party cryptography magic.\n        </p>\n        <div class=\"uk-inline uk-width-1-1\">\n          <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('expanded1','hash')\" uk-tooltip title=\"Scan from QR code\"></a>\n          <input type=\"text\" class=\"uk-input\" (keyup.enter)=\"setPasswordInit()\" [(ngModel)]=\"importExpandedKeyModel\" placeholder=\"64 or 128 hex character Nano Expanded Private Key\">\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"uk-card-footer uk-text-right nlt-button-group\">\n    <div *ngIf=\"selectedImportOption === 'file'\" class=\"js-upload uk-width-auto@s uk-width-1-1\" uk-form-custom style=\"display: inline-block;\">\n      <input type=\"file\" id=\"import-from-file\" (change)=\"importFromFile($event.target.files)\" multiple>\n      <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" type=\"button\" tabindex=\"-1\">Import From File</button>\n    </div>\n    <button *ngIf=\"selectedImportOption === 'mnemonic'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"setPasswordInit()\">Import From Mnemonic</button>\n    <button *ngIf=\"selectedImportOption === 'bip39-mnemonic'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" [disabled]=\"!validIndex\" (click)=\"setPasswordInit()\">Import From Mnemonic</button>\n    <button *ngIf=\"selectedImportOption === 'seed'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"setPasswordInit()\">Import From Seed</button>\n    <button *ngIf=\"selectedImportOption === 'ledger' && ledger.status === ledgerStatus.NOT_CONNECTED\" [disabled]=\"!ledgerService.supportsUSB\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"connectLedgerByUsb()\">Connect via USB</button>\n    <button *ngIf=\"selectedImportOption === 'ledger' && ledger.status === ledgerStatus.NOT_CONNECTED\" [disabled]=\"!ledgerService.supportsBluetooth\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"connectLedgerByBluetooth()\">Connect via Bluetooth</button>\n    <button *ngIf=\"selectedImportOption === 'ledger' && ledger.status !== ledgerStatus.NOT_CONNECTED\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"importLedgerWallet(true)\">Refresh Ledger Status</button>\n    <button *ngIf=\"selectedImportOption === 'privateKey'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"setPasswordInit()\">Import From Private Key</button>\n    <button *ngIf=\"selectedImportOption === 'expandedKey'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"setPasswordInit()\">Import From Expanded Private Key</button>\n  </div>\n</div>\n\n\n\n<div class=\"uk-card uk-card-default\" *ngIf=\"activePanel === panels.backup\">\n\n  <div class=\"uk-card-body\">\n    <div uk-grid>\n      <div class=\"uk-width-1-4@m\">{{ 'configure-wallet.new-wallet.secret-recovery-seed' | transloco }}</div>\n      <div class=\"uk-width-3-4@m\">\n        <div class=\"new-wallet-seed uk-margin-small-bottom\">{{ newWalletSeed }}</div>\n        <button\n          class=\"uk-button uk-button-secondary uk-text-center nlt-icon-button\"\n          type=\"button\"\n          ngxClipboard\n          [cbContent]=\"newWalletSeed\"\n          (cbOnSuccess)=\"copiedNewWalletSeed()\"\n        >\n          <span class=\"nlt-icon\" uk-icon=\"icon: copy;\"></span>\n          {{ 'configure-wallet.new-wallet.copy-secret-recovery-seed' | transloco }}\n        </button>\n      </div>\n    </div>\n\n    <hr class=\"uk-divider-icon\">\n\n    <div uk-grid>\n      <div class=\"uk-width-1-4@m\">{{ 'configure-wallet.new-wallet.secret-recovery-mnemonic' | transloco }}</div>\n      <div class=\"uk-width-3-4@m\">\n        <pre class=\"mne-box\"><span *ngFor=\"let line of newWalletMnemonicLines; let l = index\" class=\"mne-cont\"><span *ngFor=\"let word of line; let i = index\" class=\"mne-word\"><span class=\"mne-num\">{{ (l * 4) + i + 1 }}</span> {{ word }}</span></span></pre>\n        <button\n          class=\"uk-button uk-button-secondary uk-text-center nlt-icon-button\"\n          type=\"button\"\n          ngxClipboard\n          [cbContent]=\"newWalletMnemonic\"\n          (cbOnSuccess)=\"copiedNewWalletMnemonic()\"\n        >\n          <span class=\"nlt-icon\" uk-icon=\"icon: copy;\"></span>\n          {{ 'configure-wallet.new-wallet.copy-secret-recovery-mnemonic' | transloco }}\n        </button>\n      </div>\n    </div>\n    <hr/>\n    <div class=\"uk-width-1-1\">\n      <label style=\"cursor: pointer;\"><input type=\"checkbox\" class=\"uk-checkbox\" [(ngModel)]=\"hasConfirmedBackup\"> &nbsp; {{ 'configure-wallet.new-wallet.i-have-securely-stored-recovery-phrases' | transloco }}</label>\n    </div>\n  </div>\n  <div class=\"uk-card-footer uk-text-right nlt-button-group\">\n    <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" id=\"create-wallet\" [disabled]=\"!hasConfirmedBackup\" (click)=\"confirmNewSeed()\">{{ 'configure-wallet.new-wallet.create-wallet' | transloco }}</button>\n  </div>\n</div>\n\n<div class=\"uk-card uk-card-default\" *ngIf=\"activePanel === panels.password\">\n  <div class=\"uk-card-header\">\n    <h3 class=\"uk-card-title\">{{ 'configure-wallet.set-wallet-password.set-wallet-password' | transloco }}</h3>\n  </div>\n  <div class=\"uk-card-body\">\n    <p>{{ 'configure-wallet.set-wallet-password.choose-a-wallet-password-that-will-be-used-to-unlock-this-application' | transloco }}</p>\n    <br>\n    <div uk-grid>\n      <div class=\"uk-width-1-2@m\">\n        <input type=\"password\" class=\"uk-input\" [(ngModel)]=\"walletPasswordModel\" placeholder=\"New Wallet Password\">\n        <!-- <password-strength-meter *ngIf=\"walletPasswordModel.length > 0\" [password]=\"walletPasswordModel\" [enableFeedback]=\"true\" [minPasswordLength]=\"6\"></password-strength-meter> -->\n        <span class=\"password-helper\" *ngIf=\"walletPasswordModel.length > 0 && walletPasswordModel.length < 3\">{{ 'configure-wallet.set-wallet-password.errors.password-must-be-at-least-x-characters-long' | transloco: { minCharacters: 3 } }}</span>\n        <span class=\"password-helper\" *ngIf=\"walletPasswordConfirmModel.length >= 6 && walletPasswordModel !== walletPasswordConfirmModel\">{{ 'configure-wallet.set-wallet-password.errors.passwords-do-not-match' | transloco }}</span>\n      </div>\n      <div class=\"uk-width-1-2@m\">\n        <input type=\"password\" class=\"uk-input\" (keyup.enter)=\"saveWalletPassword()\" [(ngModel)]=\"walletPasswordConfirmModel\" placeholder=\"Confirm Wallet Password\">\n      </div>\n    </div>\n  </div>\n  <div class=\"uk-card-footer uk-text-right\">\n    <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" [disabled]=\"walletPasswordModel.length < 3 || (walletPasswordModel !== walletPasswordConfirmModel)\" (click)=\"saveWalletPassword()\">{{isNewWallet ? 'Next':'Import Wallet'}}</button>\n  </div>\n</div>\n\n<div class=\"uk-card uk-card-default\" *ngIf=\"activePanel === panels.final\">\n  <div class=\"uk-card-header\">\n    <h3 class=\"uk-card-title\">Wallet Created</h3>\n  </div>\n  <div class=\"uk-card-body\">\n    <p>\n      Your wallet has been created and ready to use.<br>\n    </p>\n  </div>\n  <div class=\"uk-card-footer uk-text-right\">\n    <button routerLink=\"/accounts\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">View Accounts</button>\n  </div>\n</div>\n\n<!-- <div *ngIf=\"activePanel === panels.final && !walletService.isLedgerWallet()\" class=\"uk-alert-primary\" uk-alert>\n  <p><strong>ProTip:</strong> If you lose your password, you can always restore your wallet using your seed or mnemonic you were given.</p>\n</div>\n<div *ngIf=\"activePanel === panels.final && walletService.isLedgerWallet()\" class=\"uk-alert-primary\" uk-alert>\n  <p><strong>ProTip:</strong> Press the Ledger status bar on the left side to reload your Ledger when connecting or disconnecting it.</p>\n</div> -->\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {UtilService} from '../../services/util.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport * as nanocurrency from 'nanocurrency';\nimport {PriceService} from '../../services/price.service';\nimport { BigNumber } from 'bignumber.js';\nimport {NotificationService} from '../../services/notification.service';\n\n@Component({\n  selector: 'app-converter',\n  templateUrl: './converter.component.html',\n  styleUrls: ['./converter.component.less']\n})\nexport class ConverterComponent implements OnInit, OnDestroy {\n  Mnano = '1';\n  raw = '';\n  invalidMnano = false;\n  invalidRaw = false;\n  invalidFiat = false;\n  fiatPrice = '0';\n  priceSub = null;\n\n  constructor(\n    private util: UtilService,\n    public settings: AppSettingsService,\n    private price: PriceService,\n    public notifications: NotificationService,\n  ) { }\n\n  ngOnInit(): void {\n    BigNumber.config({ DECIMAL_PLACES: 30 });\n    this.Mnano = '1';\n\n    this.priceSub = this.price.lastPrice$.subscribe(event => {\n      this.fiatPrice = (new BigNumber(this.Mnano)).times(this.price.price.lastPrice).toString();\n    });\n\n    this.unitChange('mnano');\n  }\n\n  ngOnDestroy() {\n    if (this.priceSub) {\n      this.priceSub.unsubscribe();\n    }\n  }\n\n  unitChange(unit) {\n    switch (unit) {\n      case 'mnano':\n        if (this.util.account.isValidNanoAmount(this.Mnano)) {\n          this.raw = nanocurrency.convert(this.Mnano, {from: nanocurrency.Unit.NANO, to: nanocurrency.Unit.raw});\n          this.fiatPrice = (new BigNumber(this.Mnano)).times(this.price.price.lastPrice).toString(10);\n          this.invalidMnano = false;\n          this.invalidRaw = false;\n          this.invalidFiat = false;\n        } else {\n          this.raw = '';\n          this.fiatPrice = '';\n          this.invalidMnano = true;\n        }\n        break;\n      case 'raw':\n        if (this.util.account.isValidAmount(this.raw)) {\n          this.Mnano = nanocurrency.convert(this.raw, {from: nanocurrency.Unit.raw, to: nanocurrency.Unit.NANO});\n          this.fiatPrice = (new BigNumber(this.Mnano)).times(this.price.price.lastPrice).toString(10);\n          this.invalidRaw = false;\n          this.invalidMnano = false;\n          this.invalidFiat = false;\n        } else {\n          this.Mnano = '';\n          this.fiatPrice = '';\n          this.invalidRaw = true;\n        }\n        break;\n      case 'fiat':\n        if (this.util.string.isNumeric(this.fiatPrice)) {\n          this.Mnano = (new BigNumber(this.fiatPrice)).dividedBy(this.price.price.lastPrice).toString(10);\n          this.raw = nanocurrency.convert(this.Mnano, {from: nanocurrency.Unit.NANO, to: nanocurrency.Unit.raw});\n          this.invalidRaw = false;\n          this.invalidMnano = false;\n          this.invalidFiat = false;\n        } else {\n          this.Mnano = '';\n          this.raw = '';\n          this.invalidFiat = true;\n        }\n        break;\n    }\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">Unit Converter</h2>\n\n    <div class=\"uk-card uk-card-default\">\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"mnano\">XNO <span uk-icon=\"icon: info;\" uk-tooltip title=\"The main unit used in nano wallets and exchanges.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\">\n                        <a class=\"uk-form-icon uk-form-icon-flip\" ngxClipboard [cbContent]=\"Mnano\" (cbOnSuccess)=\"notifications.sendSuccess('Value Copied!')\" uk-icon=\"icon: copy\" title=\"Copy Value\" uk-tooltip></a>\n                        <input [(ngModel)]=\"Mnano\" class=\"uk-input uk-margin-small-bottom\" [ngClass]=\"{ 'uk-form-danger': invalidMnano }\" id=\"mnano\" type=\"text\" (ngModelChange)=\"unitChange('mnano')\" placeholder=\"\" autocomplete=\"off\">\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"raw\">raw <span uk-icon=\"icon: info;\" uk-tooltip title=\"The smallest possible unit of XNO.\"></span></label>\n                <div class=\"uk-form-controls\">\n                <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                    <div class=\"uk-inline uk-width-1-1\">\n                      <a class=\"uk-form-icon uk-form-icon-flip\" ngxClipboard [cbContent]=\"raw\" (cbOnSuccess)=\"notifications.sendSuccess('Value Copied!')\" uk-icon=\"icon: copy\" title=\"Copy Value\" uk-tooltip></a>\n                      <input [(ngModel)]=\"raw\" class=\"uk-input uk-margin-small-bottom\" [ngClass]=\"{ 'uk-form-danger': invalidRaw }\" id=\"raw\" type=\"text\" (ngModelChange)=\"unitChange('raw')\" placeholder=\"\" autocomplete=\"off\">\n                    </div>\n                    </div>\n                </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"fiat\">{{settings.settings.displayCurrency}} <span uk-icon=\"icon: info;\" uk-tooltip title=\"Latest fiat price. The currency can be changed from the app settings.\"></span></label>\n                <div class=\"uk-form-controls\">\n                <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                    <div class=\"uk-inline uk-width-1-1\">\n                      <a class=\"uk-form-icon uk-form-icon-flip\" ngxClipboard [cbContent]=\"fiatPrice\" (cbOnSuccess)=\"notifications.sendSuccess('Value Copied!')\" uk-icon=\"icon: copy\" title=\"Copy Value\" uk-tooltip></a>\n                      <input [(ngModel)]=\"fiatPrice\" class=\"uk-input uk-margin-small-bottom\" [ngClass]=\"{ 'uk-form-danger': invalidFiat }\" id=\"fiat\" type=\"text\" (ngModelChange)=\"unitChange('fiat')\" placeholder=\"\" autocomplete=\"off\">\n                    </div>\n                    </div>\n                </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  \n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport BigNumber from 'bignumber.js';\nimport {UtilService} from '../../services/util.service';\nimport {NanoBlockService} from '../../services/nano-block.service';\n// import {Subject, timer} from 'rxjs';\n// import {debounce} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {\n  AppSettingsService,\n  // LedgerService,\n  // LedgerStatus,\n  // ModalService,\n  // NotificationService,\n  // RepresentativeService,\n  // WalletService\n} from '../../services';\n// import { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-donate',\n  templateUrl: './donate.component.html',\n  styleUrls: ['./donate.component.css']\n})\n\nexport class DonateComponent implements OnInit {\n\n  // accounts = this.walletService.wallet.accounts;\n  // isLedgerWallet = this.walletService.isLedgerWallet();\n  // isSingleKeyWallet = this.walletService.isSingleKeyWallet();\n  // viewAdvanced = false;\n  hidePopup = true;\n  string = '';\n\n  // // When we change the accounts, redetect changable reps (Debounce by 5 seconds)\n  // accountsChanged$ = new Subject();\n  // reloadRepWarning$ = this.accountsChanged$.pipe(debounce(() => timer(5000)));\n\n  constructor(\n    private http: HttpClient,\n    // private walletService: WalletService,\n    // private notificationService: NotificationService,\n    // public modal: ModalService,\n    // public settings: AppSettingsService,\n    private nanoBlock: NanoBlockService,\n    // private representatives: RepresentativeService,\n    private router: Router,\n    private util: UtilService,\n    // private ledger: LedgerService,\n    // private translocoService: TranslocoService\n    ) { }\n\n  async ngOnInit() {\n\n    var on = false\n\n    // this.showPopup = false\n\n    window.addEventListener(\n      \"message\",\n      (event) => {\n        if (event.data && typeof event.data === 'string' && event.data.includes('nano:')) {\n          \n          this.string = event.data\n\n          const params = new URLSearchParams(this.string.split('?')[1]);\n\n          this.router.navigate(['send'], { queryParams: { \n            to: event.data.replace('nano:', '').split('?')[0],\n            amount: params.getAll('amount') || \"0\",\n            callback: params.getAll('callback'),\n          } });\n\n        }\n      },\n      false\n    );\n\n  }\n\n  close() {\n    this.hidePopup = true\n    // document.getElementById(\"approveDeepLink\").style.display = \"none\" ;\n  }\n\n  approve() {\n\n//     console.log( \n// this.string\n//      )\n\n    // this.router.navigate(['send'], { queryParams: { \n    //   to: this.string.replace('nano:', '').split('?')[0],\n    //   amount: this.string.replace('nano:', '').split('?')[1].replace('amount=', ''),\n    // } });\n    \n    // const newHash = await this.nanoBlock.generateSend(walletAccount, destinationID, this.rawAmount, this.walletService.isLedgerWallet());\n\n  }\n\n\n}\n","<div>\n\t<!-- <iframe src=\"http://localhost:8080\" name=\"nault\" style=\" width: 100%; height: 95vh; \" frameborder=\"0\"></iframe> -->\n\t<iframe src=\"https://nano.to?big=true\" name=\"nault\" style=\" width: 100%; height: 95vh; \" frameborder=\"0\"></iframe>\n</div>","import {Component, Input, OnChanges, HostBinding} from '@angular/core';\n\n@Component({\n  selector: 'app-nano-account-id',\n  templateUrl: './nano-account-id.component.html',\n  styleUrls: ['./nano-account-id.component.css'],\n})\nexport class NanoAccountIdComponent implements OnChanges {\n\n  @HostBinding('class') classes: string;\n  @Input() accountID: string;\n  @Input() known: [];\n  @Input() middle: 'on'|'off'|'auto'|'break' = 'auto';\n\n  name = '';\n  firstCharacters = '';\n  middleCharacters = '';\n  lastCharacters = '';\n\n  constructor() { }\n\n  capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  ngOnChanges() {\n    \n    const accountID = this.accountID;\n    const openingChars = 10;\n    const closingChars = 5;\n\n    var known = localStorage.getItem('nano-known') ? JSON.parse(localStorage.getItem('nano-known')) : []\n\n    var found = known.filter(a => a['address'] == accountID)\n    this.name = found.length && found[found.length - 1] ? this.capitalizeFirstLetter(found[found.length - 1]['name']) : ''\n\n    if (this.middle === 'auto') this.classes = 'uk-flex';\n    if (this.middle === 'break') this.classes = 'nano-address-breakable';\n    this.firstCharacters = accountID?.split('').slice(0, openingChars).join('').replace('nano_', '');\n    this.lastCharacters = accountID?.split('').slice(-closingChars).join('');\n    if (this.middle !== 'off') {\n      this.middleCharacters = accountID?.split('').slice(openingChars, -closingChars).join('');\n    }\n  }\n\n}\n","<span *ngIf=\"name\" class=\"nano-to-name\" style=\"color: #3469ff;font-weight: bold;letter-spacing: 0.5px;line-height: 21px;font-size: 17px;padding-left: 5px;margin-top: 3px;\">@{{ name }}</span>\n<span *ngIf=\"!name\" class=\"nano-address-prefix\"><span class=\"nano-prefix\">nano_</span>{{ firstCharacters }}</span>\n<span *ngIf=\"!name\" \n\t[class]=\"{ 'nano-address-middle': true, 'uk-text-truncate': (middle === 'auto') }\"\n\t[class.is-off]=\"( middle === 'off' )\"\n>{{ middleCharacters || '...'}}</span>\n<span *ngIf=\"!name\" class=\"nano-address-suffix\">{{ lastCharacters }}</span>\n","import { AfterViewInit, Component, ElementRef, Input, OnChanges, HostBinding, ViewChild } from '@angular/core';\nimport { createIcon } from '../../../../assets/lib/nanoidenticons.min.js';\n\n@Component({\n  selector: 'app-nano-identicon',\n  templateUrl: './nano-identicon.component.html',\n  styleUrls: ['./nano-identicon.component.css'],\n})\nexport class NanoIdenticonComponent implements OnChanges, AfterViewInit {\n\n  @Input() accountID: string;\n  @Input() scale: number;\n  @Input() settingIdenticonsStyle: string;\n\n  renderedIdenticon = '';\n  imageLoadErrorOccurred = false;\n\n  constructor() { }\n\n  @ViewChild('canvasContainer') canvasContainer: ElementRef;\n\n  ngOnChanges() {\n    this.renderNanoidenticon();\n  }\n\n  ngAfterViewInit() {\n    this.renderNanoidenticon();\n  }\n\n  renderNanoidenticon() {\n    if (\n          (this.canvasContainer == null)\n        || (this.settingIdenticonsStyle !== 'nanoidenticons')\n        || (this.renderedIdenticon === this.accountID)\n      ) {\n        return;\n    }\n\n    this.renderedIdenticon = this.accountID;\n\n    const scale =\n      Math.max(\n        Math.ceil(this.scale * window.devicePixelRatio),\n        this.scale\n      );\n\n    const canvas = createIcon({\n      seed: this.accountID,\n      scale,\n    });\n\n    const canvasContainerNative = this.canvasContainer.nativeElement;\n\n    while (canvasContainerNative.firstChild) {\n      canvasContainerNative.removeChild(canvasContainerNative.lastChild);\n    }\n\n    canvasContainerNative.appendChild(canvas);\n  }\n\n}\n","<ng-container *ngIf=\"(settingIdenticonsStyle === 'nanoidenticons')\">\n\t<div #canvasContainer class=\"canvas-container\"></div>\n</ng-container>\n<ng-container *ngIf=\"(settingIdenticonsStyle === 'natricon')\">\n\t<img class=\"natricon\" [src]=\"('https://natricon.com/api/v1/nano?address=' + accountID)\" (error)=\"imageLoadErrorOccurred = true\" *ngIf=\"!imageLoadErrorOccurred\">\n\t<div class=\"natricon-placeholder\" *ngIf=\"imageLoadErrorOccurred\">\n\t\t<img src=\"assets/img/natricon-placeholder.svg\">\n\t</div>\n</ng-container>\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-nano-transaction-mobile',\n  templateUrl: './nano-transaction-mobile.component.html',\n  styleUrls: ['./nano-transaction-mobile.component.less']\n})\nexport class NanoTransactionMobileComponent implements OnInit, OnChanges {\n\n  @Input() transaction: any;\n  @Input() isInteractable = true;\n  @Input() isHidden: boolean;\n  @Input() settingIdenticonsStyle: string;\n\n  isNaN = isNaN;\n  isReceivableTransaction = false;\n  isRepresentativeChange = false;\n  isSendTransaction = false;\n  isReceiveTransaction = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.updateType();\n  }\n\n  ngOnChanges() {\n    this.updateType();\n  }\n\n  updateType() {\n    if (this.transaction.isReceivable === true) {\n      this.isReceivableTransaction = true;\n      this.isRepresentativeChange = false;\n      this.isSendTransaction = false;\n      this.isReceiveTransaction = false;\n      return;\n    }\n\n    if ( isNaN(this.transaction.amount) ) {\n      this.isReceivableTransaction = false;\n      this.isRepresentativeChange = true;\n      this.isSendTransaction = false;\n      this.isReceiveTransaction = false;\n    } else if (\n          (this.transaction.type === 'send')\n        || (this.transaction.subtype === 'send')\n      ) {\n        this.isReceivableTransaction = false;\n        this.isRepresentativeChange = false;\n        this.isSendTransaction = true;\n        this.isReceiveTransaction = false;\n    } else if (\n          (this.transaction.type === 'receive')\n        || (this.transaction.subtype === 'receive')\n        || (this.transaction.type === 'open')\n      ) {\n        this.isReceivableTransaction = false;\n        this.isRepresentativeChange = false;\n        this.isSendTransaction = false;\n        this.isReceiveTransaction = true;\n    }\n  }\n\n}\n","<div\n\tclass=\"rounded-area transaction\"\n\t[class.interactable]=\"isInteractable\"\n\t[class.identicons-enabled]=\"(settingIdenticonsStyle !== 'none')\"\n\t*ngIf=\"!isHidden\"\n>\n\t<div\n\t\tclass=\"column type-identicon\"\n\t\t[class.identicons-enabled]=\"(settingIdenticonsStyle !== 'none')\"\n\t>\n\t\t<ng-container [ngSwitch]=\"true\">\n\t\t\t<div\n\t\t\t\tclass=\"type-identicon-combined\"\n\t\t\t\t*ngSwitchCase=\"(settingIdenticonsStyle !== 'none')\"\n\t\t\t>\n\t\t\t\t<app-nano-identicon\n\t\t\t\t\tscale=\"6\"\n\t\t\t\t\t[accountID]=\"(transaction.link_as_account || transaction.account)\"\n\t\t\t\t\t[settingIdenticonsStyle]=\"settingIdenticonsStyle\"\n\t\t\t\t\tclass=\"nano-identicon\"\n\t\t\t\t></app-nano-identicon>\n\t\t\t\t<ng-container [ngSwitch]=\"true\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"type-icon-container uk-text-muted\"\n\t\t\t\t\t\t*ngSwitchCase=\"isReceivableTransaction\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"type-icon plus\">\n\t\t\t\t\t\t\t<div class=\"vertical-line\"></div>\n\t\t\t\t\t\t\t<div class=\"horizontal-line\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"type-icon-container rep-change\"\n\t\t\t\t\t\t*ngSwitchCase=\"isRepresentativeChange\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"type-icon cog\">\n\t\t\t\t\t\t\t<div class=\"square rotated\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"type-icon-container uk-text-danger\"\n\t\t\t\t\t\t*ngSwitchCase=\"isSendTransaction\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"type-icon minus\">\n\t\t\t\t\t\t\t<div class=\"horizontal-line\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"type-icon-container uk-text-success\"\n\t\t\t\t\t\t*ngSwitchCase=\"isReceiveTransaction\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"type-icon plus\">\n\t\t\t\t\t\t\t<div class=\"vertical-line\"></div>\n\t\t\t\t\t\t\t<div class=\"horizontal-line\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\t\t\t<ng-container *ngSwitchDefault>\n\t\t\t\t<ng-container [ngSwitch]=\"true\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"type-icon uk-text-small uk-text-muted\"\n\t\t\t\t\t\tuk-icon=\"icon: plus-circle; ratio: 1.2;\"\n\t\t\t\t\t\t*ngSwitchCase=\"isReceivableTransaction\"\n\t\t\t\t\t></span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"type-icon uk-text-small rep-change\"\n\t\t\t\t\t\tuk-icon=\"icon: cog; ratio: 1.2;\"\n\t\t\t\t\t\t*ngSwitchCase=\"isRepresentativeChange\"\n\t\t\t\t\t></span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"type-icon uk-text-small uk-text-danger\"\n\t\t\t\t\t\tuk-icon=\"icon: minus-circle; ratio: 1.2;\"\n\t\t\t\t\t\t*ngSwitchCase=\"isSendTransaction\"\n\t\t\t\t\t></span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"type-icon uk-text-small uk-text-success\"\n\t\t\t\t\t\tuk-icon=\"icon: plus-circle; ratio: 1.2;\"\n\t\t\t\t\t\t*ngSwitchCase=\"isReceiveTransaction\"\n\t\t\t\t\t></span>\n\t\t\t\t</ng-container>\n\t\t\t</ng-container>\n\t\t</ng-container>\n\t</div>\n\t<div\n\t\tclass=\"column action-amount\"\n\t\t[class.text-half-muted]=\"(transaction.confirmed === false) || isReceivableTransaction\"\n\t\t[class.rep-change]=\"(transaction.confirmed !== false) && isRepresentativeChange\"\n\t\t[class.uk-text-danger]=\"(transaction.confirmed !== false) && isSendTransaction\"\n\t\t[class.uk-text-success]=\"(transaction.confirmed !== false) && isReceiveTransaction\"\n\t>\n\t\t<ng-template #unconfirmedIcon>\n\t\t\t<span\n\t\t\t\tclass=\"icon-unconfirmed\"\n\t\t\t\tuk-icon=\"icon: clock;\"\n\t\t\t\t*ngIf=\"(transaction.confirmed === false)\"\n\t\t\t></span>\n\t\t</ng-template>\n\t\t<ng-container [ngSwitch]=\"true\">\n\t\t\t<div\n\t\t\t\tclass=\"action\"\n\t\t\t\t*ngSwitchCase=\"isReceivableTransaction\"\n\t\t\t>{{ 'general.blockactions.ready-to-receive' | transloco }}</div>\n\t\t\t<div\n\t\t\t\tclass=\"action\"\n\t\t\t\t*ngSwitchCase=\"isRepresentativeChange\"\n\t\t\t>{{ 'general.blockactions.rep-change' | transloco }}<ng-template [ngTemplateOutlet]=\"unconfirmedIcon\"></ng-template></div>\n\t\t\t<div\n\t\t\t\tclass=\"action\"\n\t\t\t\t*ngSwitchCase=\"isSendTransaction\"\n\t\t\t>{{ 'general.blockactions.sent' | transloco }}<ng-template [ngTemplateOutlet]=\"unconfirmedIcon\"></ng-template></div>\n\t\t\t<div\n\t\t\t\tclass=\"action\"\n\t\t\t\t*ngSwitchCase=\"isReceiveTransaction\"\n\t\t\t>{{ 'general.blockactions.received' | transloco }}<ng-template [ngTemplateOutlet]=\"unconfirmedIcon\"></ng-template></div>\n\t\t\t<div\n\t\t\t\tclass=\"action\"\n\t\t\t\t*ngSwitchDefault\n\t\t\t>{{ 'general.blockactions.unknown-action' | transloco }}<ng-template [ngTemplateOutlet]=\"unconfirmedIcon\"></ng-template></div>\n\t\t</ng-container>\n\t\t<div class=\"amount\" *ngIf=\"isReceivableTransaction || isSendTransaction || isReceiveTransaction\">\n\t\t\t<span class=\"amount-integer\">{{ transaction.amount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n\t\t\t<span class=\"amount-fractional\">{{ transaction.amount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n\t\t\t<span class=\"currency-name\">NANO</span>\n\t\t</div>\n\t</div>\n\t<div class=\"column account-date uk-text-truncate\">\n\t\t<ng-container [ngSwitch]=\"true\">\n\t\t\t<div\n\t\t\t\tclass=\"account uk-text-truncate\"\n\t\t\t\t*ngSwitchCase=\"!!transaction.addressBookName\"\n\t\t\t>{{ transaction.addressBookName }}</div>\n\t\t\t<div\n\t\t\t\tclass=\"account uk-text-truncate\"\n\t\t\t\t*ngSwitchDefault\n\t\t\t>\n\t\t\t\t<div class=\"nano-address-monospace\">\n\t\t\t\t\t<app-nano-account-id\n\t\t\t\t\t\t[accountID]=\"(transaction.link_as_account || transaction.account)\"\n\t\t\t\t\t\tmiddle=\"off\"\n\t\t\t\t\t></app-nano-account-id>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-container>\n\t\t<ng-container [ngSwitch]=\"true\">\n\t\t\t<div\n\t\t\t\tclass=\"date text-half-muted\"\n\t\t\t\t*ngSwitchCase=\"(transaction.confirmed === false)\"\n\t\t\t>unconfirmed</div>\n\t\t\t<ng-container *ngSwitchDefault>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"date text-half-muted\"\n\t\t\t\t\t*ngIf=\"( transaction.local_time_string !== '' )\"\n\t\t\t\t>{{ transaction.local_time_string }}</div>\n\t\t\t</ng-container>\n\t\t</ng-container>\n\t</div>\n</div>\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">Import Address Book Entries</h2>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'error'\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Bad Import Data</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p>There was an issue reading the import data for your address book.  Double check the address and try again.</p>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'import'\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Confirm Import</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p class=\"uk-text-center\">\n          You are about to import the following address book entries {{hostname ? 'from ' + hostname : ''}}\n        </p>\n        <p class=\"uk-text-center\">\n          <span class=\"import-warning\" *ngIf=\"conflictingEntries\">\n            {{ conflictingEntries }} entries already exist but will have their name and/or tracking settings changed.\n          </span>\n          <span class=\"import-warning\" *ngIf=\"newEntries\">\n            {{ newEntries }} New entries will be added.\n          </span>\n          <span class=\"import-warning\" *ngIf=\"existingEntries\">\n            {{ existingEntries }} entries already exist and will not be modified.\n          </span>\n        </p>\n\n        <div uk-grid>\n          <div class=\"uk-width-1-1\">\n            <ul class=\"uk-list uk-list-striped\" style=\"margin-bottom: 0;\">\n              <li class=\"uk-list-header\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-4\">New Name</div>\n                  <div class=\"uk-width-1-4\">Current Name</div>\n                  <div class=\"uk-width-1-2 uk-text-truncate\">Account</div>\n                </div>\n              </li>\n            </ul>\n            <ul class=\"uk-list uk-list-striped\" style=\"margin-top: 0;\">\n              <li *ngFor=\"let entry of importData\" [ngClass]=\"{ 'uk-text-success': !entry.originalName, 'uk-text-warning': entry.originalName && (entry.originalName !== entry.name || entry.originalTrackBalance !== entry.trackBalance || entry.originalTrackTransactions !== entry.trackTransactions), 'uk-text-muted': entry.originalName === entry.name &&  entry.originalTrackBalance === entry.trackBalance && entry.originalTrackTransactions === entry.trackTransactions}\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-4 uk-text-truncate\">\n                    {{ entry.name }}\n                  </div>\n                  <div class=\"uk-width-1-4 uk-text-truncate\">\n                    {{ entry.originalName }}\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-truncate\">\n                    {{ entry.account }}\n                  </div>\n                </div>\n\n              </li>\n            </ul>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"uk-card-footer\">\n        <div uk-grid>\n          <div class=\"nlt-button-group uk-width-1-1 uk-text-right\">\n            <button routerLink=\"/address-book\" class=\"uk-button uk-button-danger uk-width-1-1@s uk-width-auto@m\">Cancel</button>\n            <button (click)=\"confirmImport()\" class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m\">Import Entries</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {NotificationService} from '../../services/notification.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-import-address-book',\n  templateUrl: './import-address-book.component.html',\n  styleUrls: ['./import-address-book.component.css']\n})\nexport class ImportAddressBookComponent implements OnInit {\n  activePanel = 'error';\n\n  validImportData = false;\n  importData: any = null;\n\n  conflictingEntries = 0;\n  newEntries = 0;\n  existingEntries = 0;\n  hostname = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private notifications: NotificationService,\n    private addressBook: AddressBookService,\n    private router: Router) { }\n\n  ngOnInit() {\n    const importData = this.route.snapshot.fragment;\n    const queryData = this.route.snapshot.queryParams;\n    if (!importData || !importData.length) {\n      return this.importDataError(`No import data found.  Check your link and try again.`);\n    }\n\n    if ('hostname' in queryData) this.hostname = queryData.hostname;\n    const binary = atob(importData);\n    const originalString = this.fromBinary(binary);\n\n    try {\n      let importBlob;\n      if (originalString && originalString.includes('account')) {\n        importBlob = JSON.parse(originalString); // new binary format\n      } else {\n        importBlob = JSON.parse(binary); // old non-binary version\n      }\n\n      if (!importBlob || !importBlob.length) {\n        return this.importDataError(`Bad import data.  Check your link and try again.`);\n      }\n      this.validImportData = true;\n      this.importData = importBlob;\n      this.activePanel = 'import';\n\n      // Now, find conflicting accounts\n      for (const entry of importBlob) {\n        if (!entry.account || !entry.name) {\n          continue; // Data missing?\n        }\n        entry.originalName = this.addressBook.getAccountName(entry.account);\n        entry.originalTrackBalance = this.addressBook.getBalanceTrackingById(entry.account);\n        entry.originalTrackTransactions = this.addressBook.getTransactionTrackingById(entry.account);\n        if (!entry.originalName) {\n          this.newEntries++;\n        } else if (entry.originalName === entry.name && entry.originalTrackBalance === entry.trackBalance &&\n          entry.originalTrackTransactions === entry.trackTransactions) {\n          this.existingEntries++;\n        } else {\n          this.conflictingEntries++;\n        }\n      }\n\n    } catch (err) {\n      return this.importDataError(`Unable to decode import data.  Check your link and try again.`);\n    }\n  }\n\n  // converts back to string from binary\n  fromBinary(binary) {\n    try {\n      const bytes = new Uint8Array(binary.length);\n      for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n      }\n      return String.fromCharCode(...new Uint16Array(bytes.buffer));\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async confirmImport() {\n    // Go through our address book and see which ones need to be saved\n    // If new entry or any of name, trackTransactions or trackBalance has changed\n    let importedCount = 0;\n    for (const entry of this.importData) {\n      if (!entry.originalName || (entry.originalName && (entry.originalName !== entry.name ||\n      entry.originalTrackBalance !== entry.trackBalance || entry.originalTrackTransactions !== entry.trackTransactions))) {\n        await this.addressBook.saveAddress(entry.account, entry.name,\n          entry.trackBalance ? entry.trackBalance : false, entry.trackTransactions ? entry.trackTransactions : false);\n        importedCount++;\n      }\n    }\n\n    this.router.navigate(['address-book']);\n    this.notifications.sendSuccess(`Successfully imported ${importedCount} address book entries`);\n  }\n\n  importDataError(message) {\n    this.activePanel = 'error';\n    return this.notifications.sendError(message);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NotificationService} from '../../services/notification.service';\nimport * as CryptoJS from 'crypto-js';\nimport {WalletService, WalletType} from '../../services/wallet.service';\nimport {UtilService} from '../../services/util.service';\n\n@Component({\n  selector: 'app-import-wallet',\n  templateUrl: './import-wallet.component.html',\n  styleUrls: ['./import-wallet.component.css']\n})\nexport class ImportWalletComponent implements OnInit {\n  activePanel = 'error';\n\n  walletPassword = '';\n  validImportData = false;\n  importData: any = null;\n  hostname = '';\n\n  constructor(private route: ActivatedRoute, private notifications: NotificationService, private walletService: WalletService,\n    private router: Router, private util: UtilService) { }\n\n  ngOnInit() {\n    const importData = this.route.snapshot.fragment;\n    const queryData = this.route.snapshot.queryParams;\n    if (!importData || !importData.length) {\n      return this.importDataError(`No import data found.  Check your link and try again.`);\n    }\n\n    if ('hostname' in queryData) this.hostname = queryData.hostname;\n    const decodedData = atob(importData);\n\n    try {\n      const importBlob = JSON.parse(decodedData);\n      if (!importBlob || (!importBlob.seed && !importBlob.privateKey && !importBlob.expandedKey)) {\n        return this.importDataError(`Bad import data.  Check your link and try again.`);\n      }\n      this.validImportData = true;\n      this.importData = importBlob;\n      this.activePanel = 'import';\n    } catch (err) {\n      return this.importDataError(`Unable to decode import data.  Check your link and try again.`);\n    }\n  }\n\n  importDataError(message) {\n    this.activePanel = 'error';\n    return this.notifications.sendError(message);\n  }\n\n  async decryptWallet() {\n    // Attempt to decrypt the seed value using the password\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500)); // brute force delay\n      let walletType: WalletType;\n      let secret = '';\n      if (this.importData.seed) {\n        secret = this.importData.seed;\n        walletType = 'seed';\n      } else if (this.importData.privateKey) {\n        secret = this.importData.privateKey;\n        walletType = 'privateKey';\n      } else if (this.importData.expandedKey) {\n        secret = this.importData.expandedKey;\n        walletType = 'expandedKey';\n      }\n      const decryptedBytes = CryptoJS.AES.decrypt(secret, this.walletPassword);\n      const decryptedSecret = decryptedBytes?.toString(CryptoJS.enc.Utf8);\n      if (!decryptedSecret || decryptedSecret.length !== 64) {\n        this.walletPassword = '';\n        return this.notifications.sendError(`Invalid password, please try again`);\n      }\n      if (!this.util.nano.isValidSeed(decryptedSecret)) {\n        this.walletPassword = '';\n        return this.notifications.sendError(`Invalid seed format (non HEX characters)`);\n      }\n\n      this.router.navigate(['accounts']); // load accounts and watch them update in real-time\n      this.notifications.sendInfo(`Loading all accounts for the wallet...`);\n      if (await this.walletService.loadImportedWallet(decryptedSecret, this.walletPassword,\n        this.importData.accountsIndex || 0, this.importData.indexes || null, walletType)) {\n          this.notifications.sendSuccess(`Successfully imported the wallet!`, {length: 10000});\n      } else {\n        return this.notifications.sendError(`Failed importing the wallet. Invalid data!`);\n      }\n\n    } catch (err) {\n      this.walletPassword = '';\n      return this.notifications.sendError(`Invalid password, please try again`);\n    }\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">Import Wallet</h2>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'error'\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Bad Import Data</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p>There was an issue reading the import data for your wallet.  Double check the address and try again.</p>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'import'\">\n      <div *ngIf=\"walletService.isConfigured()\" class=\"uk-alert uk-alert-danger\">\n        <b>You already have a local Nault wallet configured</b><br>\n        Before going any further, be 100% certain you have backed up the secret recovery phrase for your current wallet!<br>\n        Without it, <b>any funds you have will become completely unrecoverable!</b>\n      </div>\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Confirm Wallet Import</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p>You are about to import a wallet {{hostname ? 'from ' + hostname : ''}} - just enter your {{hostname ? 'wallet' : ''}} password to decrypt it!</p>\n        <div uk-grid>\n          <div class=\"uk-width-1-1\">\n            <input class=\"uk-input\" [(ngModel)]=\"walletPassword\" placeholder=\"Wallet Password\" type=\"password\">\n          </div>\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right\">\n        <button (click)=\"decryptWallet()\" class=\"uk-button uk-button-secondary\">Import Wallet</button>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'imported'\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Wallet Imported</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p>Your wallet has been successfully imported!</p>\n      </div>\n      <div class=\"uk-card-footer uk-text-right\">\n        <button routerLink=\"/accounts\" class=\"uk-button uk-button-secondary\">View Accounts</button>\n      </div>\n    </div>\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from 'app/services/notification.service';\n\ninterface InstallEvent extends Event {\n  userChoice: Promise<{ outcome: 'accepted' | 'dismissed', platform: string }>;\n  prompt(): void;\n}\n\n@Component({\n  selector: 'app-install-widget',\n  templateUrl: './install-widget.component.html',\n  styleUrls: ['./install-widget.component.less'],\n})\nexport class InstallWidgetComponent implements OnInit {\n\n  installEvent: InstallEvent;\n  showInstallPromotion = false;\n  platform = this.getPlatform();\n  promotablePlatforms = ['Android', 'iOS', 'iPadOS', 'Chrome OS'];\n\n  constructor(\n    private notifications: NotificationService,\n  ) { }\n\n  ngOnInit() {\n    if (!this.isPromotable()) {\n      return;\n    }\n\n    // Show clickable installation banner (Chrome / Edge only)\n    window.addEventListener('beforeinstallprompt', (event: InstallEvent) => {\n      // Prevent the mini-infobar from appearing on mobile\n      event.preventDefault();\n\n      this.installEvent = event;\n      this.showInstallPromotion = true;\n    });\n\n    // Fallback for iOS family\n    if (this.isIosInstallable()) {\n      setTimeout(() => {\n        this.showInstallPromotion = true;\n      });\n    }\n  }\n\n  install() {\n    if (!this.installEvent) {\n      return;\n    }\n\n    this.installEvent.prompt();\n    this.installEvent.userChoice.then((result) => {\n      if (result.outcome === 'accepted') {\n        this.notifications.sendSuccess('Nault was successfully installed to the device.');\n        this.dismiss();\n      }\n    });\n  }\n\n  dismiss() {\n    this.showInstallPromotion = false;\n  }\n\n  getPlatform() {\n    const platform = window.navigator.platform;\n    const userAgent = window.navigator.userAgent;\n\n    if (platform.includes('Win')) {\n      return 'Windows';\n    } else if (platform.includes('Mac')) {\n      return 'Mac';\n    } else if (userAgent.includes('Android')) {\n      return 'Android';\n    } else if (userAgent.includes('CrOS')) {\n      return 'Chrome OS';\n    } else if (platform.includes('Linux')) {\n      return 'Linux';\n    } else if (platform.includes('iPhone')) {\n      return 'iOS';\n    } else if (platform.includes('iPad')) {\n      return 'iPadOS';\n    }\n  }\n\n  isIosInstallable() {\n    if (!this.isPromotable() || this.isInstalled()) {\n      return false;\n    }\n    return this.platform === 'iOS' || this.platform === 'iPadOS' && 'standalone' in window.navigator;\n  }\n\n  isPromotable() {\n    if (this.isInstalled()) {\n      return false;\n    }\n    return this.promotablePlatforms.includes(this.platform);\n  }\n\n  isInstalled() {\n    return window.matchMedia('(display-mode: standalone)').matches // Chrome & Edge\n      || (window.navigator as any).standalone === true // Safari\n      || window.navigator.userAgent.includes('Electron'); // Electron\n  }\n}\n","<div (click)=\"install()\" [tabindex]=\"isIosInstallable() ? -1 : 0\" class=\"nav-install-row half-muted\" [class.interactable]=\"!isIosInstallable()\" [class.large]=\"isIosInstallable()\" [class.visible]=\"showInstallPromotion\" [class.uk-hidden]=\"!isPromotable()\">\n    <span uk-icon=\"icon: download; ratio: 1.2\" class=\"icon\"></span>\n    <div>\n        <div class=\"label\">Install Nault for {{ platform }}</div>\n        <div class=\"description\" *ngIf=\"isIosInstallable()\">\n            1. Tap the <span uk-icon=\"icon: push; ratio: 0.8\"></span> Share button \n            <span *ngIf=\"platform === 'iOS'\">below</span>\n            <span *ngIf=\"platform === 'iPadOS'\">in the top right</span> <br/>\n            2. Select <span uk-icon=\"icon: plus-circle; ratio: 0.8\"></span> Add to home screen\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {UtilService} from '../../services/util.service';\nimport * as bip39 from 'bip39';\nimport {NotificationService} from '../../services/notification.service';\n\n@Component({\n  selector: 'app-keygenerator',\n  templateUrl: './keygenerator.component.html',\n  styleUrls: ['./keygenerator.component.css']\n})\nexport class KeygeneratorComponent implements OnInit {\n  seed = '';\n  mnemonic = '';\n  privateKey = '';\n  account = '';\n  newWalletMnemonicLines = [];\n\n  constructor(\n    private util: UtilService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  generate() {\n    // generate random bytes and create seed/mnemonic\n    const seedBytes = this.util.account.generateSeedBytes();\n    this.seed = this.util.hex.fromUint8(seedBytes).toUpperCase();\n    this.mnemonic = bip39.entropyToMnemonic(this.seed);\n    // derive private/public keys using index 0\n    const keyBytes = this.util.account.generateAccountSecretKeyBytes(seedBytes, 0);\n    const keyPair = this.util.account.generateAccountKeyPair(keyBytes);\n    this.privateKey = this.util.hex.fromUint8(keyPair.secretKey).toUpperCase();\n    this.account = this.util.account.getPublicAccountID(keyPair.publicKey);\n\n    // Split the seed up so we can show 4 per line\n    const words = this.mnemonic.split(' ');\n    const lines = [\n      words.slice(0, 4),\n      words.slice(4, 8),\n      words.slice(8, 12),\n      words.slice(12, 16),\n      words.slice(16, 20),\n      words.slice(20, 24),\n    ];\n    this.newWalletMnemonicLines = lines;\n  }\n\n  copied() {\n    this.notificationService.removeNotification('success-copied');\n    this.notificationService.sendSuccess(`Successfully copied to clipboard!`, { identifier: 'success-copied' });\n  }\n}\n","<div uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2>Keypair Generator</h2>\n\n    <div class=\"uk-card uk-card-default\">\n      <div class=\"uk-card-header\" style=\"border-bottom: none\">\n        <p>This tool generates seeds, mnemonic phrases and private key / public address pairs using a cryptographically secure random hash function.<br>\n          You will need to manually store the recovery options for each generated address that you want to retain access to.</p>\n        <div>\n          <ul>\n            <li>The account can receive incoming funds at any time and live transactions can happen in any wallet that supports import of nano secret recovery seed/mnemonic or private key.</li>\n            <li>For additional security the keys can be generated and stored offline to be utilized in methods such as <a routerLink=\"/remote-signing\" class=\"name\">Remote Signing</a> and <a routerLink=\"/multisig\" class=\"name\">Multisig</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default\" style=\"margin-top: 20px;\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Generate a new random keypair</h3>\n        <p>For <strong>Remote Signing</strong> or <strong>Multisig</strong>, you will need to store and use the <strong>Private Key</strong>.</p>\n      </div>\n      \n      <div class=\"uk-card-body\">\n        <div uk-grid>\n          <div class=\"uk-width-1-4@m\">{{ 'configure-wallet.new-wallet.secret-recovery-seed' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip title=\"Can be used to derive many private keys with different indexes or converted to a secret recovery mnemonic. It's NOT bip39/44.\"></span></div>\n          <div class=\"uk-width-3-4@m\">\n            <div *ngIf=\"seed == ''\" class=\"uk-margin-small-bottom\">...</div>\n            <div *ngIf=\"seed !== ''\">\n              <div class=\"uk-margin-small-bottom word-wrap-anywhere\">{{ seed }}</div>\n              <a [title]=\"( 'configure-wallet.new-wallet.copy-secret-recovery-seed' | transloco )\" ngxClipboard [cbContent]=\"seed\" (cbOnSuccess)=\"copied()\" uk-tooltip>{{ 'configure-wallet.new-wallet.copy-secret-recovery-seed' | transloco }}</a>\n            </div>\n          </div>\n        </div>\n        <hr class=\"uk-divider-icon\">\n    \n        <div uk-grid>\n          <div class=\"uk-width-1-4@m\">\n            {{ 'configure-wallet.new-wallet.secret-recovery-mnemonic' | transloco }} <span uk-icon=\"icon: info;\" uk-tooltip title=\"Can be used to derive many private keys with different indexes or converted to a secret recovery seed. It's NOT bip39/44.\"></span>\n          </div>\n          <div class=\"uk-width-3-4@m\">\n            <div *ngIf=\"mnemonic == ''\" class=\"uk-margin-small-bottom\">...</div>\n            <div *ngIf=\"mnemonic !== ''\">\n              <pre class=\"mne-box\"><span *ngFor=\"let line of newWalletMnemonicLines; let l = index\" class=\"mne-cont\"><span *ngFor=\"let word of line; let i = index\" class=\"mne-word\"><span class=\"mne-num\">{{ (l * 4) + i + 1 }}</span> {{ word }}</span></span></pre>\n              <a [title]=\"('configure-wallet.new-wallet.copy-secret-recovery-mnemonic' | transloco)\" ngxClipboard [cbContent]=\"mnemonic\" (cbOnSuccess)=\"copied()\" uk-tooltip>{{ 'configure-wallet.new-wallet.copy-secret-recovery-mnemonic' | transloco }}</a>\n            </div>\n          </div>\n        </div>\n        <hr class=\"uk-divider-icon\">\n    \n        <div uk-grid>\n          <div class=\"uk-width-1-4@m\">\n            Private Key - Index 0\n          </div>\n          <div class=\"uk-width-3-4@m\">\n            <div *ngIf=\"privateKey == ''\" class=\"uk-margin-small-bottom\">...</div>\n            <div *ngIf=\"privateKey !== ''\">\n              <div class=\"uk-margin-small-bottom word-wrap-anywhere\">{{ privateKey }}</div>\n              <a title=\"Copy Private Key\" ngxClipboard [cbContent]=\"privateKey\" (cbOnSuccess)=\"copied()\" uk-tooltip>Copy Private Key</a>\n            </div>\n          </div>\n        </div>\n        <hr class=\"uk-divider-icon\">\n        \n        <div *ngIf=\"account !== ''\">\n          <div class=\"uk-alert uk-alert-danger nlt-inline-alert\">\n            <div class=\"icon-column\">\n              <div uk-icon=\"icon: warning; ratio: 2;\"></div>\n            </div>\n            <p>\n              You will NOT be able to access any funds on the address below, without a secret recovery seed/mnemonic or a private key written above.<br>\n              Make sure to securely store any of the secret recovery seed, mnemonic or private key, save it somewhere safe and <strong>never share it with anyone!</strong>\n            </p>\n          </div>\n        </div>\n        <br>\n\n        <div uk-grid>\n          <div class=\"uk-width-1-4@m\">\n            Address - Index 0\n          </div>\n          <div class=\"uk-width-3-4@m uk-text-truncate\">\n            <div *ngIf=\"account == ''\" class=\"uk-margin-small-bottom\">...</div>\n            <div *ngIf=\"account !== ''\">\n              <div class=\"uk-margin-small-bottom\"><app-nano-account-id [accountID]=\"account\" middle=\"auto\" class=\"nano-address-monospace\"></app-nano-account-id></div>\n              <a title=\"Copy Address\" ngxClipboard [cbContent]=\"account\" (cbOnSuccess)=\"copied()\" uk-tooltip>Copy Address</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-left nlt-button-group\">\n        <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"generate()\">Generate New Keypair</button>\n      </div>\n    </div>\n  </div>\n</div>\n","\nimport {map} from 'rxjs/operators';\nimport {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ModalService} from '../../services/modal.service';\nimport {ApiService} from '../../services/api.service';\nimport {Router} from '@angular/router';\nimport {RepresentativeService} from '../../services/representative.service';\nimport {UtilService} from '../../services/util.service';\n\n@Component({\n  selector: 'app-manage-representatives',\n  templateUrl: './manage-representatives.component.html',\n  styleUrls: ['./manage-representatives.component.css']\n})\nexport class ManageRepresentativesComponent implements OnInit, AfterViewInit {\n\n  activePanel = 0;\n  creatingNewEntry = false;\n\n  // Set the online status of each representative\n  representatives$ = this.repService.representatives$.pipe(map(reps => {\n    return reps.map(rep => {\n      rep.online = this.onlineReps.indexOf(rep.id) !== -1;\n      return rep;\n    });\n  }));\n\n  previousRepName = '';\n  newRepAccount = '';\n  newRepName = '';\n  newRepTrusted = false;\n  newRepWarn = false;\n\n  onlineReps = [];\n\n  constructor(\n    private api: ApiService,\n    private notificationService: NotificationService,\n    public modal: ModalService,\n    private repService: RepresentativeService,\n    private util: UtilService) { }\n\n  async ngOnInit() {\n    this.repService.loadRepresentativeList();\n    this.onlineReps = await this.getOnlineRepresentatives();\n    this.repService.representatives$.next(this.repService.representatives); // Forcefully repush rep list once we have online status\n  }\n\n  ngAfterViewInit() {\n  }\n\n  addEntry() {\n    this.previousRepName = '';\n    this.creatingNewEntry = true;\n    this.activePanel = 1;\n  }\n\n  editEntry(representative) {\n    this.newRepAccount = representative.id;\n    this.previousRepName = representative.name;\n    this.newRepName = representative.name;\n    this.newRepTrusted = !!representative.trusted;\n    this.newRepWarn = !!representative.warn;\n    this.creatingNewEntry = false;\n    this.activePanel = 1;\n    setTimeout(() => {\n      document.getElementById('new-address-name').focus();\n    }, 150);\n  }\n\n  async saveNewRepresentative() {\n    if (!this.newRepAccount || !this.newRepName) {\n      return this.notificationService.sendError(`Account and name are required`);\n    }\n\n    this.newRepAccount = this.newRepAccount.replace(/ /g, ''); // Remove spaces\n\n    // If the name has been changed, make sure no other entries are using that name\n    if ( (this.newRepName !== this.previousRepName) && this.repService.nameExists(this.newRepName) ) {\n      return this.notificationService.sendError(`This name is already in use! Please use a unique name`);\n    }\n\n    // Make sure the address is valid\n    const valid = this.util.account.isValidAccount(this.newRepAccount);\n    if (!valid) {\n      return this.notificationService.sendWarning(`Account ID is not a valid account`);\n    }\n\n    try {\n      await this.repService.saveRepresentative(this.newRepAccount, this.newRepName, this.newRepTrusted, this.newRepWarn);\n      this.notificationService.sendSuccess(`Representative entry saved successfully!`);\n\n      this.cancelNewRep();\n    } catch (err) {\n      this.notificationService.sendError(`Unable to save entry: ${err.message}`);\n    }\n  }\n\n  cancelNewRep() {\n    this.newRepName = '';\n    this.newRepAccount = '';\n    this.newRepTrusted = false;\n    this.newRepWarn = false;\n    this.activePanel = 0;\n  }\n\n  copied() {\n    this.notificationService.removeNotification('success-copied');\n    this.notificationService.sendSuccess(`Account address copied to clipboard!`, { identifier: 'success-copied' });\n  }\n\n  async getOnlineRepresentatives() {\n    const representatives = [];\n    try {\n      const reps = await this.api.representativesOnline();\n      for (const representative in reps.representatives) {\n        if (!reps.representatives.hasOwnProperty(representative)) {\n          continue;\n        }\n        representatives.push(reps.representatives[representative]);\n      }\n    } catch (err) {\n      this.notificationService.sendWarning(`Unable to determine online status of representatives`);\n    }\n\n    return representatives;\n  }\n\n  async deleteRepresentative(accountID) {\n    try {\n      this.repService.deleteRepresentative(accountID);\n      this.notificationService.sendSuccess(`Successfully deleted representative`);\n    } catch (err) {\n      this.notificationService.sendError(`Unable to delete representative: ${err.message}`);\n    }\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\" id=\"address-book-sortable\">\n\n    <div class=\"uk-margin-bottom\" uk-grid>\n      <div class=\"uk-width-expand@s uk-width-1-1\">\n        <h2 class=\"uk-heading-divider uk-text-truncate\">\n          Representatives Book\n          <a [routerLink]=\"'/representatives'\" style=\"font-size: 12px; margin-left: 25px;\">BACK TO REPRESENTATIVES OVERVIEW</a>\n        </h2>\n      </div>\n      <div class=\"uk-width-auto@s uk-width-1-1 uk-text-right\" *ngIf=\"activePanel == 0\">\n        <button class=\"uk-button uk-button-secondary uk-align-right uk-width-auto@s\" (click)=\"addEntry()\">Add New Entry</button>\n      </div>\n    </div>\n\n    <div class=\"uk-width-1-1 nlt-page-intro\" *ngIf=\"activePanel == 0\">\n      <p>\n        You can use this page as a notebook for representatives. Here you can set custom display names to be shown throughout the application, mark representatives as trusted (please note that this will suppress warnings), or mark representatives that should be avoided.\n      </p>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel == 0\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-margin\">\n\n          <ul class=\"uk-list uk-list-striped\" style=\"margin-bottom: 0;\">\n            <li class=\"uk-list-header\">\n              <div uk-grid>\n                <div class=\"uk-width-2-5\">Name</div>\n                <div class=\"uk-width-expand\">Address</div>\n                <div class=\"uk-width-1-6 uk-text-center\" style=\"padding-left: 0;\">Actions</div>\n              </div>\n            </li>\n          </ul>\n\n          <ul class=\"uk-list uk-list-striped\" style=\"margin-top: 0;\">\n            <li class=\"\" *ngFor=\"let representative of representatives$ | async;\" [attr.data-account]=\"representative.id\">\n              <div uk-grid>\n                <div class=\"uk-width-2-5 uk-text-truncate uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-expand uk-text-truncate\">\n                      <a (click)=\"editEntry(representative)\" class=\"uk-link-text\" title=\"Edit Entry\" uk-tooltip>{{ representative.name }}</a>\n                    </div>\n                    <ul class=\"uk-iconnav uk-width-auto\" style=\"padding-left: 0;\">\n                      <!--<li><span class=\"uk-sortable-handle uk-margin-small-right\" uk-icon=\"icon: table\"></span></li>-->\n                      <li *ngIf=\"representative.trusted\"><span class=\"uk-text-success\" uk-icon=\"icon: star\" uk-tooltip title=\"Representative marked as trusted\"></span></li>\n                      <li *ngIf=\"representative.warn\"><span class=\"uk-text-small uk-text-warning\" uk-tooltip title=\"Representative marked as 'should be avoided'\"><span uk-icon=\"icon: warning\"></span> Avoid</span></li>\n                    </ul>\n                  </div>\n                </div>\n                <div class=\"uk-width-expand uk-text-truncate uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-expand uk-text-truncate\">\n                      <a [routerLink]=\"'/account/' + representative.id\" class=\"nano-address-clickable nano-address-monospace uk-display-block\" title=\"View Account Details\" uk-tooltip>\n                        <app-nano-account-id [accountID]=\"representative.id\"></app-nano-account-id>\n                      </a>\n                    </div>\n                    <ul class=\"nano-address-actions uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"representative.id\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n\n                </div>\n                <div class=\"uk-width-1-6 uk-text-center\" style=\"padding-left: 0;\">\n                  <a (click)=\"deleteRepresentative(representative.id)\" class=\"uk-text-danger\" title=\"Delete Entry\" uk-tooltip><span uk-icon=\"icon: trash;\"></span></a>\n                </div>\n              </div>\n\n            </li>\n            <li *ngIf=\"!(representatives$ | async).length\" class=\"uk-text-center\">\n              You do not have any representatives saved yet, <a (click)=\"addEntry()\">click here to add new entry</a>.\n            </li>\n          </ul>\n\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel == 1\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-header\">\n            <h2 class=\"uk-card-title\">{{ creatingNewEntry ? 'Add New Entry' : 'Edit Entry' }}</h2>\n          </div>\n          <div class=\"uk-card-body\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-address-name\">Name</label>\n                <div class=\"uk-form-controls\">\n                  <input type=\"text\" class=\"uk-input\" id=\"new-address-name\" [(ngModel)]=\"newRepName\" (keyup.enter)=\"saveNewRepresentative()\" placeholder=\"Representative Name\">\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-address-account\">Address</label>\n                <div class=\"uk-form-controls\">\n                  <input type=\"text\" class=\"uk-input\" id=\"new-address-account\" [(ngModel)]=\"newRepAccount\" [disabled]=\"!creatingNewEntry\" placeholder=\"nano_abc123\">\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">Representative Flags</label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <label style=\"cursor: pointer;\" uk-tooltip title=\"Suppress all warnings about this representative\"><input type=\"checkbox\" class=\"uk-checkbox\" [(ngModel)]=\"newRepTrusted\"> &nbsp; Trusted Representative</label>\n                    </div>\n                    <div class=\"uk-width-1-1 uk-margin-small-top\">\n                      <label style=\"cursor: pointer;\" uk-tooltip title=\"Warn when using this representative\"><input type=\"checkbox\" class=\"uk-checkbox\" [(ngModel)]=\"newRepWarn\"> &nbsp; Avoid Representative</label>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <div class=\"uk-card-footer uk-text-right@s nlt-button-group\">\n            <button class=\"uk-button uk-button-danger uk-width-1-1@s uk-width-auto@m\" (click)=\"cancelNewRep()\">Cancel</button>\n            <button class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m\" (click)=\"saveNewRepresentative()\">Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ApiService} from '../../services/api.service';\nimport {UtilService} from '../../services/util.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport * as QRCode from 'qrcode';\nimport * as bip from 'bip39';\nimport {formatDate} from '@angular/common';\n\n@Component({\n  selector: 'app-manage-wallet',\n  templateUrl: './manage-wallet.component.html',\n  styleUrls: ['./manage-wallet.component.css']\n})\nexport class ManageWalletComponent implements OnInit {\n\n  wallet = this.walletService.wallet;\n  accounts = this.walletService.wallet.accounts;\n\n  newPassword = '';\n  confirmPassword = '';\n\n  showQRExport = false;\n  QRExportUrl = '';\n  QRExportImg = '';\n\n  csvExportStarted = false;\n  transactionHistoryLimit = 500; // if the backend server limit changes, change this too\n  selAccountInit = false;\n  invalidCsvCount = false;\n  invalidCsvOffset = false;\n  csvAccount = this.accounts.length > 0 ? this.accounts[0].id : '0';\n  csvCount = this.transactionHistoryLimit.toString();\n  csvOffset = '';\n  beyondCsvLimit = false;\n  exportingCsv = false;\n  orderOptions = [\n    { name: 'Newest Transactions First', value: false },\n    { name: 'Oldest Transactions First', value: true },\n  ];\n  selectedOrder = this.orderOptions[0].value;\n  exportEnabled = true;\n\n  constructor(\n    public walletService: WalletService,\n    public notifications: NotificationService,\n    private api: ApiService,\n    private util: UtilService,\n    public settings: AppSettingsService) { }\n\n  async ngOnInit() {\n    this.wallet = this.walletService.wallet;\n\n    // Update selected account if changed in the sidebar\n    this.walletService.wallet.selectedAccount$.subscribe(async acc => {\n      if (this.selAccountInit) {\n        this.csvAccount = acc ? acc.id : (this.accounts.length > 0 ? this.accounts[0].id : '0');\n      }\n      this.selAccountInit = true;\n    });\n\n    // Set the account selected in the sidebar as default\n    if (this.walletService.wallet.selectedAccount !== null) {\n      this.csvAccount = this.walletService.wallet.selectedAccount.id;\n    }\n  }\n\n  async changePassword() {\n    if (this.newPassword !== this.confirmPassword) {\n      return this.notifications.sendError(`Passwords do not match`);\n    }\n    if (this.newPassword.length < 1) {\n      return this.notifications.sendError(`Password cannot be empty`);\n    }\n    if (this.walletService.isLocked()) {\n      const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n      if (wasUnlocked === false) {\n        return;\n      }\n    }\n\n    this.walletService.wallet.password = this.newPassword;\n    this.walletService.saveWalletExport();\n\n    this.newPassword = '';\n    this.confirmPassword = '';\n    this.notifications.sendSuccess(`Wallet password successfully updated`);\n\n    this.showQRExport = false;\n  }\n\n  async exportWallet() {\n \n    if (this.walletService.isLocked()) {\n      const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n      if (wasUnlocked === false) {\n        return;\n      }\n    }\n\n    const exportUrl = this.walletService.generateExportUrl();\n    this.QRExportUrl = exportUrl;\n    this.QRExportImg = await QRCode.toDataURL(exportUrl, { errorCorrectionLevel: 'M', scale: 8 });\n    this.showQRExport = true;\n    \n  }\n\n  copied() {\n    this.notifications.removeNotification('success-copied');\n    this.notifications.sendSuccess(`Wallet seed copied to clipboard!`, { identifier: 'success-copied' });\n  }\n\n  seedMnemonic() {\n    if (this.wallet && this.wallet.seed ) {\n      return bip.entropyToMnemonic(this.wallet.seed);\n    }\n  }\n\n  triggerFileDownload(fileName, exportData, type) {\n    let blob;\n    // first line, include columns for spreadsheet\n    let csvFile = 'account,type,amount,hash,height,time\\n';\n\n    switch (type) {\n      case 'json':\n        blob = new Blob([JSON.stringify(exportData)], { type: 'application/json' });\n        break;\n      case 'csv':\n        // comma-separated attributes for each row\n        const processRow = function (row) {\n          let finalVal = '';\n          let j = 0;\n          for (const [key, value] of Object.entries(row)) {\n            const innerValue = value === null ? '' : value.toString();\n            let result = innerValue.replace(/\"/g, '\"\"');\n            if (result.search(/(\"|,| |\\n)/g) >= 0) {\n              result = '\"' + result + '\"';\n            }\n            if (j > 0) {\n              finalVal += ',';\n            }\n            j++;\n            finalVal += result;\n          }\n          return finalVal + '\\n';\n        };\n        for (let i = 0; i < exportData.length; i++) {\n          csvFile += processRow(exportData[i]);\n        }\n        blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });\n        break;\n    }\n\n    // Check for iOS, which is weird with saving files\n    const iOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n    const elem = window.document.createElement('a');\n    const objUrl = window.URL.createObjectURL(blob);\n    if (iOS) {\n      switch (type) {\n        case 'json':\n          elem.href = `data:attachment/file,${JSON.stringify(exportData)}`;\n          break;\n        case 'csv':\n          elem.href = `data:attachment/file,${csvFile}`;\n          break;\n      }\n    } else {\n      elem.href = objUrl;\n    }\n    elem.download = fileName;\n    document.body.appendChild(elem);\n    elem.click();\n    setTimeout(function() {\n      document.body.removeChild(elem);\n      window.URL.revokeObjectURL(objUrl);\n    }, 200);\n  }\n\n  async exportToFile() {\n    if (this.walletService.isLocked()) {\n      const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n      if (wasUnlocked === false) {\n        return;\n      }\n    }\n\n    const fileName = `Nault-Pro-Backup-${this.accounts[0] ? this.accounts[0].id.slice(0, 14) : ''}.json`;\n    const exportData = this.walletService.generateExportData();\n    this.triggerFileDownload(fileName, exportData, 'json');\n\n    this.notifications.sendSuccess(`Wallet export downloaded`);\n  }\n\n  csvCountChange(count) {\n    if (this.util.string.isNumeric(count) && count % 1 === 0 || count === '') {\n      // only allow beyond limit if using a custom server\n      if (this.settings.settings.serverName !== 'custom' &&\n      (parseInt(count, 10) > this.transactionHistoryLimit || count === '' || count === '0')) {\n        this.invalidCsvCount = true;\n        this.beyondCsvLimit = true;\n      } else {\n        if (parseInt(count, 10) < 0) {\n          this.invalidCsvCount = true;\n          this.beyondCsvLimit = false;\n        } else {\n          this.invalidCsvCount = false;\n          this.beyondCsvLimit = false;\n        }\n      }\n    } else {\n      this.invalidCsvCount = true;\n    }\n  }\n\n  csvOffsetChange(offset) {\n    if (this.util.string.isNumeric(offset) && offset % 1 === 0 || offset === '') {\n      if (parseInt(offset, 10) < 0) {\n        this.invalidCsvOffset = true;\n      } else {\n        this.invalidCsvOffset = false;\n      }\n    } else {\n      this.invalidCsvOffset = true;\n    }\n  }\n\n  csvInit() {\n    this.csvExportStarted = true;\n  }\n\n  async exportToCsv() {\n    // disable export for a period to reduce RPC calls\n    if (!this.exportEnabled) return;\n    this.exportEnabled = false;\n    setTimeout(() => this.exportEnabled = true, 3000);\n\n    if (this.invalidCsvCount) {\n      if (this.beyondCsvLimit) {\n        return this.notifications.sendWarning(`To export transactions above the limit, please use a custom Nault server`);\n      } else {\n        return this.notifications.sendWarning(`Invalid limit`);\n      }\n    }\n    if (this.invalidCsvOffset) {\n      return this.notifications.sendWarning(`Invalid offset`);\n    }\n\n    this.exportingCsv = true;\n    const transactionCount = this.csvCount === '' ? 0 : parseInt(this.csvCount, 10);\n    const transactionOffset = this.csvOffset === '' ? 0 : parseInt(this.csvOffset, 10);\n    const history = await this.api.accountHistory(this.csvAccount, transactionCount, false, transactionOffset, this.selectedOrder);\n    this.exportingCsv = false; // reset it here in case the file download fails (don't want spinning button forever)\n\n    // contruct the export data\n    const csvData = [];\n    if (history && history.history && history.history.length > 0) {\n      history.history.forEach(a => {\n        csvData.push({'account': a.account, 'type': a.type, 'amount': this.util.nano.rawToMnano(a.amount).toString(10),\n        'hash': a.hash, 'height': a.height, 'time': formatDate(a.local_timestamp * 1000, 'y-MM-d HH:mm:ss', 'en-US')});\n      });\n    }\n\n    if (csvData.length === 0) {\n      return this.notifications.sendWarning(`No transaction history found or bad server response!`);\n    }\n\n    // download file\n    const fileName = `${this.csvAccount}_offset=${this.csvOffset === '' ? 0 : this.csvOffset}${this.selectedOrder === true ? '_oldestFirst' : '_newestFirst'}.csv`;\n    this.triggerFileDownload(fileName, csvData, 'csv');\n    this.notifications.sendSuccess(`Transaction history downloaded!`);\n  }\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">Manage Wallet</h2>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"!walletService.isLedgerWallet()\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Change Wallet Password</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n          <div class=\"uk-width-1-2@s\">\n            <input class=\"uk-input\" [(ngModel)]=\"newPassword\" placeholder=\"New Password\" type=\"password\">\n            <!-- <password-strength-meter *ngIf=\"newPassword.length > 0\" [password]=\"newPassword\" [enableFeedback]=\"true\" [minPasswordLength]=\"6\"></password-strength-meter> -->\n            <span class=\"password-helper\" *ngIf=\"newPassword.length > 0 && newPassword.length < 3\">Password must be at least 6 characters long</span>\n            <span class=\"password-helper\" *ngIf=\"confirmPassword.length >= 6 && newPassword !== confirmPassword\">Passwords do not match!</span>\n          </div>\n          <div class=\"uk-width-1-2@s\">\n            <input class=\"uk-input\" [(ngModel)]=\"confirmPassword\" placeholder=\"Confirm New Password\" type=\"password\">\n          </div>\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n        <button [disabled]=\"newPassword.length < 3 || (newPassword !== confirmPassword)\" (click)=\"changePassword()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">Update Password</button>\n      </div>\n    </div>\n\n    <div style=\"display: none;\" class=\"uk-card uk-card-default uk-margin\" *ngIf=\"!walletService.isLedgerWallet()\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Backup Wallet</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p *ngIf=\"wallet.locked && wallet.type === 'seed'\">\n          <span uk-icon=\"icon: lock;\"></span> Unlock wallet to access the secret recovery seed/mnemonic.\n        </p>\n        <p *ngIf=\"wallet.locked && (wallet.type === 'privateKey' || wallet.type === 'expandedKey')\">\n          <span uk-icon=\"icon: lock;\"></span> Unlock wallet to access the private key.\n        </p>\n        <p *ngIf=\"!wallet.locked && wallet.type === 'seed'\">\n          To backup your wallet's secret recovery mnemonic, <a [title]=\"('configure-wallet.new-wallet.copy-secret-recovery-mnemonic' | transloco)\" ngxClipboard [cbContent]=\"seedMnemonic()\" (cbOnSuccess)=\"notifications.sendSuccess('Wallet mnemonic copied to clipboard!')\" uk-tooltip>click here</a> to copy it to your clipboard.\n        </p>\n        <p *ngIf=\"!wallet.locked && wallet.type === 'seed'\">\n          To backup your wallet's secret recovery seed, <a [title]=\"( 'configure-wallet.new-wallet.copy-secret-recovery-seed' | transloco )\" ngxClipboard [cbContent]=\"wallet.seed\" (cbOnSuccess)=\"notifications.sendSuccess('Wallet seed copied to clipboard!')\" uk-tooltip>click here</a> to copy it to your clipboard.<br>\n        </p>\n        <p *ngIf=\"!wallet.locked && (wallet.type === 'privateKey' || wallet.type === 'expandedKey')\">\n          To backup your wallet account's private key, <a title=\"Copy Private Key\" ngxClipboard [cbContent]=\"wallet.seed\" (cbOnSuccess)=\"notifications.sendSuccess('Private Key copied to clipboard!')\" uk-tooltip>click here</a> to copy it to your clipboard.<br>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"!walletService.isLedgerWallet()\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Export Nault File</h3>\n      </div>\n      <ng-container *ngIf=\"wallet.locked else walletUnlocked\">\n        <div class=\"uk-card-body\">\n          <span uk-icon=\"icon: lock;\"></span> Unlock wallet to access the export tool.\n        </div>\n      </ng-container>\n      <ng-template #walletUnlocked>\n        <ng-container *ngIf=\"wallet.password else walletHasNoPassword\">\n          <div class=\"uk-card-body\">\n            <!-- Use this export tool to simplify wallet transfer to other devices. -->\n            <!-- <br> -->\n            Your data is encrypted with your wallet's password, and then can be imported into Nault on any device.\n            <br>\n            <br>\n            <div *ngIf=\"showQRExport\" uk-grid>\n      \n              <div class=\"uk-width-1-1@s uk-width-1-2@m uk-width-1-3@l\">\n                <img [src]=\"QRExportImg\" alt=\"QR code\" style=\"border-radius: 6px; max-width: 200px;\">\n              </div>\n              <div class=\"uk-width-1-1@s uk-width-1-2@m uk-width-2-3@l\">\n                <br>\n                Scan QR code on any device to import Nault wallet.<br>\n                <br>\n                <!-- You can also import your wallet by using the URL below. -->\n                <!-- <br><br> -->\n                <input type=\"text\" class=\"uk-input\" style=\"max-width: 750px;\" value=\"{{ QRExportUrl }}\">\n                <div class=\"nlt-button-group uk-margin-small-top\">\n                  <button ngxClipboard [cbContent]=\"QRExportUrl\" (cbOnSuccess)=\"notifications.sendSuccess('Wallet export copied to clipboard!')\" class=\"uk-button uk-button-secondary\" style=\"margin-left: 0;\">Copy Clipboard</button>\n                  <button (click)=\"exportToFile()\" class=\"uk-button uk-button-primary\">Download File</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\" *ngIf=\"!showQRExport\">\n            <button (click)=\"exportWallet()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">Export Wallet</button>\n          </div>\n        </ng-container>\n        <ng-template #walletHasNoPassword>\n          <div class=\"uk-card-body\">\n            You need to set a secure wallet password before you can use this export tool.\n          </div>\n        </ng-template>\n      </ng-template>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Export Transaction History</h3>\n      </div>\n      <div *ngIf=\"!csvExportStarted\" class=\"uk-card-body\">\n        <p>\n          Use this tool to export the transaction history of a specific account as a CSV file.\n        </p>\n      </div>\n      <div *ngIf=\"csvExportStarted\" class=\"uk-card-body\">\n        <p>\n          Due to limitations in backend servers, you can only request {{transactionHistoryLimit}} transactions per export.<br>\n          However, you can use an offset of X to continue exporting from (X + 1). Another way is connecting Nault to a <a routerLink=\"/configure-app\" routerLinkActive=\"active\">custom server</a> for unlimited history.<br>\n        </p>\n        <div uk-grid>\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"account\">Account</label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" id=\"account\" [(ngModel)]=\"csvAccount\">\n                    <option *ngFor=\"let account of accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | rai: 'mnano,true' | amountsplit: 0 }}{{ account.balance | rai: 'mnano,true' | amountsplit: 1 }} XNO)</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"tx-count\">Transaction Limit <span uk-icon=\"icon: info;\" uk-tooltip title=\"Maximum number of transactions to export. Blank or 0 equals unlimited but only effective if using a custom server.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input [(ngModel)]=\"csvCount\" class=\"uk-input uk-margin-small-bottom {{invalidCsvCount ? 'uk-form-danger':''}}\" id=\"tx-count\" type=\"text\" (ngModelChange)=\"csvCountChange(csvCount)\" placeholder=\"\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"tx-order\">Transaction Order</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedOrder\" id=\"tx-order\">\n                      <option *ngFor=\"let option of orderOptions\" [ngValue]=\"option.value\">{{ option.name }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"tx-offset\">Offset (optional) <span uk-icon=\"icon: info;\" uk-tooltip title=\"Start the export after this index. 10 means starting at transaction 11. Blank or 0 equals no offset.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input [(ngModel)]=\"csvOffset\" class=\"uk-input uk-margin-small-bottom {{invalidCsvOffset ? 'uk-form-danger':''}}\" id=\"tx-offset\" type=\"text\" (ngModelChange)=\"csvOffsetChange(csvOffset)\" placeholder=\"\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n        <button *ngIf=\"!csvExportStarted\" class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m uk-float-right\" type=\"button\" [disabled]=\"!settings.settings.serverAPI\" (click)=\"csvInit()\">{{settings.settings.serverAPI ? 'GET STARTED':'NOT AVAILABLE IN OFFLINE MODE'}}</button>\n        <button *ngIf=\"csvExportStarted && !exportingCsv\" class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m uk-float-right\" type=\"button\" [disabled]=\"!exportEnabled\" (click)=\"exportToCsv()\">{{exportEnabled ? 'EXPORT HISTORY':'COOLDOWN'}}</button>\n        <button *ngIf=\"csvExportStarted && exportingCsv\" class=\"uk-button uk-button-secondary uk-disabled uk-width-1-1@s uk-width-auto@m uk-float-right nlt-icon-button nlt-icon-button-inline\" type=\"button\"><span class=\"uk-margin-right\" uk-spinner=\"ratio: 0.5;\"></span> FETCHING HISTORY...</button>\n      </div>\n    </div>\n\n  </div>\n</div>\n","<div uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2>Multi Signature</h2>\n\n    <div uk-grid class=\"uk-animation-slide-left-small\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-header uk-form-horizontal\">\n            <h4>1 - Create a Multisig Address</h4>\n            <p>Add 2 or more nano addresses to form a new multisig address.<br>\n            If you (or the participants) don't have any, they can be generated with the <a routerLink=\"/keygenerator\" class=\"name\">Keypair Generator</a> and stored safely.\n            </p>\n            <div class=\"details-header advanced-options-link\" (click)=\"showAdvancedOptions = !showAdvancedOptions\">\n              MORE INFO\n              <div [class]=\"['chevron', ( showAdvancedOptions ? 'chevron-up' : 'chevron-down' )]\"></div>\n            </div>\n            <div *ngIf=\"showAdvancedOptions\">\n              <p>To simulate \"m of n\" for 3 participants the following sharing scheme can be used:</p>\n              <ul>\n                <li>User 1 generates key A and B. Shares key A with user 2 and key B with user 3.</li>\n                <li>User 2 generates key C and shares it with user 3.</li>\n                <li>User 1 will own A and B. User 2 will own A and C. User 3 will own B and C.</li>\n              </ul>\n              <p>By doing this you ensure no single user can take the funds but also ensure that one user can lose both their keys and still allow full recovery among the remaining two.</p>\n            </div>\n\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">Participating Addresses <span uk-icon=\"icon: info;\" uk-tooltip title=\"Addresses to participate in the multisig address\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <ul class=\"uk-list uk-list-striped\">\n                    <li *ngFor=\"let account of storedAccounts\">\n                      <div uk-grid>\n                        <div class=\"uk-width-5-6 uk-text-truncate\">\n                          <ng-container>\n                            <div class=\"uk-text-truncate\"><app-nano-account-id [accountID]=\"account\" middle=\"on\" class=\"nano-address-monospace\"></app-nano-account-id></div>\n                          </ng-container>\n                        </div>\n                        <div class=\"action-remove uk-width-1-6 uk-text-right\">\n                          <a (click)=\"removeSelectedAccount(account)\" class=\"uk-text-danger\" title=\"Remove From List\" uk-tooltip><span uk-icon=\"icon: close;\"></span></a>\n                        </div>\n                      </div>\n                    </li>\n                    <li>\n                      <div *ngIf=\"!showAddBox\" class=\"add-button uk-width-auto\" (click)=\"setFocus()\"><span uk-icon=\"icon: plus\"></span> Add address</div>\n                      <div *ngIf=\"showAddBox\" class=\"uk-inline uk-width-1-1\">\n                        <a class=\"uk-form-icon uk-form-icon-flip second-icon\" uk-icon=\"icon: plus\" (click)=\"addAccount()\" uk-tooltip title=\"Add address\"></a>\n                        <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('accountAdd','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                        <input (input)=\"validateAccountAdd()\" (keyup.enter)=\"addAccount()\" [(ngModel)]=\"accountAdd\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-danger': accountAddStatus === 0 }\" type=\"text\" placeholder=\"nano_1abc...\" autocomplete=\"off\" #accountAddFocus>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">Multisig Address <span uk-icon=\"icon: info;\" uk-tooltip title=\"Final account to use with multisig transactions\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1 multisig-result\">\n                    <div uk-grid>\n                      <div *ngIf=\"createdMultisig == ''\" class=\"uk-margin-small-bottom\">...</div>\n                      <div *ngIf=\"createdMultisig !== ''\">\n                        <div class=\"uk-margin-small-bottom\"><app-nano-account-id [accountID]=\"createdMultisig\" middle=\"on\" class=\"nano-address-monospace\"></app-nano-account-id></div>\n                        <a title=\"Copy Address To Clipboard\" ngxClipboard [cbContent]=\"createdMultisig\" (cbOnSuccess)=\"copied()\" uk-tooltip>Copy address to clipboard</a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <div *ngIf=\"createdMultisig !== ''\" class=\"uk-alert uk-alert-danger nlt-inline-alert\">\n                <div class=\"icon-column\">\n                  <div uk-icon=\"icon: warning; ratio: 2;\"></div>\n                </div>\n                <p>\n                  Before funding the multisig address, make sure that you added the correct participating addresses above.<br>\n                </p>\n              </div>\n            </div>\n            \n            <div class=\"uk-inline uk-width-1-1\">\n              <div uk-grid>\n                <div class=\"uk-width-1-3@l uk-width-1-1\">\n                  <button class=\"uk-button uk-button-primary uk-width-1-1\" [disabled]=\"storedAccounts.length < 2\" (click)=\"generateMultisig()\">GENERATE MULTISIG</button>\n                </div>\n                <div class=\"uk-width-1-3@l uk-width-1-1\">\n                  <button class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"reset()\">RESET</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"uk-card uk-card-default\" style=\"margin-top: 20px;\">\n          <div class=\"uk-card-header uk-form-horizontal\">\n            <h4>2 - Create a Multisig Transaction</h4>\n            <p>Create a SEND, RECEIVE or CHANGE block using the Remote Signing method.</p>\n            \n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">Multisig Address</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('multisig','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                    <a *ngIf=\"multisigAccount !== ''\" class=\"uk-form-icon uk-form-icon-flip second-icon\" ngxClipboard [cbContent]=\"multisigAccount\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account\" uk-tooltip></a>\n                    <input (input)=\"validateMultisig()\" (keyup.enter)=\"navigateAccount()\" [(ngModel)]=\"multisigAccount\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': multisigAccountStatus === 1, 'uk-form-danger': multisigAccountStatus === 0 }\" type=\"text\" placeholder=\"nano_1abc...\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"uk-inline uk-width-1-1\">\n              <div uk-grid>\n                <div class=\"uk-width-1-3@l uk-width-1-1\">\n                  <button class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"navigateAccount()\">CREATE BLOCK</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"uk-card-header uk-form-horizontal\">\n            <h4>3 - Multisig for Participants</h4>\n            <p>If multiple co-signers, enter the data that was shared with you to participate in the signing procedure.</p>\n            \n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">Signing Data</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input (input)=\"validateUnsigned(unsignedBlock)\" (keyup.enter)=\"navigateBlock(unsignedBlock)\" [(ngModel)]=\"unsignedBlock\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': unsignedStatus === 1, 'uk-form-danger': unsignedStatus === 0 }\" type=\"text\" placeholder=\"nanosign:{abc..}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"uk-inline uk-width-1-1\">\n              <div uk-grid>\n                <div class=\"uk-width-1-3@l uk-width-1-1\">\n                  <button class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"navigateBlock(unsignedBlock)\">SIGN</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UtilService } from '../../services/util.service';\nimport { Router } from '@angular/router';\nimport { NotificationService } from '../../services/notification.service';\nimport { RemoteSignService } from '../../services/remote-sign.service';\nimport { QrModalService } from '../../services/qr-modal.service';\nimport { MusigService } from '../../services/musig.service';\n\n@Component({\n  selector: 'app-multisig',\n  templateUrl: './multisig.component.html',\n  styleUrls: ['./multisig.component.css']\n})\nexport class MultisigComponent implements OnInit {\n  accountAdd = '';\n  showAddBox = false;\n  storedAccounts = [];\n  accountAddStatus: number = null;\n  createdMultisig = '';\n  multisigAccount = '';\n  multisigAccountStatus: number = null;\n  unsignedBlock = '';\n  unsignedStatus: number = null;\n  showAdvancedOptions = false; // if displaying more info\n  wasmErrors = ['No error', 'Internal error', 'Invalid parameter(s)', 'Invalid Participant Input'];\n\n  constructor(\n    private util: UtilService,\n    private router: Router,\n    private notificationService: NotificationService,\n    private remoteSignService: RemoteSignService,\n    private qrModalService: QrModalService,\n    private musigService: MusigService,\n  ) { }\n\n  @ViewChild('accountAddFocus') _el: ElementRef;\n\n  async ngOnInit() {\n  }\n\n  copied() {\n    this.notificationService.removeNotification('success-copied');\n    this.notificationService.sendSuccess(`Successfully copied to clipboard!`, { identifier: 'success-copied' });\n  }\n\n  setFocus() {\n    this.showAddBox = true;\n    // Auto set focus to the box (but must be rendered first!)\n    setTimeout(() => { this._el.nativeElement.focus(); }, 200);\n  }\n\n  addAccount() {\n    if (this.accountAddStatus !== 1) {\n      this.notificationService.removeNotification('account-invalid');\n      this.notificationService.sendWarning('Invalid nano address!', {identifier: 'account-invalid'});\n      return;\n    }\n    if (this.storedAccounts.includes(this.accountAdd.replace('xrb_', 'nano_').toLocaleLowerCase())) {\n      this.notificationService.removeNotification('account-added');\n      this.notificationService.sendWarning('Account already added!', {identifier: 'account-added'});\n      return;\n    }\n    this.storedAccounts.push(this.accountAdd.replace('xrb_', 'nano_').toLocaleLowerCase());\n    this.accountAdd = '';\n    this.accountAddStatus = null;\n    this.showAddBox = false;\n    this.createdMultisig = ''; // invalidate previous multisig to avoid mistakes\n  }\n\n  removeSelectedAccount(account) {\n    this.storedAccounts.splice(this.storedAccounts.indexOf(account), 1);\n    this.createdMultisig = ''; // invalidate previous multisig to avoid mistakes\n  }\n\n  generateMultisig() {\n    this.createdMultisig = this.musigService.runAggregate(this.storedAccounts, null)?.multisig;\n  }\n\n  reset() {\n    this.accountAdd = '';\n    this.storedAccounts = [];\n    this.accountAddStatus = null;\n    this.createdMultisig = '';\n    this.showAddBox = false;\n  }\n\n  validateAccountAdd() {\n    if (this.accountAdd === '') {\n      this.accountAddStatus = null;\n      return false;\n    }\n    if (this.util.account.isValidAccount(this.accountAdd)) {\n      this.accountAddStatus = 1;\n      this.addAccount();\n      return true;\n    } else {\n      this.accountAddStatus = 0;\n      return false;\n    }\n  }\n\n  validateMultisig() {\n    if (this.multisigAccount === '') {\n      this.multisigAccountStatus = null;\n      return false;\n    }\n    if (this.util.account.isValidAccount(this.multisigAccount)) {\n      this.multisigAccountStatus = 1;\n      return true;\n    } else {\n      this.multisigAccountStatus = 0;\n      return false;\n    }\n  }\n\n  validateUnsigned(string) {\n    if (string === '') {\n      this.unsignedStatus = null;\n      return false;\n    }\n    let url = null;\n    if (string.startsWith('nanosign:')) {\n      url = new URL(string);\n    }\n    if (url && this.remoteSignService.checkSignBlock(url.pathname)) {\n      this.unsignedStatus = 1;\n    } else {\n      this.unsignedStatus = 0;\n    }\n  }\n\n  navigateAccount() {\n    if (this.validateMultisig()) {\n      this.router.navigate(['account', this.multisigAccount], { queryParams: {sign: 1}});\n    } else {\n      this.notificationService.sendWarning('Invalid nano account!');\n    }\n  }\n\n  navigateBlock(block) {\n    let badScheme = false;\n\n    if (block.startsWith('nanosign:') || block.startsWith('nanoprocess:')) {\n      const url = new URL(block);\n      if (url.protocol === 'nanosign:') {\n        this.remoteSignService.navigateSignBlock(url);\n      } else if (url.protocol === 'nanoprocess:') {\n        this.remoteSignService.navigateProcessBlock(url);\n      } else {\n        badScheme = true;\n      }\n    } else {\n      badScheme = true;\n    }\n    if (badScheme) {\n      this.notificationService.sendWarning('Not a recognized block format!', { length: 5000 });\n    }\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'accountAdd':\n          this.accountAdd = data.content;\n          this.validateAccountAdd();\n          break;\n        case 'multisig':\n          this.multisigAccount = data.content;\n          this.validateMultisig();\n          break;\n      }\n    }, () => {}\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NotificationService} from '../../services/notification.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n\n  notificationLength = 5000;\n\n  notifications: any[] = [];\n  constructor(private notificationService: NotificationService) { }\n\n  ngOnInit() {\n    this.notificationService.notifications$.subscribe(notification => {\n      if (!notification) {\n        return; // Default value\n      }\n\n      // Check the options\n      const length = notification.options.hasOwnProperty('length') ? notification.options.length : this.notificationLength;\n      const identifier = notification.options.identifier || null;\n\n      // Stop duplicates\n      if (identifier) {\n        const existingNotification = this.notifications.find(n => n.identifier === identifier);\n        if (existingNotification) {\n          return;\n        }\n      }\n\n      const newNotification = {\n        type: notification.type,\n        message: notification.message,\n        cssClass: this.getCssClass(notification.type),\n        identifier: identifier,\n        length: length,\n      };\n\n      this.notifications.push(newNotification);\n      if (length) {\n        setTimeout(() => this.removeNotification(newNotification), length);\n      }\n    });\n\n    this.notificationService.removeNotification$.subscribe(identifier => {\n      if (!identifier) {\n        return;\n      }\n\n      const existingNotification = this.notifications.find(n => n.identifier === identifier);\n      if (existingNotification) {\n        this.removeNotification(existingNotification);\n      }\n    });\n  }\n\n  private removeNotification(notification) {\n    const existingNotification = this.notifications.findIndex(n => n === notification);\n    if (existingNotification !== -1) {\n      this.notifications.splice(existingNotification, 1);\n    }\n  }\n\n  private getCssClass(type) {\n    switch (type) {\n      default:\n      case 'info': return 'uk-alert-primary';\n      case 'success': return 'uk-alert-success';\n      case 'warning': return 'uk-alert-warning';\n      case 'error': return 'uk-alert-danger';\n    }\n  }\n\n}\n","<div class=\"notification-container\">\n  <div\n  \t*ngFor=\"let notification of notifications\"\n  \t[class]=\"['uk-alert', notification.cssClass]\"\n  \tclass=\"uk-animation-slide-bottom-small wallet-notification\"\n  \t(click)=\"removeNotification(notification)\"\n  \tuk-alert\n  >\n    <a class=\"uk-alert-close close-notification\" uk-close></a>\n    <p [innerHTML]=\"notification.message\"></p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as QRCode from 'qrcode';\n\n@Component({\n  selector: 'app-qr-generator',\n  templateUrl: './qr-generator.component.html',\n  styleUrls: ['./qr-generator.component.less']\n})\nexport class QrGeneratorComponent implements OnInit {\n  qrCodeImageBlock = null;\n  input = '';\n  width = 300;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  async generateQR() {\n    if (this.input === '') {\n      this.qrCodeImageBlock = null;\n      return;\n    }\n    // Gradually make QR larger when complexity increases\n    this.width = Math.min(Math.max(300, Math.round(Math.log2(this.input.length) * 120 - 300)), 800);\n    const qrCode = await QRCode.toDataURL(this.input, { errorCorrectionLevel: 'M', scale: 16 });\n    this.qrCodeImageBlock = qrCode;\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">QR Generator</h2>\n\n    <div class=\"uk-card uk-card-default\">\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1\">\n            <textarea [(ngModel)]=\"input\" rows=\"5\" class=\"uk-input uk-margin-small-bottom\" placeholder=\"Text to be converted into QR\" (input)=\"generateQR()\" maxlength=\"2000\"></textarea>\n          </div>\n          <div class=\"block-qr\" [ngStyle]=\"{'width': width+'px'}\">\n            <img *ngIf=\"qrCodeImageBlock\" [src]=\"qrCodeImageBlock\" alt=\"QR code\">\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  </div>\n  ","import { Component, Input, OnInit } from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport { NotificationService } from '../../services/notification.service';\nimport { BarcodeFormat } from '@zxing/library';\nimport { BehaviorSubject } from 'rxjs';\nimport { UtilService } from '../../services/util.service';\nimport * as bip39 from 'bip39';\n\nexport type QRType = 'account' | 'hash' | 'mnemonic' | 'generic';\n\n@Component({\n  selector: 'app-qr-modal',\n  templateUrl: './qr-modal.component.html',\n  styleUrls: ['./qr-modal.component.css']\n})\nexport class QrModalComponent implements OnInit {\n\n  @Input() title = 'QR Scanner';\n  @Input() reference: string;\n  @Input() type: QRType;\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n  nano_scheme = /^(xrb|nano|nanorep|nanoseed|nanokey):.+$/g;\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.QR_CODE,\n  ];\n\n  hasDevices: boolean;\n  hasPermission: boolean;\n\n  torchEnabled = false;\n  torchAvailable$ = new BehaviorSubject<boolean>(false);\n  tryHarder = false;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private notifcationService: NotificationService,\n    private util: UtilService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n    this.hasDevices = Boolean(devices && devices.length);\n  }\n\n  onCodeResult(resultString: string) {\n    let type: QRType = null;\n    let content = '';\n    // account\n    if (this.util.account.isValidAccount(resultString)) {\n      type = 'account';\n      content = resultString;\n    } else if (bip39.validateMnemonic(resultString)) {\n      type = 'mnemonic';\n      content = resultString;\n    } else if (resultString.length === 128) {\n      // includes deterministic R value material which we ignore\n      resultString = resultString.substring(0, 64);\n      if (this.util.nano.isValidHash(resultString)) {\n        type = 'hash';\n        content = resultString;\n      }\n    } else if (this.util.nano.isValidHash(resultString)) {\n      type = 'hash';\n      content = resultString;\n    } else if (this.nano_scheme.test(resultString)) {\n      // This is a valid Nano scheme URI\n      const url = new URL(resultString);\n      content = url.pathname;\n\n      if (['nano:', 'nanorep:', 'xrb:'].includes(url.protocol) && this.util.account.isValidAccount(url.pathname)) {\n        type = 'account';\n      } else if (['nanoseed:', 'nanokey:'].includes(url.protocol) && this.util.nano.isValidHash(url.pathname)) {\n        type = 'hash';\n      }\n    } else {\n      type = 'generic';\n      content = resultString;\n    }\n\n    // check that the result is valid and matched the requested type\n    if (type != null && type === this.type || this.type === 'generic') {\n      this.activeModal.close({reference: this.reference, content: content});\n    } else {\n      this.notifcationService.sendWarning('This QR code is not recognized.', { length: 5000, identifier: 'qr-not-recognized' });\n      return;\n    }\n  }\n\n  onDeviceSelectChange(selected: string) {\n    const device = this.availableDevices.find(x => x.deviceId === selected);\n    this.currentDevice = device || null;\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false);\n  }\n\n  toggleTorch(): void {\n    this.torchEnabled = !this.torchEnabled;\n  }\n\n  toggleTryHarder(): void {\n    this.tryHarder = !this.tryHarder;\n  }\n}\n","<div role=\"document\" class=\"modal-dialog scanner-modal-sub\">\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <h4 class=\"modal-title\">Scan a QR</h4>\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close (click)=\"activeModal.dismiss('QR scanner dismissed')\"></button>\n        </div>\n        <div class=\"modal-body\">\n            <ng-content></ng-content>\n            <div uk-grid>\n                <div class=\"uk-width-1-1 uk-animation-slide-left-small\">\n                  <div uk-grid class=\"uk-margin-top\">\n                    <div class=\"uk-width-1-1@m\" [hidden]=\"!hasDevices\">\n                      <div class=\"uk-width-1-1\">\n                        <div class=\"uk-form-horizontal\">\n              \n                          <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\">Device</label>\n                            <div class=\"uk-form-controls\">\n                              <select class=\"uk-select\" (change)=\"onDeviceSelectChange($event.target.value)\">\n                                <option value=\"\" [selected]=\"!currentDevice\">No Device Selected</option>\n                                <option *ngFor=\"let device of availableDevices\" [value]=\"device.deviceId\"\n                                  [selected]=\"currentDevice && device.deviceId === currentDevice.deviceId\">{{device.label}}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n              \n                      <div class=\"uk-card uk-card-default uk-card-small\">\n                        <div class=\"uk-card-body uk-center\">\n                          <zxing-scanner [torch]=\"torchEnabled\" [(device)]=\"currentDevice\" (scanSuccess)=\"onCodeResult($event)\"\n                            [formats]=\"formatsEnabled\" [tryHarder]=\"tryHarder\" (permissionResponse)=\"onHasPermission($event)\"\n                            (camerasFound)=\"onCamerasFound($event)\" (torchCompatible)=\"onTorchCompatible($event)\"></zxing-scanner>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div *ngIf=\"hasPermission === undefined && hasDevices === undefined\" class=\"uk-alert uk-alert-info\">\n                <b>Waiting for permissions.</b><br>\n                If your device does not has cameras, no permissions will be asked.\n              </div>\n              \n              <div *ngIf=\"hasPermission === false\" class=\"uk-alert uk-alert-danger\">\n                <b>You denied the camera permission.</b><br>\n                We can't scan anything without it. 😪\n              </div>\n              \n              <div *ngIf=\"hasDevices === null || hasPermission === null\" class=\"uk-alert uk-alert-danger\">\n                <b>Couldn't check for devices.</b><br>\n                This may be caused by some security error.\n              </div>\n              \n              <div *ngIf=\"hasDevices === false\" class=\"uk-alert uk-alert-danger\">\n                <b>No devices were found.</b><br>\n                I believe your device has no media devices attached to.\n              </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { NotificationService } from 'app/services';\nimport { BehaviorSubject } from 'rxjs';\nimport { DeeplinkService } from '../../services/deeplink.service';\n\n@Component({\n  selector: 'app-qr-scan',\n  templateUrl: './qr-scan.component.html',\n  styleUrls: ['./qr-scan.component.css']\n})\nexport class QrScanComponent implements OnInit {\n  [x: string]: any;\n\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.QR_CODE,\n  ];\n\n  hasDevices: boolean;\n  hasPermission: boolean;\n\n  qrResultString: string;\n\n  torchEnabled = false;\n  torchAvailable$ = new BehaviorSubject<boolean>(false);\n  tryHarder = false;\n\n  constructor(\n    private deeplinkService: DeeplinkService,\n    private notificationService: NotificationService,\n  ) { }\n\n  ngOnInit(): void { }\n\n  clearResult(): void {\n    this.qrResultString = null;\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n    this.hasDevices = Boolean(devices && devices.length);\n  }\n\n  onCodeResult(resultString: string) {\n    this.qrResultString = resultString;\n\n    if (!this.deeplinkService.navigate(resultString)) {\n      this.notificationService.sendWarning('This QR code is not recognized.', { length: 5000, identifier: 'qr-not-recognized' });\n    }\n  }\n\n  onDeviceSelectChange(selected: string) {\n    const device = this.availableDevices.find(x => x.deviceId === selected);\n    this.currentDevice = device || null;\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false);\n  }\n\n  toggleTorch(): void {\n    this.torchEnabled = !this.torchEnabled;\n  }\n\n  toggleTryHarder(): void {\n    this.tryHarder = !this.tryHarder;\n  }\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">Scan QR Code</h2>\n\n    <div uk-grid class=\"uk-margin-top\">\n\n      <div class=\"uk-width-1-1@m\" [hidden]=\"!hasDevices\">\n\n        <div class=\"uk-width-1-1\">\n          <div class=\"uk-form-horizontal\">\n\n            <div class=\"uk-margin\">\n              <label class=\"uk-form-label\">Device</label>\n              <div class=\"uk-form-controls\">\n                <select class=\"uk-select\" (change)=\"onDeviceSelectChange($event.target.value)\">\n                  <option value=\"\" [selected]=\"!currentDevice\">No Device Selected</option>\n                  <option *ngFor=\"let device of availableDevices\" [value]=\"device.deviceId\"\n                    [selected]=\"currentDevice && device.deviceId === currentDevice.deviceId\">{{device.label}}</option>\n                </select>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div class=\"uk-card uk-card-default uk-card-small\">\n          <div class=\"uk-card-body uk-center\">\n            <zxing-scanner [torch]=\"torchEnabled\" [(device)]=\"currentDevice\" (scanSuccess)=\"onCodeResult($event)\"\n              [formats]=\"formatsEnabled\" [tryHarder]=\"tryHarder\" (permissionResponse)=\"onHasPermission($event)\"\n              (camerasFound)=\"onCamerasFound($event)\" (torchCompatible)=\"onTorchCompatible($event)\"></zxing-scanner>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"hasPermission === undefined && hasDevices === undefined\">\n  <div class=\"uk-alert uk-alert-info nlt-inline-alert\">\n    <p>\n      <b>Waiting for permissions.</b><br>\n      If your device does not has cameras, no permissions will be asked.\n    </p>\n  </div>\n</div>\n\n<div *ngIf=\"hasPermission === false\">\n  <div class=\"uk-alert uk-alert-danger nlt-inline-alert\">\n    <p>\n      <b>You denied the camera permission.</b><br>\n      We can't scan anything without it. 😪\n    </p>\n  </div>\n</div>\n\n<div *ngIf=\"hasDevices === null || hasPermission === null\">\n  <div class=\"uk-alert uk-alert-danger nlt-inline-alert\">\n    <p>\n      <b>Couldn't check for devices.</b><br>\n      This may be caused by some security error.\n    </p>\n  </div>\n</div>\n\n<div *ngIf=\"hasDevices === false\">\n  <div class=\"uk-alert uk-alert-danger nlt-inline-alert\">\n    <p>\n      <b>No devices were found.</b><br>\n      I believe your device has no media devices attached to.\n    </p>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {ChildActivationEnd, Router} from '@angular/router';\nimport {WalletService, WalletAccount} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {ModalService} from '../../services/modal.service';\nimport {ApiService} from '../../services/api.service';\nimport {UtilService} from '../../services/util.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {NanoBlockService} from '../../services/nano-block.service';\nimport {PriceService} from '../../services/price.service';\nimport {WebsocketService} from '../../services/websocket.service';\nimport * as QRCode from 'qrcode';\nimport BigNumber from 'bignumber.js';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-receive',\n  templateUrl: './receive.component.html',\n  styleUrls: ['./receive.component.css']\n})\n\n\n\nexport class ReceiveComponent implements OnInit, OnDestroy {\n  nano = 1000000000000000000000000;\n  accounts = this.walletService.wallet.accounts;\n\n  timeoutIdClearingRecentlyCopiedState: any = null;\n  mobileTransactionMenuModal: any = null;\n  merchantModeModal: any = null;\n  mobileTransactionData: any = null;\n\n  selectedAccountAddressBookName = '';\n  pendingAccountModel = '0';\n  pendingBlocks = [];\n  pendingBlocksForSelectedAccount = [];\n  qrCodeImage = null;\n  qrAccount = '';\n  qrAmount: BigNumber = null;\n  recentlyCopiedAccountAddress = false;\n  walletAccount: WalletAccount = null;\n  selAccountInit = false;\n  loadingIncomingTxList = false;\n  amountNano = '';\n  amountFiat = '';\n  validNano = true;\n  validFiat = true;\n  qrSuccessClass = '';\n\n  inMerchantMode = false;\n  inMerchantModeQR = false;\n  inMerchantModePaymentComplete = false;\n  merchantModeRawRequestedQR: BigNumber = null;\n  merchantModeRawRequestedTotal: BigNumber = null;\n  merchantModeRawReceivedTotal: BigNumber = null;\n  merchantModeRawReceivedTotalHiddenRaw: BigNumber = null;\n  merchantModeSeenBlockHashes = {};\n  merchantModePrompts = [];\n  merchantModeTransactionHashes = [];\n\n  routerSub = null;\n\n  constructor(\n    private route: Router,\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    private addressBook: AddressBookService,\n    public modal: ModalService,\n    private api: ApiService,\n    private workPool: WorkPoolService,\n    public settings: AppSettingsService,\n    private nanoBlock: NanoBlockService,\n    public price: PriceService,\n    private websocket: WebsocketService,\n    private util: UtilService,\n    private translocoService: TranslocoService) { }\n\n  async ngOnInit() {\n    const UIkit = window['UIkit'];\n\n    const mobileTransactionMenuModal = UIkit.modal('#mobile-transaction-menu-modal');\n    this.mobileTransactionMenuModal = mobileTransactionMenuModal;\n\n    const merchantModeModal = UIkit.modal('#merchant-mode-modal');\n    this.merchantModeModal = merchantModeModal;\n\n    this.routerSub = this.route.events.subscribe(event => {\n      if (event instanceof ChildActivationEnd) {\n        this.mobileTransactionMenuModal.hide();\n        this.merchantModeModal.hide();\n      }\n    });\n\n    // Update selected account if changed in the sidebar\n    this.walletService.wallet.selectedAccount$.subscribe(async acc => {\n      if (this.selAccountInit) {\n        this.pendingAccountModel = acc ? acc.id : '0';\n        this.onSelectedAccountChange(this.pendingAccountModel);\n      }\n      this.selAccountInit = true;\n    });\n\n    this.walletService.wallet.pendingBlocksUpdate$.subscribe(async receivableBlockUpdate => {\n      if (receivableBlockUpdate === null) {\n        return;\n      }\n\n      this.updatePendingBlocks();\n    });\n\n    await this.updatePendingBlocks();\n\n    // Set the account selected in the sidebar as default\n    if (this.walletService.wallet.selectedAccount !== null) {\n      this.pendingAccountModel = this.walletService.wallet.selectedAccount.id;\n      this.onSelectedAccountChange(this.pendingAccountModel);\n    }\n\n    // Listen as new transactions come in. Ignore the latest transaction that is already present on page load.\n    const latest = this.websocket.newTransactions$.getValue();\n    this.websocket.newTransactions$.subscribe(async (transaction) => {\n      if (transaction && latest !== transaction) {\n        const rawAmount = new BigNumber(transaction.amount);\n        if (transaction.block.link_as_account === this.qrAccount && rawAmount.gte(this.qrAmount || 0)) {\n          this.showQrConfirmation();\n          setTimeout(() => this.resetAmount(), 500);\n        }\n        if ( (this.inMerchantModeQR === true) && (transaction.block.link_as_account === this.qrAccount) ) {\n          this.onMerchantModeReceiveTransaction(transaction);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.mobileTransactionMenuModal.hide();\n    this.merchantModeModal.hide();\n    if (this.routerSub) {\n      this.routerSub.unsubscribe();\n    }\n  }\n\n  async updatePendingBlocks() {\n    this.pendingBlocks =\n      this.walletService.wallet.pendingBlocks\n        .map(\n          (pendingBlock) =>\n            Object.assign(\n              {},\n              pendingBlock,\n              {\n                account: pendingBlock.source,\n                destination: pendingBlock.account,\n                source: null,\n                addressBookName: (\n                    this.addressBook.getAccountName(pendingBlock.source)\n                  || this.getAccountLabel(pendingBlock.source, null)\n                ),\n                destinationAddressBookName: (\n                    this.addressBook.getAccountName(pendingBlock.account)\n                  || this.getAccountLabel(pendingBlock.account, 'Account')\n                ),\n                isReceivable: true,\n                local_time_string: '',\n              }\n            )\n        )\n        .sort(\n          (a, b) =>\n            a.destinationAddressBookName.localeCompare(b.destinationAddressBookName)\n        );\n\n    this.filterPendingBlocksForDestinationAccount(this.pendingAccountModel);\n  }\n\n  filterPendingBlocksForDestinationAccount(selectedAccountID) {\n    if (selectedAccountID === '0') {\n      // Blocks for all accounts\n      this.pendingBlocksForSelectedAccount = [...this.pendingBlocks];\n      return;\n    }\n\n    // Blocks for selected account\n    this.pendingBlocksForSelectedAccount =\n      this.pendingBlocks.filter(block => (block.destination === selectedAccountID));\n\n    if (this.inMerchantModeQR === true) {\n      this.pendingBlocksForSelectedAccount.forEach(\n        (pendingBlock) => {\n          this.onMerchantModeReceiveTransaction(pendingBlock);\n        }\n      )\n    }\n  }\n\n  showMobileMenuForTransaction(transaction) {\n    this.notificationService.removeNotification('success-copied');\n\n    this.mobileTransactionData = transaction;\n    this.mobileTransactionMenuModal.show();\n  }\n\n  getAccountLabel(accountID, defaultLabel) {\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === accountID);\n\n    if (walletAccount == null) {\n      return defaultLabel;\n    }\n\n    return (this.translocoService.translate('general.account') + ' #' + walletAccount.index);\n  }\n\n  async getPending() {\n    // clear the list of pending blocks. Updated again with reloadBalances()\n    this.pendingBlocks = [];\n    this.pendingBlocksForSelectedAccount = [];\n    this.loadingIncomingTxList = true;\n    await this.walletService.reloadBalances();\n    this.loadingIncomingTxList = false;\n  }\n\n  async nanoAmountChange() {\n    if (!this.validateNanoAmount() || Number(this.amountNano) === 0) {\n      this.amountFiat = '';\n      this.changeQRAmount();\n      return;\n    }\n    const rawAmount = this.util.nano.mnanoToRaw(this.amountNano || 0);\n\n    // This is getting hacky, but if their currency is bitcoin, use 6 decimals, if it is not, use 2\n    const precision = this.settings.settings.displayCurrency === 'BTC' ? 1000000 : 100;\n\n    // Determine fiat value of the amount\n    const fiatAmount = this.util.nano.rawToMnano(rawAmount).times(this.price.price.lastPrice)\n      .times(precision).floor().div(precision).toNumber();\n\n    this.amountFiat = fiatAmount.toString();\n    this.changeQRAmount(rawAmount.toFixed());\n    this.validateFiatAmount();\n  }\n\n  async fiatAmountChange() {\n    if (!this.validateFiatAmount() || Number(this.amountFiat) === 0) {\n      this.amountNano = '';\n      this.changeQRAmount();\n      return;\n    }\n    const rawAmount = this.util.nano.mnanoToRaw(new BigNumber(this.amountFiat).div(this.price.price.lastPrice));\n    const nanoVal = this.util.nano.rawToNano(rawAmount).floor();\n    const rawRounded = this.util.nano.nanoToRaw(nanoVal);\n    const nanoAmount = this.util.nano.rawToMnano(rawRounded);\n\n    this.amountNano = nanoAmount.toFixed();\n    this.changeQRAmount(rawRounded.toFixed());\n    this.validateNanoAmount();\n  }\n\n  validateNanoAmount() {\n    if (!this.amountNano) {\n      this.validNano = true;\n      return true;\n    }\n    this.validNano = this.amountNano !== '-' && (this.util.account.isValidNanoAmount(this.amountNano) || Number(this.amountNano) === 0);\n    return this.validNano;\n  }\n\n  validateFiatAmount() {\n    if (!this.amountFiat) {\n      this.validFiat = true;\n      return true;\n    }\n    this.validFiat = this.util.string.isNumeric(this.amountFiat) && Number(this.amountFiat) >= 0;\n    return this.validFiat;\n  }\n\n  onSelectedAccountChange(accountID) {\n    this.selectedAccountAddressBookName = (\n        this.addressBook.getAccountName(accountID)\n      || this.getAccountLabel(accountID, 'Account')\n    );\n\n    this.changeQRAccount(accountID);\n    this.filterPendingBlocksForDestinationAccount(accountID);\n  }\n\n  async changeQRAccount(account) {\n    this.walletAccount = this.walletService.wallet.accounts.find(a => a.id === account) || null;\n    this.qrAccount = '';\n    let qrCode = null;\n    if (account.length > 1) {\n      this.qrAccount = account;\n      this.qrCodeImage = null;\n      qrCode = await QRCode.toDataURL(`nano:${account}${this.qrAmount ? `?amount=${this.qrAmount.toString(10)}` : ''}`, {scale: 7});\n    }\n    this.qrCodeImage = qrCode;\n  }\n\n  async changeQRAmount(raw?) {\n    this.qrAmount = null;\n    let qrCode = null;\n    if (raw) {\n      if (this.util.account.isValidAmount(raw)) {\n        this.qrAmount = raw;\n      }\n    }\n    if (this.qrAccount.length > 1) {\n      this.qrCodeImage = null;\n      qrCode = await QRCode.toDataURL(`nano:${this.qrAccount}${this.qrAmount ? `?amount=${this.qrAmount.toString(10)}` : ''}`, {scale: 7});\n      this.qrCodeImage = qrCode;\n    }\n  }\n\n  showQrConfirmation() {\n    this.qrSuccessClass = 'in';\n    setTimeout(() => { this.qrSuccessClass = 'out'; }, 7000);\n    setTimeout(() => { this.qrSuccessClass = ''; }, 12000);\n  }\n\n  resetAmount() {\n    this.amountNano = '';\n    this.amountFiat = '';\n    this.changeQRAmount();\n  }\n\n  onReceiveFundsPress(receivableTransaction) {\n    if (receivableTransaction.loading || receivableTransaction.received) {\n      return;\n    }\n\n    this.receiveReceivableBlock(receivableTransaction);\n  }\n\n  async receiveReceivableBlock(receivableBlock) {\n    const sourceBlock = receivableBlock.hash;\n\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === receivableBlock.destination);\n    if (!walletAccount) {\n      throw new Error(`Unable to find receiving account in wallet`);\n    }\n\n    if (this.walletService.isLocked()) {\n      const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n      if (wasUnlocked === false) {\n        return;\n      }\n    }\n    receivableBlock.loading = true;\n\n    const createdReceiveBlockHash =\n      await this.nanoBlock.generateReceive(walletAccount, sourceBlock, this.walletService.isLedgerWallet());\n\n    if (createdReceiveBlockHash) {\n      receivableBlock.received = true;\n      this.mobileTransactionMenuModal.hide();\n      this.notificationService.removeNotification('success-receive');\n      this.notificationService.sendSuccess(`Successfully received nano!`, { identifier: 'success-receive' });\n      // pending has been processed, can be removed from the list\n      // list also updated with reloadBalances but not if called too fast\n      this.walletService.removePendingBlock(receivableBlock.hash);\n    } else {\n      if (!this.walletService.isLedgerWallet()) {\n        // this.notificationService.sendError(`There was a problem receiving the transaction, try manually!`, {length: 10000});\n      }\n    }\n\n    receivableBlock.loading = false;\n    await this.walletService.reloadBalances();\n    this.updatePendingBlocks(); // update the list\n  }\n\n  copied() {\n    this.notificationService.removeNotification('success-copied');\n    this.notificationService.sendSuccess(`Successfully copied to clipboard!`, { identifier: 'success-copied' });\n  }\n\n  copiedAccountAddress() {\n    if (this.timeoutIdClearingRecentlyCopiedState != null) {\n      clearTimeout(this.timeoutIdClearingRecentlyCopiedState);\n    }\n    this.recentlyCopiedAccountAddress = true;\n    this.timeoutIdClearingRecentlyCopiedState = setTimeout(\n      () => {\n        this.recentlyCopiedAccountAddress = false;\n      },\n      2000\n    );\n  }\n\n  toBigNumber(value) {\n    return new BigNumber(value);\n  }\n\n  unsetSelectedAccount() {\n    this.pendingAccountModel = '0';\n    this.onSelectedAccountChange(this.pendingAccountModel);\n  }\n\n  getRawAmountWithoutTinyRaws(rawAmountWithTinyRaws) {\n    const tinyRaws =\n      rawAmountWithTinyRaws.mod(this.nano);\n\n    return rawAmountWithTinyRaws.minus(tinyRaws);\n  }\n\n  merchantModeResetState() {\n    this.unsetSelectedAccount();\n    this.resetAmount();\n\n    this.inMerchantModeQR = false;\n    this.inMerchantModePaymentComplete = false;\n  }\n\n  merchantModeEnable() {\n    this.merchantModeResetState();\n\n    this.inMerchantMode = true;\n    this.merchantModeModal.show();\n  }\n\n  merchantModeDisable() {\n    this.inMerchantMode = false;\n    this.inMerchantModeQR = false;\n    this.inMerchantModePaymentComplete = false;\n    this.merchantModeModal.hide();\n  }\n\n  merchantModeShowQR() {\n    const isRequestingAnyAmount = (this.validNano === false || Number(this.amountNano) === 0);\n\n    if(isRequestingAnyAmount === true) {\n      this.resetAmount();\n    }\n\n    this.merchantModeRawRequestedTotal =\n        (isRequestingAnyAmount === true)\n      ? new BigNumber(0)\n      : this.util.nano.mnanoToRaw(this.amountNano);\n\n    this.merchantModeRawRequestedQR =\n        (isRequestingAnyAmount === true)\n      ? new BigNumber(0)\n      : this.util.nano.mnanoToRaw(this.amountNano);\n\n    this.merchantModeSeenBlockHashes =\n      this.pendingBlocksForSelectedAccount.reduce(\n        (seenHashes, receivableBlock) => {\n          seenHashes[receivableBlock.hash] = true\n          return seenHashes\n      },\n      {}\n    );\n\n    this.merchantModeTransactionHashes = [];\n\n    this.inMerchantModeQR = true;\n  }\n\n  merchantModeHideQR() {\n    this.inMerchantModeQR = false;\n  }\n\n  onMerchantModeReceiveTransaction(transaction) {\n    if( this.merchantModeSeenBlockHashes[transaction.hash] != null ) {\n      return;\n    }\n\n    this.merchantModeSeenBlockHashes[transaction.hash] = true;\n\n    const receivedAmountWithTinyRaws = new BigNumber(transaction.amount);\n\n    const receivedAmount =\n      this.getRawAmountWithoutTinyRaws(receivedAmountWithTinyRaws);\n\n    const requestedAmount =\n      this.getRawAmountWithoutTinyRaws(this.merchantModeRawRequestedQR);\n\n    if( receivedAmount.eq(requestedAmount) ) {\n      this.merchantModeTransactionHashes.push(transaction.hash);\n\n      this.merchantModeMarkCompleteWithAmount(this.merchantModeRawRequestedTotal);\n    } else {\n      const transactionPrompt = {\n        moreThanRequested: receivedAmount.gt(requestedAmount),\n        lessThanRequested: receivedAmount.lt(requestedAmount),\n        amountRaw: receivedAmountWithTinyRaws,\n        amountHiddenRaw: receivedAmountWithTinyRaws.mod(this.nano),\n        transactionHash: transaction.hash,\n      }\n\n      this.merchantModePrompts.push(transactionPrompt);\n    }\n  }\n\n  merchantModeSubtractAmountFromPrompt(prompt, promptIdx) {\n    const subtractedRawWithTinyRaws = prompt.amountRaw;\n\n    const subtractedRaw =\n      this.getRawAmountWithoutTinyRaws(subtractedRawWithTinyRaws);\n\n    const newAmountRaw =\n      this.merchantModeRawRequestedQR.minus(subtractedRaw);\n\n    this.merchantModeRawRequestedQR = newAmountRaw;\n    this.changeQRAmount(newAmountRaw.toFixed());\n\n    this.merchantModeTransactionHashes.push(prompt.transactionHash);\n\n    this.merchantModePrompts.splice(promptIdx, 1);\n  }\n\n  merchantModeMarkCompleteFromPrompt(prompt) {\n    this.merchantModeTransactionHashes.push(prompt.transactionHash);\n\n    this.merchantModeMarkCompleteWithAmount(prompt.amountRaw);\n  }\n\n  merchantModeDiscardPrompt(promptIdx) {\n    this.merchantModePrompts.splice(promptIdx, 1);\n  }\n\n  merchantModeMarkCompleteWithAmount(amountRaw) {\n    this.merchantModeRawReceivedTotal = amountRaw;\n    this.merchantModeRawReceivedTotalHiddenRaw = amountRaw.mod(this.nano);\n\n    this.inMerchantModePaymentComplete = true;\n    this.inMerchantModeQR = false;\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <ng-template #switchToMerchantModeButton>\n      <button\n        class=\"uk-width-1-1 uk-width-auto@s uk-button uk-button-primary uk-text-center nlt-icon-button nlt-button-blue\"\n        type=\"button\"\n        (click)=\"merchantModeEnable()\"\n      >\n        <span class=\"nlt-icon\" uk-icon=\"icon: cart;\"></span>\n        <span class=\"merchant-mode-text-full\">Merchant Mode</span>\n        <span class=\"merchant-mode-text-short\">Merchant Mode</span>\n      </button>\n    </ng-template>\n    \n    <div class=\"uk-margin-bottom uk-flex uk-flex-between\">\n      <h2 class=\"uk-flex-1 uk-heading-divider uk-margin-remove\">Receive</h2>\n      <div class=\"uk-flex-none uk-visible@s uk-flex uk-flex-top uk-margin-medium-left\">\n        <ng-container *ngTemplateOutlet=\"switchToMerchantModeButton\"></ng-container>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-body\">\n        <div class=\"uk-form-horizontal receive-columns\">\n\n          <div class=\"uk-flex-1\">\n            <div class=\"uk-margin\">\n              <label for=\"form-horizontal-select\" class=\"uk-form-label label-block\">Account</label>\n              <div class=\"form-account\">\n                <select id=\"form-horizontal-select\" class=\"uk-select\" [(ngModel)]=\"pendingAccountModel\" (change)=\"onSelectedAccountChange(pendingAccountModel)\">\n                  <option [value]=\"0\">All Accounts</option>\n                  <option *ngFor=\"let account of accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | rai: 'mnano,true' | amountsplit: 0 }}{{ account.balance | rai: 'mnano,true' | amountsplit: 1 }} XNO)</option>\n                </select>\n              </div>\n            </div>\n  \n            <div class=\"uk-margin\">\n              <label for=\"form-horizontal-amount\" class=\"uk-form-label label-block\">Requested Amount <span class=\"uk-text-muted label-optional\">optional</span></label>\n              <div class=\"form-amount\">\n                <div class=\"uk-width-1-1 uk-inline\">\n                  <label class=\"uk-form-icon uk-link-reset uk-link-muted xno-symbol\" for=\"form-horizontal-amount\"></label>\n                  <input [(ngModel)]=\"amountNano\" [ngClass]=\"{ 'uk-form-danger': !validNano }\" [attr.disabled]=\"pendingAccountModel == '0' || null\" autocomplete=\"off\" class=\"uk-input\" id=\"form-horizontal-amount\" (input)=\"nanoAmountChange()\" style=\"padding-left: 52px !important;\" type=\"number\" step=\"any\" placeholder=\"Amount of XNO\" maxlength=\"40\">\n                </div>\n                <div style=\"margin-top: 10px;\" *ngIf=\"settings.settings.displayCurrency\">\n                  <div class=\"uk-width-1-1 uk-inline\">\n                    <a class=\"uk-form-icon uk-link-reset uk-link-muted fiat-currency-ticker\" uk-tooltip title=\"Last Price: {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / XNO\">{{ settings.settings.displayCurrency | currencySymbol }}</a>\n                    <input [(ngModel)]=\"amountFiat\" [ngClass]=\"{ 'uk-form-danger': !validFiat }\" [attr.disabled]=\"pendingAccountModel == '0' || null\" autocomplete=\"off\" (input)=\"fiatAmountChange()\" style=\"padding-left: 52px !important;\" class=\"uk-input\" id=\"form-horizontal-text-fiat\" type=\"number\" step=\"any\" placeholder=\"Amount of {{ settings.settings.displayCurrency }}\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-flex-1 qr-column\">\n            <div *ngIf=\"qrCodeImage; else placeholder\">\n              <div class=\"qr-code\">\n                <img class=\"uk-position-absolute\" [src]=\"qrCodeImage\" alt=\"QR code\">\n                <div class=\"qr-confirmation\" [class]=\"qrSuccessClass\">\n                  <div uk-icon=\"icon: check; ratio: 5\"></div>\n                  <span class=\"uk-text-large uk-text-center\">Nano Received</span>\n                </div>\n                <div style=\"padding-top: 100%\"></div>\n              </div>\n            </div>\n            <ng-template #placeholder>\n              <div class=\"qr-code qr-placeholder\">\n                <div class=\"uk-position-absolute text-half-muted\" *ngIf=\"(pendingAccountModel === '0')\">Select an account<br/>to view QR code</div>\n                <div class=\"uk-position-absolute text-half-muted\" *ngIf=\"(pendingAccountModel !== '0')\"><div uk-spinner=\"ratio: 3;\"></div></div>\n                <div style=\"padding-top: 100%\"></div>\n              </div>\n            </ng-template>\n            <div>\n              <div class=\"uk-flex uk-flex-center uk-flex-middle uk-text-center qr-address\" *ngIf=\"(pendingAccountModel !== '0')\">\n                <app-nano-account-id [accountID]=\"pendingAccountModel\" middle=\"break\" class=\"nano-address-monospace uk-width-auto\" style=\"max-width: 90%;\"></app-nano-account-id>\n                <a class=\"span-icon hide-on-small-viewports\" ngxClipboard [cbContent]=\"pendingAccountModel\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a>\n              </div>\n              <div class=\"uk-margin-medium-top only-on-small-viewports nlt-button-group uk-flex uk-flex-column uk-flex-middle\">\n                <button\n                  *ngIf=\"(pendingAccountModel !== '0')\"\n                  class=\"uk-width-1-1 uk-width-4-5@s uk-button uk-button-primary uk-text-center nlt-icon-button\"\n                  [class.nlt-button-success]=\"recentlyCopiedAccountAddress\"\n                  [class.uk-disabled]=\"recentlyCopiedAccountAddress\"\n                  type=\"button\"\n                  ngxClipboard\n                  [cbContent]=\"pendingAccountModel\"\n                  (cbOnSuccess)=\"copiedAccountAddress()\"\n                >\n                  <span class=\"nlt-icon\" uk-icon=\"icon: copy;\"></span>\n                  {{ recentlyCopiedAccountAddress ? 'Copied!' : 'Copy address' }}\n                </button>\n                <div class=\"uk-hidden@s uk-width-1-1 uk-flex\">\n                  <ng-container *ngTemplateOutlet=\"switchToMerchantModeButton\"></ng-container>\n                </div>\n              </div>\n            </div>\n          </div>\n                  \n        </div>\n      </div>\n    </div>\n\n    <div class=\"transactions-list-header uk-width-1-1 uk-flex uk-flex-center uk-flex-middle uk-margin-small-bottom\">\n      <h3 class=\"uk-margin-remove-bottom\">Incoming Transactions</h3>\n      <ul class=\"uk-width-auto uk-iconnav uk-margin-remove-left\" style=\"margin-top: -1px;\">\n        <li>\n          <div\n            uk-spinner=\"ratio: 0.5;\"\n            class=\"icon-transactions-refresh spinner\"\n            *ngIf=\"loadingIncomingTxList else notUpdatingTxList\"\n          ></div>\n          <ng-template #notUpdatingTxList>\n            <a uk-icon=\"icon: refresh;\" class=\"icon-transactions-refresh\" (click)=\"getPending()\" uk-tooltip title=\"Reload incoming transactions from the network\"></a>\n          </ng-template>\n        </li>\n      </ul>\n    </div>\n\n    <div uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"transactions-list-mobile only-on-small-viewports\">\n          <div\n            class=\"date-header text-half-muted\"\n            *ngIf=\"(pendingAccountModel !== '0')\"\n          >{{ selectedAccountAddressBookName }}</div>\n          <ng-container *ngFor=\"let transaction of pendingBlocksForSelectedAccount; let transactionIdx = index;\">\n            <div\n              class=\"date-header text-half-muted\"\n              *ngIf=\"(\n                    (pendingAccountModel === '0')\n                && (\n                    ( pendingBlocksForSelectedAccount[transactionIdx - 1] == null )\n                  || (\n                      transaction.destinationAddressBookName\n                    !== pendingBlocksForSelectedAccount[transactionIdx - 1].destinationAddressBookName\n                  )\n                )\n              )\"\n            >{{ transaction.destinationAddressBookName }}</div>\n            <app-nano-transaction-mobile\n              [transaction]=\"transaction\"\n              [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\"\n              (click)=\"showMobileMenuForTransaction(transaction)\"\n            ></app-nano-transaction-mobile>\n          </ng-container>\n\n          <div class=\"rounded-area\" *ngIf=\"!loadingIncomingTxList && !pendingBlocksForSelectedAccount.length\">\n            <div style=\"text-align: center;\">{{\n                (pendingAccountModel === '0')\n              ? 'No new incoming transactions'\n              : 'No new incoming transactions for selected account'\n            }}</div>\n          </div>\n          <div class=\"rounded-area\" *ngIf=\"loadingIncomingTxList\">\n            <div style=\"text-align: center;\"><span class=\"uk-margin-right\" uk-spinner></span> Loading incoming transactions...</div>\n          </div>\n        </div>\n\n        <table class=\"transactions-list hide-on-small-viewports uk-table uk-table-striped uk-table-small\" style=\"margin-top: 0;\">\n          <thead>\n          <tr>\n            <th scope=\"col\" class=\"type-column\"></th>\n            <th scope=\"col\" class=\"account-column\">Account / Block</th>\n            <th scope=\"col\" class=\"amount-column\">Amount</th>\n            <th scope=\"col\" class=\"date-column\">Actions</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let pending of pendingBlocksForSelectedAccount\" [class]=\"{ 'uk-text-muted': true }\">\n            <td class=\"type-column\">\n              <span class=\"type uk-text-small\" uk-icon=\"icon: plus-circle; ratio: 1.2;\"></span>\n            </td>\n            <td class=\"account-column uk-visible-toggle uk-text-truncate\">\n              <div uk-grid class=\"uk-flex-nowrap\">\n                <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                  <a [routerLink]=\"'/account/' + pending.account\" class=\"account-container uk-text-truncate\" title=\"View Account Details\" uk-tooltip>\n                    <div class=\"identicon-name-row uk-text-truncate\">\n                      <app-nano-identicon scale=\"6\" [accountID]=\"pending.account\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                      <div class=\"account-label uk-text-truncate\" *ngIf=\"pending.addressBookName\">{{ pending.addressBookName }}</div>\n                    </div>\n                    <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\">\n                      <app-nano-account-id [accountID]=\"pending.account\" middle=\"auto\"></app-nano-account-id>\n                    </div>\n                  </a>\n                </div>\n                <div class=\"nano-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                  <ul class=\"uk-iconnav\">\n                    <li><a ngxClipboard [cbContent]=\"pending.account\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                  </ul>\n                </div>\n              </div>\n              <a [routerLink]=\"'/transaction/' + pending.hash\" class=\"uk-link-text uk-text-small uk-text-muted uk-text-truncate block-hash block-hash-monospace\" title=\"View Block Details\" uk-tooltip>{{ pending.hash }}</a>\n              <ng-container *ngIf=\"(pendingAccountModel === '0')\">\n                <div class=\"arrow-down\">\n                  <div class=\"icon\" uk-icon=\"icon: chevron-down; ratio: 1.2;\"></div>\n                </div>\n                <div uk-grid class=\"uk-flex-nowrap\">\n                  <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                    <a [routerLink]=\"'/account/' + pending.destination\" class=\"account-container uk-text-truncate\" title=\"View Account Details\" uk-tooltip>\n                      <div class=\"identicon-name-row uk-text-truncate\">\n                        <app-nano-identicon scale=\"6\" [accountID]=\"pending.destination\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                        <div class=\"account-label uk-text-truncate\" *ngIf=\"pending.destinationAddressBookName\">{{ pending.destinationAddressBookName }}</div>\n                      </div>\n                      <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\">\n                        <app-nano-account-id [accountID]=\"pending.destination\" middle=\"auto\"></app-nano-account-id>\n                      </div>\n                    </a>\n                  </div>\n                  <div class=\"nano-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                    <ul class=\"uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"pending.destination\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n                </div>\n              </ng-container>\n            </td>\n            <ng-template #transactionActions>\n              <div class=\"button-container\">\n                <button *ngIf=\"!pending.loading\" class=\"uk-button uk-button-primary uk-text-center uk-width-auto\" type=\"button\" (click)=\"receiveReceivableBlock(pending)\">RECEIVE</button>\n                <button *ngIf=\"pending.loading\" class=\"uk-button uk-button-secondary uk-disabled uk-button-small nlt-icon-button nlt-icon-button-inline\"><span class=\"spinner\" uk-spinner=\"ratio: 0.5;\"></span> Receiving</button>\n              </div>\n            </ng-template>\n            <td class=\"amount-column uk-text-middle uk-text-muted\" [title]=\"('Incoming Transaction') + ( (pending.amountRaw && (pending.amountRaw > 0) ) ? ( ', +' + ( pending.amountRaw.toString(10) ) + ' raw' ) : '' )\">\n              <span class=\"uk-text-small\">Ready to receive</span><br>\n              <span class=\"amount-integer\">{{ pending.amount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n              <span class=\"amount-fractional\">{{ pending.amount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n              <span class=\"currency-name\">NANO</span>\n              <div class=\"compact-actions-date\">\n                <ng-template [ngTemplateOutlet]=\"transactionActions\"></ng-template>\n              </div>\n            </td>\n            <td class=\"date-column uk-text-middle uk-text-truncate\">\n              <ng-template [ngTemplateOutlet]=\"transactionActions\"></ng-template>\n            </td>\n          </tr>\n          <tr *ngIf=\"!loadingIncomingTxList && !pendingBlocksForSelectedAccount.length\">\n            <td colspan=\"4\" style=\"text-align: center;\">{{\n                (pendingAccountModel === '0')\n              ? 'No new incoming transactions'\n              : 'No new incoming transactions for selected account'\n            }}</td>\n          </tr>\n          <tr *ngIf=\"loadingIncomingTxList\">\n            <td colspan=\"4\" style=\"text-align: center;\"><span class=\"uk-margin-right\" uk-spinner></span> Loading incoming transactions...</td>\n          </tr>\n        </table>\n\n        <table class=\"uk-table uk-table-striped uk-table-small\" *ngIf=\"settings.settings.minimumReceive\">\n          <thead>\n            <tr class=\"uk-alert uk-alert-primary missing-accounts-hint\">\n              <td colspan=\"4\" style=\"text-align: center;\"><span uk-icon=\"icon: info\"></span> Below <a class=\"hint-action\" routerLink=\"/configure-app\" routerLinkActive=\"active\" *ngIf=\"( util.nano.mnanoToRaw(this.settings.settings.minimumReceive).toFixed().length > 24 ) else amountInRaw\">{{ util.nano.mnanoToRaw(this.settings.settings.minimumReceive).toFixed() | rai: 'mnano,true' | amountsplit: 0 }}{{ util.nano.mnanoToRaw(this.settings.settings.minimumReceive).toFixed() | rai: 'mnano,true' | amountsplit: 1 }} XNO</a><ng-template #amountInRaw><a class=\"hint-action\" routerLink=\"/configure-app\" routerLinkActive=\"active\">{{ util.nano.mnanoToRaw(this.settings.settings.minimumReceive).toFixed() }} raw</a></ng-template> will be hidden.</td>\n            </tr>\n          </thead>\n        </table>\n\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<div class=\"modal-position-bottom\" id=\"mobile-transaction-menu-modal\" uk-modal>\n  <div class=\"uk-modal-dialog\">\n    <div class=\"uk-modal-body\">\n      <div class=\"transactions-list-mobile\">\n        <app-nano-transaction-mobile\n          [isInteractable]=\"false\"\n          [transaction]=\"mobileTransactionData\"\n          [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\"\n          *ngIf=\"mobileTransactionData\"\n        ></app-nano-transaction-mobile>\n      </div>\n      <div class=\"uk-width-1-1\" *ngIf=\"mobileTransactionData\">\n        <hr>\n        <div\n          class=\"menu-option uk-text-success\"\n          (click)=\"onReceiveFundsPress(mobileTransactionData)\"\n        >\n          <span\n            class=\"icon icon-download\" uk-icon=\"icon: download; ratio: 1.5;\"\n            style=\"vertical-align: 2px;\"\n            *ngIf=\"!mobileTransactionData.received\"\n          ></span>\n          <span *ngIf=\"!mobileTransactionData.received && !mobileTransactionData.loading\">Receive funds</span>\n          <span *ngIf=\"!mobileTransactionData.received && mobileTransactionData.loading\">Receiving...</span>\n          <span\n            class=\"icon\" uk-icon=\"icon: check; ratio: 1.3;\"\n            style=\"vertical-align: 2px;\"\n            *ngIf=\"mobileTransactionData.received\"\n          ></span>\n          <span *ngIf=\"mobileTransactionData.received\">Received!</span>\n        </div>\n        <div\n          class=\"menu-option\"\n          [routerLink]=\"( '/transaction/' + mobileTransactionData.hash )\"\n          (click)=\"mobileTransactionMenuModal.hide()\"\n        >\n          <span class=\"icon\" uk-icon=\"icon: search; ratio: 1.3;\" style=\"vertical-align: 2px;\"></span>\n          <span>View transaction details</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"merchant-mode-overlay\" id=\"merchant-mode-modal\" uk-modal>\n  <div class=\"merchant-mode-contents uk-flex uk-flex-column uk-flex-middle\">\n    <div\n      class=\"uk-width-1-1 merchant-mode-header\"\n      [class.uk-margin-medium-bottom]=\"inMerchantModeQR === false\"\n      [class.uk-margin-bottom]=\"inMerchantModeQR === true\"\n    >\n      <div class=\"merchant-mode-logo\"></div>\n      <div\n        class=\"merchant-mode-exit uk-flex uk-flex-middle\"\n        [class.uk-visible@s]=\"(inMerchantModeQR === true)\"\n        (click)=\"inMerchantModeQR ? merchantModeHideQR() : merchantModeDisable()\"\n      >\n        <span uk-icon=\"icon: close; ratio: 1.4;\" class=\"uk-margin-small-right\" style=\"margin-top: 2px;\"></span>\n        <span class=\"label\">{{ inMerchantModeQR ? 'Cancel Payment' : 'Exit Merchant Mode' }}</span>\n      </div>\n    </div>\n    <div class=\"merchant-centered-container uk-flex-1 uk-width-1-1 uk-flex uk-flex-column uk-flex-center uk-flex-middle uk-text-center\">\n      <ng-container *ngIf=\"(inMerchantModePaymentComplete === false) && (inMerchantModeQR === false) && (pendingAccountModel === '0')\">\n        <div class=\"uk-width-1-1 uk-card uk-card-default uk-margin-bottom\">\n          <div class=\"uk-card-body\">\n            <p class=\"uk-text-large\">Select the <span class=\"uk-text-primary\">destination account</span></p>\n            <select id=\"form-horizontal-select\" class=\"uk-select\" [(ngModel)]=\"pendingAccountModel\" (change)=\"onSelectedAccountChange(pendingAccountModel)\">\n              <option [value]=\"0\">–</option>\n              <option *ngFor=\"let account of accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }}</option>\n            </select>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"(inMerchantModePaymentComplete === false) && (inMerchantModeQR === false) && (pendingAccountModel !== '0')\">\n        <div class=\"identicon-name-row uk-text-truncate\">\n          <app-nano-identicon scale=\"6\" [accountID]=\"pendingAccountModel\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n          <div class=\"account-label uk-text-truncate\">{{ selectedAccountAddressBookName }}</div>\n        </div>\n        <app-nano-account-id [accountID]=\"pendingAccountModel\" middle=\"off\" class=\"nano-address-monospace uk-width-auto\"></app-nano-account-id>\n        <button\n          class=\"uk-width-auto uk-button uk-button-secondary uk-text-center nlt-icon-button uk-margin-small-top\"\n          type=\"button\"\n          (click)=\"unsetSelectedAccount()\"\n        >\n          <span class=\"nlt-icon\" uk-icon=\"icon: pencil;\"></span>\n          Change account\n        </button>\n\n        <div\n          class=\"uk-width-1-1 uk-card uk-card-default uk-margin-bottom\"\n          style=\"margin-top: 60px;\"\n        >\n          <div class=\"uk-card-body\">\n            <p class=\"uk-text-large\">Enter the <span class=\"uk-text-primary\">requested amount</span></p>\n            <div class=\"form-amount\">\n              <div class=\"uk-width-1-1 uk-inline\">\n                <label class=\"uk-form-icon uk-link-reset uk-link-muted xno-symbol\" for=\"form-horizontal-amount\"></label>\n                <input [(ngModel)]=\"amountNano\" [ngClass]=\"{ 'uk-form-danger': !validNano }\" [attr.disabled]=\"pendingAccountModel == '0' || null\" autocomplete=\"off\" class=\"uk-input\" id=\"form-horizontal-amount\" (input)=\"nanoAmountChange()\" style=\"padding-left: 52px !important;\" type=\"number\" step=\"any\" placeholder=\"Amount of XNO\" maxlength=\"40\">\n              </div>\n              <div style=\"margin-top: 10px;\" *ngIf=\"settings.settings.displayCurrency\">\n                <p class=\"text-half-muted\" style=\"margin: 0 0 14px 0;\">or</p>\n                <div class=\"uk-width-1-1 uk-inline\">\n                  <a class=\"uk-form-icon uk-link-reset uk-link-muted fiat-currency-ticker\" uk-tooltip title=\"Last Price: {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / XNO\">{{ settings.settings.displayCurrency | currencySymbol }}</a>\n                  <input [(ngModel)]=\"amountFiat\" [ngClass]=\"{ 'uk-form-danger': !validFiat }\" [attr.disabled]=\"pendingAccountModel == '0' || null\" autocomplete=\"off\" (input)=\"fiatAmountChange()\" style=\"padding-left: 52px !important;\" class=\"uk-input\" id=\"form-horizontal-text-fiat\" type=\"number\" step=\"any\" placeholder=\"Amount of {{ settings.settings.displayCurrency }}\">\n                </div>\n              </div>\n            </div>\n            <button\n              class=\"uk-width-1-1 uk-button uk-button-primary uk-text-center nlt-icon-button uk-margin-medium-top\"\n              type=\"button\"\n              (click)=\"merchantModeShowQR()\"\n            >\n              <span class=\"merchant-mode-icon-qr-code\"></span>\n              Create QR code\n            </button>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"(inMerchantModeQR === true)\">\n        <p class=\"uk-text-large uk-margin-remove-bottom\">Send</p>\n        <p class=\"uk-text-large uk-text-primary uk-margin-remove-top\" *ngIf=\"(amountNano === '')\">\n          <span class=\"merchant-mode-currency-name\">XNO</span>\n        </p>\n        <p class=\"uk-text-large uk-text-primary uk-margin-remove-top\" *ngIf=\"(amountNano !== '')\">\n          <span\n            class=\"merchant-mode-amount-integer\"\n          >{{ merchantModeRawRequestedQR | rai: 'mnano,true' | amountsplit: 0 }}</span>\n          <span\n            class=\"merchant-mode-amount-fractional\"\n          >{{ merchantModeRawRequestedQR | rai: 'mnano,true' | amountsplit: 1 }}</span>\n          <span class=\"merchant-mode-currency-name merchant-mode-currency-margin\">XNO</span>\n        </p>\n        <p class=\"text-half-muted\" style=\"margin: -16px 0 10px 0;\">to</p>\n        <app-nano-account-id\n          [accountID]=\"pendingAccountModel\" middle=\"break\"\n          class=\"nano-address-monospace uk-width-auto\"\n          style=\"display: inline-block; max-width: 325px;\"\n        ></app-nano-account-id>\n        <div\n          class=\"uk-width-1-1 uk-flex uk-flex-center uk-margin-top\"\n          style=\"margin-bottom: 40px;\"\n        >\n          <img class=\"merchant-mode-qr-code\" [src]=\"qrCodeImage\" alt=\"QR code\" *ngIf=\"qrCodeImage\">\n          <div class=\"merchant-mode-qr-code\" *ngIf=\"!qrCodeImage\"><div uk-spinner=\"ratio: 2;\"></div></div>\n        </div>\n        <div\n          class=\"uk-width-1-1 uk-card uk-card-default uk-margin-bottom\"\n          *ngFor=\"let prompt of merchantModePrompts; let promptIdx = index\"\n        >\n          <div class=\"uk-card-body\">\n            <p\n              *ngIf=\"(amountNano === '')\"\n              class=\"uk-text-large text-half-muted uk-margin-remove-bottom\"\n            >\n              Received\n            </p>\n            <p\n              *ngIf=\"(amountNano !== '') && prompt.moreThanRequested\"\n              class=\"uk-text-large text-half-muted uk-margin-remove-bottom\"\n            >\n              Received <span class=\"uk-text-success\">more</span> than requested\n            </p>\n            <p\n              *ngIf=\"(amountNano !== '') && prompt.lessThanRequested\"\n              class=\"uk-text-large text-half-muted uk-margin-remove-bottom\"\n            >\n              Received <span class=\"uk-text-warning\">less</span> than requested\n            </p>\n            <p\n              class=\"uk-text-large uk-margin-remove-top\"\n              [class.uk-text-success]=\"prompt.moreThanRequested\"\n              [class.uk-text-warning]=\"prompt.lessThanRequested\"\n            >\n              <span\n                class=\"merchant-mode-amount-integer\"\n              >{{ prompt.amountRaw | rai: 'mnano,true' | amountsplit: 0 }}</span>\n              <span\n                class=\"merchant-mode-amount-fractional\"\n              >{{ prompt.amountRaw | rai: 'mnano,true' | amountsplit: 1 }}</span>\n              <span class=\"merchant-mode-currency-name merchant-mode-currency-margin\">XNO</span>\n            </p>\n            <div\n              *ngIf=\"prompt.amountHiddenRaw.gt(0)\"\n              class=\"uk-text-small text-half-muted block-hash-monospace\"\n              style=\"margin: -22px 0 28px 0;\"\n            >\n              +{{ prompt.amountHiddenRaw.toString(10) }} raw\n            </div>\n            <button\n              *ngIf=\"prompt.moreThanRequested\"\n              class=\"uk-width-1-1 uk-button uk-button-primary uk-text-center nlt-icon-button uk-margin-bottom nlt-button-green\"\n              type=\"button\"\n              (click)=\"merchantModeMarkCompleteFromPrompt(prompt)\"\n            >\n              <span class=\"nlt-icon\" uk-icon=\"icon: check;\" style=\"margin-top: -2px;\"></span>\n              Mark Payment Complete\n            </button>\n            <button\n              *ngIf=\"prompt.lessThanRequested\"\n              class=\"uk-width-1-1 uk-button uk-button-primary uk-text-center nlt-icon-button uk-margin-bottom\"\n              type=\"button\"\n              (click)=\"merchantModeSubtractAmountFromPrompt(prompt, promptIdx)\"\n            >\n              <span class=\"nlt-icon\" uk-icon=\"icon: pencil;\" style=\"margin-top: -2px;\"></span>\n              Subtract From Amount\n            </button>\n            <button\n              class=\"uk-width-1-1 uk-button uk-button-secondary uk-text-danger uk-text-center nlt-icon-button\"\n              type=\"button\"\n              (click)=\"merchantModeDiscardPrompt(promptIdx)\"\n            >\n              <span class=\"nlt-icon\" uk-icon=\"icon: close;\" style=\"margin-top: -2px;\"></span>\n              Discard As Unrelated\n            </button>\n          </div>\n        </div>\n        <ng-container *ngIf=\"merchantModePrompts.length === 0\">\n          <p class=\"uk-text-large uk-margin-top text-half-muted\">Awaiting payment...</p>\n          <button\n            class=\"uk-width-auto uk-button uk-text-center nlt-icon-button\"\n            [class.uk-button-primary]=\"!loadingIncomingTxList\"\n            [class.uk-button-secondary]=\"loadingIncomingTxList\"\n            [class.uk-disabled]=\"loadingIncomingTxList\"\n            type=\"button\"\n            (click)=\"!loadingIncomingTxList && getPending()\"\n          >\n            <span class=\"nlt-icon\" uk-icon=\"icon: refresh;\" style=\"margin-top: -2px;\" *ngIf=\"!loadingIncomingTxList\"></span>\n            <span class=\"spinner\" uk-spinner=\"ratio: 0.5;\" *ngIf=\"loadingIncomingTxList\"></span>\n            {{ loadingIncomingTxList ? 'Checking Payment...' : 'Check Payment' }}\n          </button>\n        </ng-container>\n        <div\n          class=\"merchant-mode-exit uk-flex uk-flex-middle uk-hidden@s\"\n          style=\"margin-top: 70px;\"\n          (click)=\"merchantModeHideQR()\"\n        >\n          <span uk-icon=\"icon: close; ratio: 1.4;\" class=\"uk-margin-small-right\" style=\"margin-top: 2px;\"></span>\n          <span class=\"label\">Cancel Payment</span>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"(inMerchantModePaymentComplete === true)\">\n        <p class=\"uk-text-large uk-margin-remove-bottom uk-text-success\">Received</p>\n        <p class=\"uk-text-large uk-text-success uk-margin-remove-top\">\n          <span\n            class=\"merchant-mode-amount-integer\"\n          >{{ merchantModeRawReceivedTotal | rai: 'mnano,true' | amountsplit: 0 }}</span>\n          <span\n            class=\"merchant-mode-amount-fractional\"\n          >{{ merchantModeRawReceivedTotal | rai: 'mnano,true' | amountsplit: 1 }}</span>\n          <span class=\"merchant-mode-currency-name merchant-mode-currency-margin\">XNO</span>\n        </p>\n        <div\n          *ngIf=\"merchantModeRawReceivedTotalHiddenRaw.gt(0)\"\n          class=\"uk-text-small text-half-muted block-hash-monospace\"\n          style=\"margin: -22px 0 28px 0;\"\n        >\n          +{{ merchantModeRawReceivedTotalHiddenRaw.toString(10) }} raw\n        </div>\n        <img style=\"width: 50%; margin-top: -40px;\" src=\"data:image/svg+xml,%3Csvg width='200mm' height='200mm' viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m157.05 40.584c-2.5562-2e-6 -5.1127 0.97964-7.0714 2.9383l-65.687 65.687-34.266-34.266c-3.9174-3.9174-10.225-3.9174-14.142 1e-6l-12.915 12.915c-3.9174 3.9174-3.9174 10.225-1e-6 14.142l39.526 39.526c0.4262 0.72955 0.95143 1.4181 1.5782 2.0448l12.915 12.915c3.9174 3.9174 10.225 3.9174 14.142 0l85.906-85.907c3.9174-3.9174 3.9174-10.224 0-14.142l-12.915-12.915c-1.9587-1.9587-4.5147-2.9383-7.0709-2.9383z' fill='none' stop-color='%23000000' stroke='%2332d296' stroke-linejoin='round' stroke-width='2' style='paint-order:stroke fill markers'/%3E%3C/svg%3E\" />\n        <p class=\"uk-flex uk-flex-center uk-flex-middle text-half-muted uk-margin-remove-bottom\">\n          <button\n            class=\"uk-button uk-button-secondary uk-text-center nlt-icon-button\"\n            type=\"button\"\n            ngxClipboard\n            [cbContent]=\"(\n                  'Amount Requested: '\n                + ( merchantModeRawRequestedTotal | rai: 'mnano,true' | amountsplit: 0 )\n                + ( merchantModeRawRequestedTotal | rai: 'mnano,true' | amountsplit: 1 )\n                + ' XNO'\n                + '\\n\\n'\n                + 'Amount Paid: '\n                + ( merchantModeRawReceivedTotal | rai: 'mnano,true' | amountsplit: 0 )\n                + ( merchantModeRawReceivedTotal | rai: 'mnano,true' | amountsplit: 1 )\n                + ' XNO'\n                + '\\n\\n'\n                + 'Transaction ID\\'s:'\n                + '\\n- '\n                + merchantModeTransactionHashes.join('\\n- ')\n            )\"\n          >\n            <span class=\"nlt-icon\" uk-icon=\"icon: copy;\"></span>\n            Copy Payment Information\n          </button>\n        </p>\n        <ul class=\"uk-width-1-1\">\n          <li\n            *ngFor=\"let hash of merchantModeTransactionHashes\"\n            class=\"uk-text-left text-half-muted block-hash-monospace\"\n            style=\"word-wrap: anywhere;\"\n          >\n            {{ hash }}\n          </li>\n        </ul>\n        <div\n          class=\"merchant-mode-exit uk-flex uk-flex-middle\"\n          style=\"margin-top: 70px;\"\n          (click)=\"merchantModeResetState()\"\n        >\n          <span uk-icon=\"icon: plus-circle; ratio: 1.4;\" class=\"uk-margin-small-right\" style=\"margin-top: 2px;\"></span>\n          <span class=\"label\">New Payment</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {UtilService} from '../../services/util.service';\nimport { Router } from '@angular/router';\nimport { NotificationService } from '../../services/notification.service';\nimport { RemoteSignService } from '../../services/remote-sign.service';\nimport { QrModalService } from '../../services/qr-modal.service';\nimport { AddressBookService } from 'app/services/address-book.service';\nimport {BehaviorSubject} from 'rxjs';\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './remote-signing.component.html',\n  styleUrls: ['./remote-signing.component.css']\n})\nexport class RemoteSigningComponent implements OnInit {\n  toAccountID = '';\n  toAccountStatus: number = null;\n  unsignedBlock = '';\n  signedBlock = '';\n  unsignedStatus: number = null;\n  signedStatus: number = null;\n  addressBookResults$ = new BehaviorSubject([]);\n  showAddressBook = false;\n  addressBookMatch = '';\n\n  constructor(\n    private util: UtilService,\n    private router: Router,\n    private notificationService: NotificationService,\n    private remoteSignService: RemoteSignService,\n    private qrModalService: QrModalService,\n    private addressBookService: AddressBookService,\n  ) { }\n\n  async ngOnInit() {\n    this.addressBookService.loadAddressBook();\n  }\n\n  validateDestination() {\n    // The timeout is used to solve a bug where the results get hidden too fast and the click is never registered\n    setTimeout(() => this.showAddressBook = false, 400);\n\n    if (this.toAccountID === '') {\n      this.toAccountStatus = null;\n      return false;\n    }\n    if (this.util.account.isValidAccount(this.toAccountID)) {\n      this.toAccountStatus = 1;\n      return true;\n    } else {\n      this.toAccountStatus = 0;\n      return false;\n    }\n  }\n\n  searchAddressBook() {\n    this.showAddressBook = true;\n    const search = this.toAccountID || '';\n    const addressBook = this.addressBookService.addressBook;\n\n    const matches = addressBook\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5);\n\n    this.addressBookResults$.next(matches);\n  }\n\n  selectBookEntry(account) {\n    this.showAddressBook = false;\n    this.toAccountID = account;\n    this.searchAddressBook();\n    this.validateDestination();\n  }\n\n  validateUnsigned(string) {\n    if (string === '') {\n      this.unsignedStatus = null;\n      return false;\n    }\n    let url = null;\n    if (string.startsWith('nanosign:')) {\n      url = new URL(string);\n    }\n    if (url && this.remoteSignService.checkSignBlock(url.pathname)) {\n      this.unsignedStatus = 1;\n    } else {\n      this.unsignedStatus = 0;\n    }\n  }\n\n  validateSigned(string) {\n    if (string === '') {\n      this.signedStatus = null;\n      return false;\n    }\n    let url = null;\n    if (string.startsWith('nanoprocess:')) {\n      url = new URL(string);\n    }\n    if (url && this.remoteSignService.checkSignBlock(url.pathname) && this.remoteSignService.checkProcessBlock(url.pathname)) {\n      this.signedStatus = 1;\n    } else {\n      this.signedStatus = 0;\n    }\n  }\n\n  start() {\n    if (this.validateDestination()) {\n      this.router.navigate(['account', this.toAccountID], { queryParams: {sign: 1}});\n    } else {\n      this.notificationService.sendWarning('Invalid nano account!');\n    }\n  }\n\n  navigateBlock(block) {\n    let badScheme = false;\n\n    if (block.startsWith('nanosign:') || block.startsWith('nanoprocess:')) {\n      const url = new URL(block);\n      if (url.protocol === 'nanosign:') {\n        this.remoteSignService.navigateSignBlock(url);\n      } else if (url.protocol === 'nanoprocess:') {\n        this.remoteSignService.navigateProcessBlock(url);\n      } else {\n        badScheme = true;\n      }\n    } else {\n      badScheme = true;\n    }\n    if (badScheme) {\n      this.notificationService.sendWarning('Not a recognized block format!', { length: 5000 });\n    }\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'account1':\n          this.toAccountID = data.content;\n          break;\n      }\n    }, () => {}\n    );\n  }\n}\n","<div uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2>Remote Signing</h2>\n\n    <div uk-grid class=\"uk-animation-slide-left-small\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-header uk-form-horizontal\">\n          \n            <h4>STEP 1 - Create Block (Online Device)</h4>\n            <p>Create a SEND, RECEIVE or CHANGE block from a \"watch-only\" account. No wallet import needed.</p>\n\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">Account to create a block for</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('account1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                    <input (blur)=\"validateDestination()\" (input)=\"searchAddressBook()\" (focus)=\"searchAddressBook()\" (keyup.enter)=\"start()\" [(ngModel)]=\"toAccountID\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': toAccountStatus === 1, 'uk-form-danger': toAccountStatus === 0 }\" type=\"text\" placeholder=\"nano_1abc...\" autocomplete=\"off\">\n\n                    <div *ngIf=\"(addressBookResults$ | async).length\" [hidden]=\"!showAddressBook\" class=\"nlt-dropdown uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                      <ul class=\"uk-nav uk-nav-default\">\n                        <li class=\"uk-nav-header\">Address Book Results</li>\n                        <li class=\"uk-nav-divider\"></li>\n                        <li *ngFor=\"let book of addressBookResults$ | async\">\n                          <a (click)=\"selectBookEntry(book.account)\">{{ book.name }}</a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"uk-inline uk-width-1-1\">\n              <button class=\"uk-button uk-button-primary uk-width-1-4@l uk-width-1-1\" (click)=\"start()\">CREATE</button>\n            </div>\n          </div>\n          <div class=\"uk-card-header uk-form-horizontal\">\n            <h4>STEP 2 - Sign Block (Offline Device)</h4>\n            <p><a routerLink=\"/qr-scan\" routerLinkActive=\"active\">Scan the unsigned QR code</a> from Step 1 <strong>OR</strong> paste the block below. Sign it using a key owning the account from step 1.<br>\n            Nault can optionally be set in Offline Mode from the <a routerLink=\"/configure-app\" routerLinkActive=\"active\">Server Configuration</a> to avoid network notifications.</p>\n            \n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">Unsigned block from step 1</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input (input)=\"validateUnsigned(unsignedBlock)\" (keyup.enter)=\"navigateBlock(unsignedBlock)\" [(ngModel)]=\"unsignedBlock\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': unsignedStatus === 1, 'uk-form-danger': unsignedStatus === 0 }\" type=\"text\" placeholder=\"nanosign:{abc..}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"uk-inline uk-width-1-1\">\n              <button class=\"uk-button uk-button-primary uk-width-1-4@l uk-width-1-1\" (click)=\"navigateBlock(unsignedBlock)\">SIGN</button>\n            </div>\n          </div>\n          <div class=\"uk-card-header uk-form-horizontal\">\n            <h4>STEP 3 - Process Block (Online Device)</h4>\n            <p><a routerLink=\"/qr-scan\" routerLinkActive=\"active\">Scan the signed QR code</a> from Step 2 <strong>OR</strong> paste the block below. Confirm and send it to the live network!</p>\n\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">Signed block from step 2</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input (input)=\"validateSigned(signedBlock)\" (keyup.enter)=\"navigateBlock(signedBlock)\" [(ngModel)]=\"signedBlock\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': signedStatus === 1, 'uk-form-danger': signedStatus === 0 }\" type=\"text\" placeholder=\"nanoprocess:{abc..}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"uk-inline uk-width-1-1\">\n              <button class=\"uk-button uk-button-primary uk-width-1-4@l uk-width-1-1\" (click)=\"navigateBlock(signedBlock)\">PROCESS</button>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n\n\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport BigNumber from 'bignumber.js';\nimport {BehaviorSubject} from 'rxjs';\nimport { QrModalService } from '../../services/qr-modal.service';\n\nimport {\n  ApiService,\n  AppSettingsService,\n  FullRepresentativeOverview,\n  NanoBlockService,\n  NotificationService,\n  RepresentativeService,\n  UtilService,\n  WalletService,\n  NinjaService\n} from '../../services';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-representatives',\n  templateUrl: './representatives.component.html',\n  styleUrls: ['./representatives.component.css']\n})\nexport class RepresentativesComponent implements OnInit {\n  @ViewChild('repInput') repInput;\n\n  changeAccountID: any = null;\n  toRepresentativeID = '';\n\n  representativeResults$ = new BehaviorSubject([]);\n  showRepresentatives = false;\n  representativeListMatch = '';\n\n  representativeOverview = [];\n  changingRepresentatives = false;\n\n  selectedAccounts = [];\n  fullAccounts = [];\n\n  recommendedReps = [];\n  recommendedRepsPaginated = [];\n  recommendedRepsLoading = false;\n  selectedRecommendedRep = null;\n  showRecommendedReps = false;\n  loadingRepresentatives = false;\n\n  repsPerPage = 5;\n  currentRepPage = 0;\n\n  hideOverview = false;\n\n  representativeList = [];\n\n  constructor(\n    private router: ActivatedRoute,\n    public walletService: WalletService,\n    private api: ApiService,\n    private notifications: NotificationService,\n    private nanoBlock: NanoBlockService,\n    private util: UtilService,\n    private representativeService: RepresentativeService,\n    public settings: AppSettingsService,\n    private ninja: NinjaService,\n    private qrModalService: QrModalService,\n    private translocoService: TranslocoService) { }\n\n  async ngOnInit() {\n    this.representativeService.loadRepresentativeList();\n\n    // Listen for query parameters that set defaults\n    this.router.queryParams.subscribe(params => {\n      this.hideOverview = params && params.hideOverview;\n      this.showRecommendedReps = params && params.showRecommended;\n\n      if (params && params.accounts) {\n        this.selectedAccounts = []; // Reset the preselected accounts\n        const accounts = params.accounts.split(',');\n        for (const account of accounts) {\n          this.newAccountID(account);\n        }\n      }\n      if (params && params.representative) {\n        this.selectRepresentative(params.representative);\n      }\n    });\n\n    this.loadingRepresentatives = true;\n    let repOverview = await this.representativeService.getRepresentativesOverview();\n    // Sort by weight delegated\n    repOverview = repOverview.sort(\n      (a: FullRepresentativeOverview, b: FullRepresentativeOverview) => b.delegatedWeight.toNumber() - a.delegatedWeight.toNumber()\n    );\n    this.representativeOverview = repOverview;\n    repOverview.forEach(o => this.fullAccounts.push(...o.accounts));\n    this.loadingRepresentatives = false;\n\n    this.populateRepresentativeList();\n\n    await this.loadRecommendedReps();\n  }\n\n  async populateRepresentativeList() {\n    // add trusted/regular local reps to the list\n    const localReps = this.representativeService.getSortedRepresentatives();\n    this.representativeList.push( ...localReps.filter(rep => (!rep.warn)) );\n\n    if (this.settings.settings.serverAPI) {\n      const verifiedReps = await this.ninja.recommendedRandomized();\n\n      // add random recommended reps to the list\n      for (const representative of verifiedReps) {\n        const temprep = {\n          id: representative.account,\n          name: representative.alias\n        };\n\n        this.representativeList.push(temprep);\n      }\n    }\n\n    // add untrusted local reps to the list\n    this.representativeList.push( ...localReps.filter(rep => (rep.warn)) );\n  }\n\n  getAccountLabel(account) {\n    const addressBookName = account.addressBookName;\n\n    if (addressBookName != null) {\n      return addressBookName;\n    }\n\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === account.id);\n\n    if (walletAccount == null) {\n      return this.translocoService.translate('general.account');\n    }\n\n    return (this.translocoService.translate('general.account') + ' #' + walletAccount.index);\n  }\n\n  addSelectedAccounts(accounts) {\n    for (const account of accounts) {\n      this.newAccountID(account.id);\n    }\n\n    // Scroll to the representative input\n    setTimeout(() => this.repInput.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'start' }), 50);\n  }\n\n  newAccountID(accountID) {\n    const newAccount = accountID || this.changeAccountID;\n    if (!newAccount) {\n      return; // Didn't select anything\n    }\n\n    const existingAccount = this.selectedAccounts.find(a => a.id === newAccount);\n    if (existingAccount) {\n      return; // Already selected\n    }\n\n    const allExists = this.selectedAccounts.find(a => a.id === 'All Current Accounts');\n    if (newAccount === 'all' && !allExists) {\n      this.selectedAccounts = []; // Reset the list before adding all\n    }\n    if (newAccount !== 'all' && allExists) {\n      this.selectedAccounts.splice(this.selectedAccounts.indexOf(allExists), 1); // Remove all from the list\n    }\n\n    if (newAccount === 'all') {\n      if (this.selectedAccounts.length === 0) {\n        this.selectedAccounts.push({ id: 'All Current Accounts' });\n      }\n    } else {\n      const walletAccount = this.walletService.getWalletAccount(newAccount);\n      this.selectedAccounts.push(walletAccount);\n    }\n\n    setTimeout(() => this.changeAccountID = null, 10);\n  }\n\n  removeSelectedAccount(account) {\n    this.selectedAccounts.splice(this.selectedAccounts.indexOf(account), 1); // Remove all from the list\n  }\n\n  searchRepresentatives() {\n    this.showRepresentatives = true;\n    const search = this.toRepresentativeID || '';\n\n    const matches = this.representativeList\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      // remove duplicate accounts\n      .filter((item, pos, self) => this.util.array.findWithAttr(self, 'id', item.id) === pos)\n      .slice(0, 5);\n\n    this.representativeResults$.next(matches);\n  }\n\n  selectRepresentative(rep) {\n    this.showRepresentatives = false;\n    this.toRepresentativeID = rep;\n    this.searchRepresentatives();\n    this.validateRepresentative();\n  }\n\n  async validateRepresentative() {\n    setTimeout(() => this.showRepresentatives = false, 400);\n    this.toRepresentativeID = this.toRepresentativeID.replace(/ /g, '');\n\n    if (this.toRepresentativeID === '') {\n      this.representativeListMatch = '';\n      return;\n    }\n\n    const rep = this.representativeService.getRepresentative(this.toRepresentativeID);\n    // const ninjaRep = await this.ninja.getAccount(this.toRepresentativeID);\n\n    if (rep) {\n      this.representativeListMatch = rep.name;\n    } \n    // else if (ninjaRep) {\n    //   this.representativeListMatch = ninjaRep.alias;\n    // } \n    else {\n      this.representativeListMatch = '';\n    }\n  }\n\n  async loadRecommendedReps() {\n    this.recommendedRepsLoading = true;\n    try {\n      const scores = await this.ninja.recommended() as any[];\n      const totalSupply = new BigNumber(133248289);\n\n      const reps = scores.filter(a => a.alias).map(rep => {\n        const nanoWeight = this.util.nano.rawToMnano(rep.weight.toString() || 0);\n        const percent = nanoWeight.div(totalSupply).times(100);\n\n        // rep.weight = nanoWeight.toString(10);\n        // rep.weight = this.util.nano.mnanoToRaw(nanoWeight);\n        rep.percent = percent.toFixed(3);\n\n        return rep;\n      });\n\n      this.recommendedReps = reps;\n\n      this.calculatePage();\n      this.recommendedRepsLoading = false;\n    } catch (err) {\n      this.recommendedRepsLoading = null;\n    }\n\n  }\n\n  previousReps() {\n    if (this.currentRepPage > 0) {\n      this.currentRepPage--;\n      this.calculatePage();\n    }\n  }\n  nextReps() {\n    if (this.currentRepPage < (this.recommendedReps.length / this.repsPerPage) - 1) {\n      this.currentRepPage++;\n    } else {\n      this.currentRepPage = 0;\n    }\n    this.calculatePage();\n  }\n\n  calculatePage() {\n    this.recommendedRepsPaginated = this.recommendedReps.slice(\n      (this.currentRepPage * this.repsPerPage),\n      (this.currentRepPage * this.repsPerPage) + this.repsPerPage\n    );\n  }\n\n  selectRecommendedRep(rep) {\n    this.selectedRecommendedRep = rep;\n    this.toRepresentativeID = rep.rep_address;\n    this.showRecommendedReps = false;\n    this.representativeListMatch = rep.alias; // We will save if they use this, so this is a nice little helper\n  }\n\n  async changeRepresentatives() {\n    const accounts = this.selectedAccounts;\n    const newRep = this.toRepresentativeID;\n\n    if (this.changingRepresentatives) {\n      return; // Already running\n    }\n    if (this.walletService.isLocked()) {\n      const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n      if (wasUnlocked === false) {\n        return;\n      }\n    }\n    if (!accounts || !accounts.length) {\n      return this.notifications.sendWarning(`You must select at least one account to change`);\n    }\n\n    this.changingRepresentatives = true;\n\n    const valid = this.util.account.isValidAccount(newRep);\n    if (!valid) {\n      this.changingRepresentatives = false;\n      return this.notifications.sendWarning(`Representative is not a valid account`);\n    }\n\n    const allAccounts = accounts.find(a => a.id === 'All Current Accounts');\n    const accountsToChange = allAccounts ? this.walletService.wallet.accounts : accounts;\n\n    // Remove any that don't need their represetatives to be changed\n    const accountsNeedingChange = accountsToChange.filter(account => {\n      const accountInfo = this.fullAccounts.find(a => a.id === account.id);\n      if (!accountInfo || accountInfo.error) {\n        return false; // Cant find info, update the account\n      }\n\n      if (accountInfo.representative.toLowerCase() === newRep.toLowerCase()) {\n        return false; // This account already has this representative, reject it\n      }\n\n      return true;\n    });\n\n    if (!accountsNeedingChange.length) {\n      this.changingRepresentatives = false;\n      return this.notifications.sendInfo(`None of the accounts selected need to be updated`);\n    }\n\n    // Now loop and change them\n    for (const account of accountsNeedingChange) {\n      const walletAccount = this.walletService.getWalletAccount(account.id);\n      if (!walletAccount) {\n        continue; // Unable to find account in the wallet? wat?\n      }\n\n      try {\n        const changed = await this.nanoBlock.generateChange(walletAccount, newRep, this.walletService.isLedgerWallet());\n        if (!changed) {\n          this.notifications.sendError(`Error changing representative for ${account.id}, please try again`);\n        }\n      } catch (err) {\n        this.notifications.sendError(err.message);\n      }\n    }\n\n    // Determine if a recommended rep was selected, if so we save an entry in the rep list\n    if (this.selectedRecommendedRep && this.selectedRecommendedRep.account && this.selectedRecommendedRep.account === newRep) {\n      this.representativeService.saveRepresentative(newRep, this.selectedRecommendedRep.alias, false, false);\n    }\n\n    // Good to go!\n    this.selectedAccounts = [];\n    this.toRepresentativeID = '';\n    this.representativeListMatch = '';\n    this.changingRepresentatives = false;\n    this.selectedRecommendedRep = null;\n\n    this.notifications.sendSuccess(`Successfully updated representatives!`);\n\n    let useCachedReps = false;\n\n    // If the overview panel is displayed, reload its data now\n    if (!this.hideOverview) {\n      this.loadingRepresentatives = true;\n      this.representativeOverview = await this.representativeService.getRepresentativesOverview();\n      this.loadingRepresentatives = false;\n      useCachedReps = true;\n    }\n\n    // Detect if any new reps should be changed\n    await this.representativeService.detectChangeableReps(useCachedReps ? this.representativeOverview : null);\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'rep1':\n          this.toRepresentativeID = data.content;\n          this.validateRepresentative();\n          break;\n      }\n    }, () => {}\n    );\n  }\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    \n    <div class=\"uk-margin-bottom\" uk-grid>\n      <div class=\"uk-width-expand@s uk-width-1-1\">\n        <h2 class=\"uk-heading-divider uk-text-truncate\">Representatives</h2>\n      </div>\n      <div class=\"uk-width-auto@s uk-width-1-1 uk-text-right\">\n        <a routerLink=\"/manage-representatives\" class=\"uk-button uk-button-secondary uk-align-right uk-width-auto@s\">Manage Known Reps</a>\n      </div>\n    </div>\n\n    <div uk-grid class=\"uk-animation-slide-left-small uk-margin-remove-top\">\n      <div class=\"uk-width-1-1\">\n\n        <div class=\"uk-card uk-overflow-auto\" *ngIf=\"!hideOverview\">\n          <p>Representatives participate in the <a href=\"https://docs.nano.org/protocol-design/orv-consensus/\" target=\"_blank\" rel=\"noopener noreferrer\">nano consensus protocol</a> on your behalf. You can change them at any time.</p>\n\n          <table class=\"uk-table uk-table-striped uk-table-small\">\n            <thead>\n              <tr>\n                <th scope=\"col\" class=\"representative-health-column-header hide-on-small-viewports\">Status</th>\n                <th scope=\"col\" class=\"uk-width-expand\">Representative</th>\n                <th scope=\"col\" class=\"voting-weight-column-header uk-width-1-4 uk-text-right\">Voting Weight</th>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf=\"!loadingRepresentatives\">\n              <ng-container *ngFor=\"let rep of representativeOverview\">\n                <ng-template #representativeHealth>\n                  <ng-container [ngSwitch]=\"true\">\n                    <div class=\"representative-health-status health-green\" *ngSwitchCase=\"(rep.statusText == 'trusted')\">\n                      <div class=\"health-icon\"></div>\n                      <div class=\"label\">Good</div>\n                    </div>\n                    <div class=\"representative-health-status health-green\" *ngSwitchCase=\"(rep.statusText == 'ok')\">\n                      <div class=\"health-icon\"></div>\n                      <div class=\"label\">Good</div>\n                    </div>\n                    <div class=\"representative-health-status health-yellow\" *ngSwitchCase=\"(rep.statusText == 'warn')\">\n                      <div class=\"health-icon\"></div>\n                      <div class=\"label\">Acceptable</div>\n                    </div>\n                    <div class=\"representative-health-status health-red\" *ngSwitchCase=\"(rep.statusText == 'alert')\">\n                      <div class=\"health-icon\"></div>\n                      <div class=\"label\">Bad</div>\n                    </div>\n                    <div class=\"representative-health-status health-unknown\" *ngSwitchDefault>\n                      <div class=\"health-icon\"></div>\n                      <div class=\"label\">Unknown</div>\n                    </div>\n                  </ng-container>\n                </ng-template>\n                <tr class=\"representative-row\">\n                  <td class=\"representative-health-column uk-visible-toggle uk-text-truncate hide-on-small-viewports\">\n                    <ng-template [ngTemplateOutlet]=\"representativeHealth\"></ng-template>\n                  </td>\n                  <td class=\"representative-name-column uk-text-truncate rep-container\" (click)=\"addSelectedAccounts(rep.accounts)\">\n                    <div class=\"representative-label-container\">\n                      <div class=\"account-label rep\">{{ rep.label ? rep.label : 'Unknown Rep' }}</div>\n                      <div class=\"representative-weight-percentage uk-width-auto uk-flex-inline uk-flex-middle\">\n                        <div class=\"value uk-text-small text-half-muted\" *ngIf=\"!rep.percent.isZero()\">{{ rep.percent.toFixed(2) }}%</div>\n                      </div>\n                    </div>\n                    <div class=\"representative-address uk-text-small uk-text-truncate\">\n                      <app-nano-account-id [accountID]=\"rep.id\" middle=\"auto\" class=\"nano-address-monospace\"></app-nano-account-id>\n                    </div>\n                    <div class=\"representative-health-compact only-on-small-viewports uk-margin-small-top\">\n                      <ng-template [ngTemplateOutlet]=\"representativeHealth\"></ng-template>\n                    </div>\n                  </td>\n                  <td class=\"voting-weight-column uk-width-1-4\">\n                    <div class=\"uk-text-small text-half-muted\">Total</div>\n                    <div class=\"amounts\">\n                      <span class=\"amount-integer\">{{ rep.delegatedWeight | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                      <span class=\"amount-fractional\">{{ rep.delegatedWeight | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                      <span class=\"currency-name\">NANO</span>\n                    </div>\n                  </td>\n                </tr>\n                <tr class=\"delegating-account-row\" *ngFor=\"let delegatingAccount of rep.accounts\">\n                  <td class=\"representative-health-column hide-on-small-viewports\"></td>\n                  <td class=\"delegating-account-details-column uk-text-truncate account-container\" (click)=\"addSelectedAccounts([ delegatingAccount ])\">\n                    <div class=\"delegating-account\">\n                      <div class=\"descendant-icon\"></div>\n                      <div class=\"descendant-details uk-text-truncate\">\n                        <div class=\"descendant-label\">\n                          <div class=\"account-label\">{{ getAccountLabel(delegatingAccount) }}</div>\n                        </div>\n                        <div class=\"descendant-address uk-text-truncate\">\n                          <app-nano-account-id [accountID]=\"delegatingAccount.id\" middle=\"auto\" class=\"nano-address-monospace\"></app-nano-account-id>\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  <td class=\"voting-weight-column uk-width-1-4\">\n                    <div class=\"amounts\">\n                      <span class=\"amount-integer\">{{ delegatingAccount.balance | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                      <span class=\"amount-fractional\">{{ delegatingAccount.balance | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                      <span class=\"currency-name\">NANO</span>\n                    </div>\n                  </td>\n                </tr>\n              </ng-container>\n              </ng-container>\n              <tr *ngIf=\"!loadingRepresentatives && ( !representativeOverview || !representativeOverview.length )\" class=\"uk-text-center\">\n                <td colspan=\"3\" style=\"text-align: center;\" *ngIf=\"settings.settings.serverAPI\">\n                  None of your accounts have delegated any voting weight yet, you must receive a transaction to change your representative!\n                </td>\n                <td colspan=\"3\" style=\"text-align: center;\" *ngIf=\"!settings.settings.serverAPI\">\n                  Wallet is in offline mode.\n                </td>\n              </tr>\n              <tr *ngIf=\"loadingRepresentatives\">\n                <td colspan=\"3\" style=\"text-align: center;\"><span class=\"uk-margin-right\" uk-spinner></span> Fetching information about your representatives...</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n\n\n      <div class=\"uk-width-1-1\" *ngIf=\"representativeOverview.length\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-body\" style=\"padding-bottom: 0;\">\n\n            <p class=\"uk-text-lead uk-text-center\">Change your representatives</p>\n\n\n            <div class=\"change-representative-form uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">Accounts to Change</label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"changeAccountID\" (change)=\"newAccountID()\" id=\"form-horizontal-select\">\n                    <option [value]=\"null\">Select Accounts to Change</option>\n                    <option [value]=\"'all'\">All Current Accounts</option>\n                    <option *ngFor=\"let account of walletService.wallet.accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | rai: 'mnano,true' | amountsplit: 0 }}{{ account.balance | rai: 'mnano,true' | amountsplit: 1 }} NANO)</option>\n                  </select>\n                  <ul class=\"uk-list uk-list-striped\">\n                    <li *ngFor=\"let account of selectedAccounts\">\n                      <div uk-grid>\n                        <div class=\"uk-width-5-6 uk-text-truncate\">\n                          <div *ngIf=\"(account.id === 'All Current Accounts')\">{{ account.id }}</div>\n                          <ng-container *ngIf=\"(account.id !== 'All Current Accounts')\">\n                            <div class=\"uk-margin-small-right account-label blue\">{{ getAccountLabel(account) }}</div>\n                            <div class=\"uk-text-truncate\"><app-nano-account-id [accountID]=\"account.id\" middle=\"auto\" class=\"nano-address-monospace\"></app-nano-account-id></div>\n                          </ng-container>\n                        </div>\n                        <div class=\"action-remove uk-width-1-6 uk-text-center\">\n                          <a (click)=\"removeSelectedAccount(account)\" class=\"uk-text-danger\" title=\"Remove From List\" uk-tooltip><span uk-icon=\"icon: close;\"></span></a>\n                        </div>\n                      </div>\n\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">New Representative</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('rep1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                    <input (blur)=\"validateRepresentative()\" (input)=\"searchRepresentatives()\" (focus)=\"searchRepresentatives()\" [(ngModel)]=\"toRepresentativeID\" class=\"uk-input\" id=\"form-horizontal-text2\" type=\"text\" placeholder=\"Representative Account\" #repInput>\n\n                    <div *ngIf=\"(representativeResults$ | async).length\" [hidden]=\"!showRepresentatives\" class=\"nlt-dropdown uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                      <ul class=\"uk-nav uk-nav-default\">\n                        <li class=\"uk-nav-header\">Representative List Results</li>\n                        <li class=\"uk-nav-divider\"></li>\n                        <li *ngFor=\"let rep of representativeResults$ | async\">\n                          <a (click)=\"selectRepresentative(rep.id)\">\n                            {{ rep.name }}\n                            <span *ngIf=\"rep.trusted\" class=\"uk-text-success\" style=\"margin-left: 4px;\"><span uk-icon=\"icon: star;\"></span></span>\n                            <span *ngIf=\"rep.warn\" class=\"uk-text-warning\" style=\"margin-left: 4px;\"><span uk-icon=\"icon: warning;\"></span> Avoid</span>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n\n                  </div>\n                </div>\n\n                <div class=\"uk-form-controls\" *ngIf=\"representativeListMatch\">\n                  <div class=\"uk-inline uk-width-1-1 uk-margin-small-top\">\n                    <span class=\"account-label rep\">{{ representativeListMatch }}</span>\n                  </div>\n                </div>\n\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1 uk-margin-top\">\n                    <button class=\"uk-button uk-button-default uk-button-small\" *ngIf=\"showRecommendedReps\" (click)=\"showRecommendedReps = !showRecommendedReps\"><span uk-icon=\"icon: minus; ratio: 0.8\" style=\"margin-right: 5px;\"></span> Hide Recommended Representatives</button>\n                    <button class=\"uk-button uk-button-primary uk-button-small\" *ngIf=\"!showRecommendedReps\" (click)=\"showRecommendedReps = !showRecommendedReps\"><span uk-icon=\"icon: plus; ratio: 0.8\" style=\"margin-right: 5px;\"></span> View Recommended Representatives</button>\n                  </div>\n                </div>\n              </div>\n\n              <div *ngIf=\"showRecommendedReps\">\n                <hr>\n\n                <div class=\"uk-margin\">\n                  <!-- <p class=\"uk-text-lead uk-text-center\">Recommended</p> -->\n                  <!--<h4>Or, Select a recommended representative</h4>-->\n                  <ul class=\"uk-list uk-list-striped\" style=\"margin-bottom: 0;\">\n                    <li class=\"uk-list-header\">\n                      <div uk-grid>\n                        <div class=\"uk-width-expand\">Representatives</div>\n                        <!-- <div class=\"uk-width-1-2\">Weight / Uptime / Accounts</div> -->\n                        <!--<div class=\"uk-width-1-5\">Uptime / Delegators</div>-->\n                      </div>\n                    </li>\n                  </ul>\n                  <ul class=\"uk-list uk-list-striped\" style=\"margin-top: 0;\">\n                    <li *ngIf=\"recommendedRepsLoading\" class=\"uk-text-center\">\n                      <span uk-icon=\"load\"></span> Loading reps...\n                    </li>\n                    <li *ngIf=\"recommendedRepsLoading === null\" class=\"uk-text-center\">\n                      <span uk-icon=\"load\"></span> Unable to load representatives from My Nano Ninja\n                    </li>\n                    <li *ngFor=\"let rep of recommendedRepsPaginated\">\n                      <div uk-grid >\n                        <div class=\"uk-width-expand\" (click)=\"selectRecommendedRep(rep)\" style=\"cursor: pointer;\">\n                          <span uk-tooltip title=\"Select this representative\">{{ rep.alias }}</span>\n                          <span class=\"uk-badge\" uk-tooltip title=\"My Nano Ninja Score\" style=\"margin-left: 4px;\">{{ rep.weight }}</span>\n                        </div>\n                        <div class=\"uk-width-1-2\">\n                          <!-- <a [href]=\"'https://mynano.ninja/account/' + rep.account\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"float: right;\" uk-tooltip title=\"View more details on My Nano Ninja\" class=\"uk-link-muted\"><span uk-icon=\"search\"></span></a> -->\n\n                          <!-- <span style=\"display: inline-block; margin-right: 15px;\" uk-tooltip title=\"Percentage of network voting weight delegated\" class=\"uk-text-primary\"><span uk-icon=\"users\"></span> {{ rep.percent }}%</span> -->\n                          <!-- <span style=\"display: inline-block; margin-right: 15px; color: #13ab60;\" uk-tooltip title=\"Uptime since creation\" class=\"\"><span uk-icon=\"bolt\"></span> {{ rep.uptime }}</span> -->\n\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                  <a href=\"https://mynano.ninja\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"view-all-reps-link uk-link-muted\" uk-tooltip title=\"View all verified representatives on MyNanoNinja\">View All <span uk-icon=\"icon: push; ratio: 0.9;\"></span></a>\n                  <ul class=\"uk-pagination uk-flex-center uk-flex-middle\">\n                    <li><a (click)=\"previousReps()\" uk-tooltip title=\"Previous Page\"><span uk-pagination-previous class=\"uk-icon-button\"></span></a></li>\n                    <li>Showing {{ (currentRepPage * repsPerPage)+ 1 }} - {{ (currentRepPage * repsPerPage)+ repsPerPage }} of {{ recommendedReps.length }} reps</li>\n                    <li><a (click)=\"nextReps()\" uk-tooltip title=\"Next Page\"><span uk-pagination-next class=\"uk-icon-button\"></span></a></li>\n                  </ul>\n                </div>\n\n              </div>\n\n\n            </div>\n          </div>\n          <div class=\"uk-card-footer\">\n            <button class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m uk-float-right\" type=\"button\" (click)=\"changeRepresentatives()\" *ngIf=\"!changingRepresentatives\">Update Representatives</button>\n            <button class=\"uk-button uk-button-secondary uk-width-1-1 uk-disabled nlt-icon-button\" type=\"button\" *ngIf=\"changingRepresentatives\"><span class=\"spinner\" uk-spinner=\"ratio: 0.5;\"></span> Updating Representatives</button>\n          </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport BigNumber from 'bignumber.js';\nimport {UtilService} from '../../services/util.service';\nimport {NanoBlockService} from '../../services/nano-block.service';\n// import {Subject, timer} from 'rxjs';\n// import {debounce} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {\n  AppSettingsService,\n  // LedgerService,\n  // LedgerStatus,\n  // ModalService,\n  // NotificationService,\n  // RepresentativeService,\n  // WalletService\n} from '../../services';\n// import { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\n\nexport class SearchComponent implements OnInit {\n\n  // accounts = this.walletService.wallet.accounts;\n  // isLedgerWallet = this.walletService.isLedgerWallet();\n  // isSingleKeyWallet = this.walletService.isSingleKeyWallet();\n  // viewAdvanced = false;\n  hidePopup = true;\n  string = '';\n\n  // // When we change the accounts, redetect changable reps (Debounce by 5 seconds)\n  // accountsChanged$ = new Subject();\n  // reloadRepWarning$ = this.accountsChanged$.pipe(debounce(() => timer(5000)));\n\n  constructor(\n    private http: HttpClient,\n    // private walletService: WalletService,\n    // private notificationService: NotificationService,\n    // public modal: ModalService,\n    // public settings: AppSettingsService,\n    private nanoBlock: NanoBlockService,\n    // private representatives: RepresentativeService,\n    private router: Router,\n    private util: UtilService,\n    // private ledger: LedgerService,\n    // private translocoService: TranslocoService\n    ) { }\n\n  async ngOnInit() {\n\n    var on = false\n\n    // this.showPopup = false\n\n    window.addEventListener(\n      \"message\",\n      (event) => {\n        if (event.data && typeof event.data === 'string' && event.data.includes('nano:')) {\n          \n          this.string = event.data\n\n          const params = new URLSearchParams(this.string.split('?')[1]);\n\n          this.router.navigate(['send'], { queryParams: { \n            to: event.data.replace('nano:', '').split('?')[0],\n            amount: params.getAll('amount') || \"0\",\n            callback: params.getAll('callback'),\n          } });\n\n        }\n      },\n      false\n    );\n\n  }\n\n  close() {\n    this.hidePopup = true\n    // document.getElementById(\"approveDeepLink\").style.display = \"none\" ;\n  }\n\n  approve() {\n\n//     console.log( \n// this.string\n//      )\n\n    // this.router.navigate(['send'], { queryParams: { \n    //   to: this.string.replace('nano:', '').split('?')[0],\n    //   amount: this.string.replace('nano:', '').split('?')[1].replace('amount=', ''),\n    // } });\n    \n    // const newHash = await this.nanoBlock.generateSend(walletAccount, destinationID, this.rawAmount, this.walletService.isLedgerWallet());\n\n  }\n\n\n}\n","<div>\n\t<!-- <iframe src=\"http://localhost:8080\" name=\"nault\" style=\" width: 100%; height: 95vh; \" frameborder=\"0\"></iframe> -->\n\t<iframe src=\"https://nano.to\" name=\"nault\" style=\" width: 100%; height: 95vh; \" frameborder=\"0\"></iframe>\n</div>","import { Component, OnInit } from '@angular/core';\nimport BigNumber from 'bignumber.js';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ApiService} from '../../services/api.service';\nimport {UtilService} from '../../services/util.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {PriceService} from '../../services/price.service';\nimport {NanoBlockService} from '../../services/nano-block.service';\nimport { QrModalService } from '../../services/qr-modal.service';\nimport { environment } from 'environments/environment';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { HttpClient } from '@angular/common/http';\n\nconst nacl = window['nacl'];\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './send.component.html',\n  styleUrls: ['./send.component.css']\n})\nexport class SendComponent implements OnInit {\n  nano = 1000000000000000000000000;\n\n  activePanel = 'send';\n  sendDestinationType = 'external-address';\n\n  accounts = this.walletService.wallet.accounts;\n  addressBookResults$ = new BehaviorSubject([]);\n  showAddressBook = false;\n  addressBookMatch = '';\n\n  amounts = [\n    { name: 'XNO', shortName: 'XNO', value: 'mnano' },\n    { name: 'knano', shortName: 'knano', value: 'knano' },\n    { name: 'nano', shortName: 'nano', value: 'nano' },\n  ];\n  selectedAmount = this.amounts[0];\n\n  known = null;\n  amount = null;\n  amountExtraRaw = new BigNumber(0);\n  amountFiat: number|null = null;\n  rawAmount: BigNumber = new BigNumber(0);\n  fromAccount: any = {};\n  fromAccountID: any = '';\n  fromAddressBook = '';\n  toAccount: any = false;\n  toAccountID = '';\n  toOwnAccountID: any = '';\n  toAddressBook = '';\n  toAccountStatus = null;\n  amountStatus = null;\n  preparingTransaction = false;\n  confirmingTransaction = false;\n  selAccountInit = false;\n\n  constructor(\n    private http: HttpClient,\n    private router: ActivatedRoute,\n    private walletService: WalletService,\n    private addressBookService: AddressBookService,\n    private notificationService: NotificationService,\n    private nodeApi: ApiService,\n    private nanoBlock: NanoBlockService,\n    public price: PriceService,\n    private workPool: WorkPoolService,\n    public settings: AppSettingsService,\n    private util: UtilService,\n    private qrModalService: QrModalService,\n    private translocoService: TranslocoService) { }\n\n  async ngOnInit() {\n\n    const params = this.router.snapshot.queryParams;\n\n    // console.log(\"params\", params)\n\n    this.updateQueries(params);\n\n    this.addressBookService.loadAddressBook();\n\n    // Set default From account\n    this.fromAccountID = this.accounts.length ? this.accounts[0].id : '';\n\n    // Update selected account if changed in the sidebar\n    this.walletService.wallet.selectedAccount$.subscribe(async acc => {\n      if (this.activePanel !== 'send') {\n        // Transaction details already finalized\n        return;\n      }\n\n      if (this.selAccountInit) {\n        if (acc) {\n          this.fromAccountID = acc.id;\n        } else {\n          this.findFirstAccount();\n        }\n      }\n      this.selAccountInit = true;\n    });\n\n    // Update the account if query params changes. For example donation button while active on this page\n    this.router.queryParams.subscribe(queries => {\n      this.updateQueries(queries);\n    });\n\n    // Set the account selected in the sidebar as default\n    if (this.walletService.wallet.selectedAccount !== null) {\n      this.fromAccountID = this.walletService.wallet.selectedAccount.id;\n    } else {\n      // If \"total balance\" is selected in the sidebar, use the first account in the wallet that has a balance\n      this.findFirstAccount();\n    }\n\n    this.known = await this.http.post('https://rpc.nano.to', { action: \"known\" }).toPromise()\n    \n  }\n\n  updateQueries(params) {\n    if ( params && params.amount && Number(params.amount) ) {\n      const amountAsRaw = new BigNumber(params.amount);\n\n      // const amountAsRaw =\n      //   new BigNumber(\n      //     this.util.nano.mnanoToRaw(\n      //       new BigNumber(params.amount)\n      //     )\n      //   );\n\n      this.amountExtraRaw = amountAsRaw.mod(this.nano).floor();\n\n      this.amount =\n        this.util.nano.rawToMnano(\n          amountAsRaw.minus(this.amountExtraRaw)\n        ).toNumber();\n\n      this.syncFiatPrice();\n    }\n\n    if (params && params.to) {\n      this.toAccountID = params.to;\n      this.validateDestination();\n      this.sendDestinationType = 'external-address';\n    }\n  }\n\n  async findFirstAccount() {\n    // Load balances before we try to find the right account\n    if (this.walletService.wallet.balance.isZero()) {\n      await this.walletService.reloadBalances();\n    }\n\n    // Look for the first account that has a balance\n    const accountIDWithBalance = this.accounts.reduce((previous, current) => {\n      if (previous) return previous;\n      if (current.balance.gt(0)) return current.id;\n      return null;\n    }, null);\n\n    if (accountIDWithBalance) {\n      this.fromAccountID = accountIDWithBalance;\n    }\n  }\n\n  // An update to the Nano amount, sync the fiat value\n  syncFiatPrice() {\n    if (!this.validateAmount() || Number(this.amount) === 0) {\n      this.amountFiat = null;\n      return;\n    }\n    const rawAmount = this.getAmountBaseValue(this.amount || 0).plus(this.amountExtraRaw);\n    if (rawAmount.lte(0)) {\n      this.amountFiat = null;\n      return;\n    }\n\n    // This is getting hacky, but if their currency is bitcoin, use 6 decimals, if it is not, use 2\n    const precision = this.settings.settings.displayCurrency === 'BTC' ? 1000000 : 100;\n\n    // Determine fiat value of the amount\n    const fiatAmount = this.util.nano.rawToMnano(rawAmount).times(this.price.price.lastPrice)\n      .times(precision).floor().div(precision).toNumber();\n\n    this.amountFiat = fiatAmount;\n  }\n\n  // An update to the fiat amount, sync the nano value based on currently selected denomination\n  syncNanoPrice() {\n    if (!this.amountFiat) {\n      this.amount = '';\n      return;\n    }\n    if (!this.util.string.isNumeric(this.amountFiat)) return;\n    const rawAmount = this.util.nano.mnanoToRaw(new BigNumber(this.amountFiat).div(this.price.price.lastPrice));\n    const nanoVal = this.util.nano.rawToNano(rawAmount).floor();\n    const nanoAmount = this.getAmountValueFromBase(this.util.nano.nanoToRaw(nanoVal));\n\n    this.amount = nanoAmount.toNumber();\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  searchAddressBook() {\n\n    this.showAddressBook = true;\n    \n    const search = this.toAccountID || '';\n    \n    const addressBook = this.addressBookService.addressBook;\n\n    let matches = []\n    \n    addressBook.filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1).slice(0, 5).map(a => matches.push({ name: a.name + ' (Local Account)', account: a.account }))\n    \n    this.known\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5).map(a => matches.push({ name: (a.github ? this.capitalizeFirstLetter(a.name) + ' (Verified)' : this.capitalizeFirstLetter(a.name)), account: a.address }))\n\n    this.addressBookResults$.next(matches);\n\n  }\n\n  selectBookEntry(account) {\n    this.showAddressBook = false;\n    this.toAccountID = account;\n    this.searchAddressBook();\n    this.validateDestination();\n  }\n\n  setSendDestinationType(newType: string) {\n    this.sendDestinationType = newType;\n  }\n\n  async validateDestination() {\n    // The timeout is used to solve a bug where the results get hidden too fast and the click is never registered\n    setTimeout(() => this.showAddressBook = false, 400);\n\n    // Remove spaces from the account id\n    this.toAccountID = this.toAccountID.replace(/ /g, '');\n\n    this.addressBookMatch = (\n        this.addressBookService.getAccountName(this.toAccountID)\n      || this.getAccountLabel(this.toAccountID, null)\n    );\n\n    if (!this.addressBookMatch && this.toAccountID === environment.donationAddress) {\n      this.addressBookMatch = 'Nault Donations';\n    }\n\n    // const accountInfo = await this.walletService.walletApi.accountInfo(this.toAccountID);\n    this.toAccountStatus = null;\n    if (this.util.account.isValidAccount(this.toAccountID)) {\n      const accountInfo = await this.nodeApi.accountInfo(this.toAccountID);\n      if (accountInfo.error) {\n        if (accountInfo.error === 'Account not found') {\n          this.toAccountStatus = 1;\n        }\n      }\n      if (accountInfo && accountInfo.frontier) {\n        this.toAccountStatus = 2;\n      }\n    } else {\n      this.toAccountStatus = 0;\n    }\n  }\n\n  getAccountLabel(accountID, defaultLabel) {\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === accountID);\n\n    if (walletAccount == null) {\n      return defaultLabel;\n    }\n\n    return (this.translocoService.translate('general.account') + ' #' + walletAccount.index);\n  }\n\n  validateAmount() {\n    if (this.util.account.isValidNanoAmount(this.amount)) {\n      this.amountStatus = 1;\n      return true;\n    } else {\n      this.amountStatus = 0;\n      return false;\n    }\n  }\n\n  getDestinationID() {\n    if (this.sendDestinationType === 'external-address') {\n      return this.toAccountID;\n    }\n\n    // 'own-address'\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === this.toOwnAccountID);\n\n    if (!walletAccount) {\n      // Unable to find receiving account in wallet\n      return '';\n    }\n\n    if (this.toOwnAccountID === this.fromAccountID) {\n      // Sending to the same address is only allowed via 'external-address'\n      return '';\n    }\n\n    return this.toOwnAccountID;\n  }\n\n  async sendTransaction() {\n    const destinationID = this.getDestinationID();\n    const isValid = this.util.account.isValidAccount(destinationID);\n    if (!isValid) {\n      return this.notificationService.sendWarning(`To account address is not valid`);\n    }\n    if (!this.fromAccountID || !destinationID) {\n      return this.notificationService.sendWarning(`From and to account are required`);\n    }\n    if (!this.validateAmount()) {\n      return this.notificationService.sendWarning(`Invalid XNO amount`);\n    }\n\n    this.preparingTransaction = true;\n\n    const from = await this.nodeApi.accountInfo(this.fromAccountID);\n    const to = await this.nodeApi.accountInfo(destinationID);\n\n    this.preparingTransaction = false;\n\n    if (!from) {\n      return this.notificationService.sendError(`From account not found`);\n    }\n\n    from.balanceBN = new BigNumber(from.balance || 0);\n    to.balanceBN = new BigNumber(to.balance || 0);\n\n    this.fromAccount = from;\n    this.toAccount = to;\n\n    const rawAmount = this.getAmountBaseValue(this.amount || 0);\n    this.rawAmount = rawAmount.plus(this.amountExtraRaw);\n\n    const nanoAmount = this.rawAmount.div(this.nano);\n\n    if (this.amount < 0 || rawAmount.lessThan(0)) {\n      return this.notificationService.sendWarning(`Amount is invalid`);\n    }\n    if (from.balanceBN.minus(rawAmount).lessThan(0)) {\n      return this.notificationService.sendError(`From account does not have enough XNO`);\n    }\n\n    // Determine a proper raw amount to show in the UI, if a decimal was entered\n    this.amountExtraRaw = this.rawAmount.mod(this.nano);\n\n    // Determine fiat value of the amount\n    this.amountFiat = this.util.nano.rawToMnano(rawAmount).times(this.price.price.lastPrice).toNumber();\n\n    this.fromAddressBook = (\n        this.addressBookService.getAccountName(this.fromAccountID)\n      || this.getAccountLabel(this.fromAccountID, 'Account')\n    );\n\n    this.toAddressBook = (\n        this.addressBookService.getAccountName(destinationID)\n      || this.getAccountLabel(destinationID, null)\n    );\n\n    // Start precomputing the work...\n    // this.workPool.addWorkToCache(this.fromAccount.frontier, 1);\n\n    this.activePanel = 'confirm';\n\n  }\n\n  async confirmTransaction() {\n    const params = this.router.snapshot.queryParams;\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === this.fromAccountID);\n    if (!walletAccount) {\n      throw new Error(`Unable to find sending account in wallet`);\n    }\n    if (this.walletService.isLocked()) {\n      const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n      if (wasUnlocked === false) {\n        return;\n      }\n    }\n\n    this.confirmingTransaction = true;\n\n    try {\n\n      const destinationID = this.getDestinationID();\n\n      const newHash = await this.nanoBlock.generateSend(walletAccount, destinationID,\n        this.rawAmount, this.walletService.isLedgerWallet());\n\n      if (newHash) {\n        \n        if (params.callback && String(params.callback).includes('api.nano.to')) {\n          // try {\n          function sleep(ms) {\n            return new Promise(resolve => setTimeout(resolve, ms));\n          }\n          await sleep(2000)\n          await this.http.post(String(params.callback), {}).toPromise()\n          this.notificationService.removeNotification('success-send');\n          // this.notificationService.sendSuccess('Success', { identifier: 'success-send' });\n          // this.notificationService.sendSuccess(`Checkout complete.`, { identifier: 'success-send' });\n          window.alert('Name purchased. It can take up to 5 minutes to reflect globally.')\n          // } catch(e) {\n          //   console.error(params.callback, e)\n          // }\n        }\n\n        this.notificationService.removeNotification('success-send');\n        if (!params.callback) this.notificationService.sendSuccess(`Sent ${this.amount}`, { identifier: 'success-send' });\n        this.activePanel = 'send';\n        this.amount = null;\n        this.amountFiat = null;\n        this.resetRaw();\n        this.toAccountID = '';\n        this.toOwnAccountID = '';\n        this.toAccountStatus = null;\n        this.fromAddressBook = '';\n        this.toAddressBook = '';\n        this.addressBookMatch = '';\n      } else {\n        if (!this.walletService.isLedgerWallet()) {\n          this.notificationService.sendError(`There was an error sending your transaction, please try again.`);\n        }\n      }\n\n    } catch (err) {\n      this.notificationService.sendError(`There was an error sending your transaction: ${err.message}`);\n    }\n\n\n    this.confirmingTransaction = false;\n\n    await this.walletService.reloadBalances();\n  }\n\n  setMaxAmount() {\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === this.fromAccountID);\n    if (!walletAccount) {\n      return;\n    }\n\n    this.amountExtraRaw = walletAccount.balanceRaw;\n\n    const nanoVal = this.util.nano.rawToNano(walletAccount.balance).floor();\n    const maxAmount = this.getAmountValueFromBase(this.util.nano.nanoToRaw(nanoVal));\n    this.amount = maxAmount.toNumber();\n    this.syncFiatPrice();\n  }\n\n  resetRaw() {\n    this.amountExtraRaw = new BigNumber(0);\n  }\n\n  getAmountBaseValue(value) {\n\n    switch (this.selectedAmount.value) {\n      default:\n      case 'nano': return this.util.nano.nanoToRaw(value);\n      case 'knano': return this.util.nano.knanoToRaw(value);\n      case 'mnano': return this.util.nano.mnanoToRaw(value);\n    }\n  }\n\n  getAmountValueFromBase(value) {\n    switch (this.selectedAmount.value) {\n      default:\n      case 'nano': return this.util.nano.rawToNano(value);\n      case 'knano': return this.util.nano.rawToKnano(value);\n      case 'mnano': return this.util.nano.rawToMnano(value);\n    }\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'account1':\n          this.toAccountID = data.content;\n          this.validateDestination();\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n  copied() {\n    this.notificationService.removeNotification('success-copied');\n    this.notificationService.sendSuccess(`Successfully copied to clipboard!`, { identifier: 'success-copied' });\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">{{ (sendDestinationType === 'own-address') ? 'Transfer' : 'Send' }}</h2>\n\n    <!-- Send Panel -->\n    <div uk-grid *ngIf=\"activePanel == 'send'\" class=\"uk-animation-slide-left-small\">\n      <div class=\"send-types-wrapper uk-width-1-1 uk-text-center\">\n        <div class=\"send-types-frame\" style=\"display:flex;margin:auto;width:100%;flex-wrap:wrap;\">\n          <button [class]=\"['send-types-tab', 'uk-text-truncate', (sendDestinationType === 'external-address') ? 'send-types-tab-active' : 'send-types-tab-inactive', 'uk-button', (sendDestinationType === 'external-address') ? 'uk-button-primary' : 'uk-button-secondary']\" type=\"button\" (click)=\"setSendDestinationType('external-address')\">Send to address</button>\n          <button [class]=\"['send-types-tab', 'uk-text-truncate', (sendDestinationType === 'own-address') ? 'send-types-tab-active' : 'send-types-tab-inactive', 'uk-button', (sendDestinationType === 'own-address') ? 'uk-button-primary' : 'uk-button-secondary']\" type=\"button\" (click)=\"setSendDestinationType('own-address')\">Transfer between own accounts</button>\n        </div>\n      </div>\n\n      <div class=\"uk-width-1-1\">\n\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-body\">\n            <div class=\"uk-form-horizontal\">\n\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">From Account</label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"form-select-source uk-select\" [(ngModel)]=\"fromAccountID\" (change)=\"resetRaw()\" id=\"form-horizontal-select\">\n                    <option *ngFor=\"let account of accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | rai: 'mnano,true' | amountsplit: 0 }}{{ account.balance | rai: 'mnano,true' | amountsplit: 1 }} NANO)</option>\n                  </select>\n                </div>\n              </div>\n\n              <div class=\"uk-margin\" *ngIf=\"( sendDestinationType === 'external-address' )\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">To Address</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"form-input-destination uk-inline uk-width-1-1\">\n                    <a class=\"hide-on-small-viewports uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('account1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                    \n                    <input (blur)=\"validateDestination()\" (input)=\"searchAddressBook()\" (focus)=\"searchAddressBook()\" [(ngModel)]=\"toAccountID\" [ngClass]=\"{ 'uk-form-success': toAccountStatus === 2, 'uk-form-danger': toAccountStatus === 0 }\" class=\"uk-input\" id=\"form-horizontal-text2\" type=\"text\" placeholder=\"Address to send to\" autocomplete=\"off\">\n\n                    <div *ngIf=\"(addressBookResults$ | async).length\" [hidden]=\"!showAddressBook\" class=\"nlt-dropdown uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                      <ul class=\"uk-nav uk-nav-default\">\n                        <li class=\"uk-nav-header\">Nano Known</li>\n                        <li class=\"uk-nav-divider\"></li>\n                        <li *ngFor=\"let book of addressBookResults$ | async\">\n                          <a (click)=\"selectBookEntry(book.account)\">{{ book.name }}</a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"uk-form-controls\" *ngIf=\"addressBookMatch\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <span class=\"account-label blue uk-margin-small-top\">{{ addressBookMatch }}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"uk-margin\" *ngIf=\"( sendDestinationType === 'own-address' )\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">To Account</label>\n                <div class=\"uk-form-controls\">\n                  <select required class=\"form-select-destination uk-select\" [(ngModel)]=\"toOwnAccountID\" id=\"form-horizontal-select\">\n                    <option value=\"\" disabled selected hidden>Account to transfer to</option>\n                    <ng-container *ngFor=\"let account of accounts\">\n                      <option [value]=\"account.id\" *ngIf=\"account.id !== fromAccountID\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | rai: 'mnano,true' | amountsplit: 0 }}{{ account.balance | rai: 'mnano,true' | amountsplit: 1 }} NANO)</option>\n                    </ng-container>\n                  </select>\n                </div>\n              </div>\n\n              <div uk-grid>\n                <div class=\"uk-width-1-1\">\n                  <label class=\"uk-form-label\" for=\"form-horizontal-text\">Amount</label>\n                  <div class=\"form-amount uk-form-controls\">\n                    <div uk-grid>\n                      <div class=\"uk-width-1-1\">\n                        <div class=\"uk-inline uk-width-1-1\">\n                          <a class=\"max-amt-button uk-form-icon uk-form-icon-flip form-icon-btn\" (click)=\"setMaxAmount()\" uk-tooltip title=\"Set Maximum Amount\">Max</a>\n                          <label class=\"uk-form-icon uk-link-reset uk-link-muted xno-symbol\" for=\"form-horizontal-amount\"></label>\n                          <input [(ngModel)]=\"amount\" [ngClass]=\"{ 'uk-form-danger': amountStatus === 0 }\" style=\"padding-left: 52px !important;\" class=\"uk-input\" id=\"form-horizontal-text\" (input)=\"syncFiatPrice()\" type=\"number\" step=\"any\" placeholder=\"Amount of {{ selectedAmount.name }}\" maxlength=\"40\">\n                        </div>\n\n                      </div>\n\n                      <div *ngIf=\"amountExtraRaw.gt(0)\" class=\"amount-raw-extra uk-width-1-1 uk-text-small text-half-muted\">\n                        <span uk-tooltip title=\"Additional raw to {{ (sendDestinationType === 'own-address') ? 'transfer' : 'send' }}\">+{{ amountExtraRaw.toString(10) }} raw</span> &nbsp; <a class=\"uk-text-danger\" (click)=\"resetRaw()\" uk-tooltip title=\"Remove the additional raw amount from the total amount\" uk-icon=\"icon: close\"></a>\n                      </div>\n\n                      <div class=\"uk-width-1-1\" style=\"margin-top: 10px;\" *ngIf=\"settings.settings.displayCurrency\">\n                        <div class=\"uk-width-1-1 uk-inline\">\n                          <a class=\"uk-form-icon uk-link-reset uk-link-muted fiat-currency-ticker\" uk-tooltip title=\"Last Price: {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / NANO\">{{ settings.settings.displayCurrency | currencySymbol }}</a>\n                          <input [(ngModel)]=\"amountFiat\" (input)=\"syncNanoPrice()\" style=\"padding-left: 52px !important;\" class=\"uk-input\" id=\"form-horizontal-text-fiat\" type=\"number\" step=\"any\" placeholder=\"Amount of {{ settings.settings.displayCurrency }}\">\n                        </div>\n                      </div>\n\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <div class=\"uk-card-footer\">\n            <div class=\"uk-text-right@s nlt-button-group\">\n              <button class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m uk-float-right nlt-icon-button\" type=\"button\" (click)=\"sendTransaction()\" *ngIf=\"!preparingTransaction\">\n                {{ (sendDestinationType === 'own-address') ? 'Transfer' : 'Send' }}\n              </button>\n              <button class=\"uk-button uk-button-secondary uk-disabled uk-width-1-1@s uk-width-auto@m uk-float-right nlt-icon-button\" type=\"button\" *ngIf=\"preparingTransaction\">\n                <span class=\"spinner\" uk-spinner=\"ratio: 0.5;\"></span>\n                Preparing transaction\n              </button>\n              <button\n                class=\"only-on-small-viewports uk-button uk-button-secondary uk-width-1-1@s uk-width-auto@m uk-float-right nlt-icon-button\"\n                [class.uk-disabled]=\"preparingTransaction\"\n                type=\"button\"\n                (click)=\"preparingTransaction ? return : openQR('account1','account')\"\n                *ngIf=\"(sendDestinationType !== 'own-address')\"\n              >\n                Scan QR code\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- End Send Panel -->\n\n    <!-- Confirmation Panel -->\n    <div uk-grid *ngIf=\"activePanel == 'confirm'\" class=\"uk-animation-slide-left\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\" style=\"margin-bottom: 20px;\">\n          <div class=\"uk-card-body\" style=\"padding: 15px;\">\n            <div class=\"uk-text-danger\">You are about to send</div>\n            <div class=\"block-amount-primary uk-text-danger\">\n              <span class=\"amount-integer\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n              <span class=\"amount-fractional\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n              <span class=\"currency-name\">NANO</span>\n            </div>\n            <div *ngIf=\"amountExtraRaw.gt(0)\" class=\"uk-text-small text-half-muted\" style=\"margin: 2px 0 -2px 0;\">+{{ amountExtraRaw.toString(10) }} raw</div>\n            <div style=\"margin: 8px 0 -1px 0;\" class=\"text-half-muted\" *ngIf=\"settings.settings.displayCurrency\">{{ amountFiat | fiat: settings.settings.displayCurrency }}</div>\n            <div style=\"margin: 1px 0 -1px 0;\" class=\"uk-text-muted\" *ngIf=\"settings.settings.displayCurrency\">{{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / NANO</div>\n          </div>\n        </div>\n\n        <div class=\"account-snippet-container\" *ngIf=\"fromAccount && toAccount\" style=\"margin-bottom: 20px;\">\n          <div class=\"account-snippet uk-text-truncate\">\n            <div class=\"uk-card uk-card-default uk-text-truncate\" [class.identicons-enabled]=\"(settings.settings.identiconsStyle !== 'none')\">\n              <div class=\"uk-card-header\">\n                <div class=\"snippet-caption uk-text-small text-half-muted\">From Account</div>\n                <div class=\"uk-flex uk-flex-nowrap uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                  <a [routerLink]=\"'/account/' + fromAccountID\" class=\"uk-link-reset account-container uk-text-truncate\" uk-tooltip title=\"View Account Details\">\n                    <div class=\"identicon-address-book-row\">\n                      <app-nano-identicon scale=\"12\" [accountID]=\"fromAccountID\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                      <div class=\"account-label uk-text-truncate\" *ngIf=\"fromAddressBook\">{{ fromAddressBook }}</div>\n                    </div>\n                    <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\"><app-nano-account-id [accountID]=\"fromAccountID\"></app-nano-account-id></div>\n                  </a>\n                  <div class=\"snippet-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                    <ul class=\"uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"fromAccountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div class=\"uk-card-body\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-2 uk-text-muted\">\n                    <div class=\"uk-text-small text-half-muted\" style=\"height: 25px;\">Current Balance</div>\n                    <span class=\"block-balance\">\n                      <span class=\"balance-amount-primary\">\n                        <span class=\"amount-integer\">{{ (fromAccount.balance || 0) | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                        <span class=\"amount-fractional\">{{ (fromAccount.balance || 0) | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                        <span class=\"currency-name\">NANO</span>\n                      </span>\n                    </span>\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-right\">\n                    <div class=\"uk-text-small text-half-muted\" style=\"height: 25px;\"></div>\n                    <span class=\"block-balance\">\n                      <span class=\"balance-amount-primary uk-text-danger\">\n                        <span class=\"amount-sign\">-</span>\n                        <span class=\"amount-integer\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                        <span class=\"amount-fractional\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                        <span class=\"currency-name\">NANO</span>\n                      </span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"account-snippet uk-text-truncate\">\n            <div class=\"uk-card uk-card-default uk-text-truncate\" [class.identicons-enabled]=\"(settings.settings.identiconsStyle !== 'none')\">\n              <div class=\"uk-card-header\">\n                <div class=\"snippet-caption uk-text-small text-half-muted\">To Account</div>\n                <div class=\"uk-flex uk-flex-nowrap uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                  <a [routerLink]=\"'/account/' + getDestinationID()\" class=\"uk-link-reset account-container uk-text-truncate\" uk-tooltip title=\"View Account Details\">\n                    <div class=\"identicon-address-book-row\">\n                      <app-nano-identicon scale=\"12\" [accountID]=\"getDestinationID()\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                      <div class=\"account-label uk-text-truncate\" *ngIf=\"toAddressBook\">{{ toAddressBook }}</div>\n                    </div>\n                    <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\"><app-nano-account-id [accountID]=\"getDestinationID()\"></app-nano-account-id></div>\n                  </a>\n                  <div class=\"snippet-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                    <ul class=\"uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"getDestinationID()\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div class=\"uk-card-body\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-2 uk-text-muted\">\n                    <div class=\"uk-text-small text-half-muted\" style=\"height: 25px;\">Current Balance</div>\n                    <span class=\"block-balance\">\n                      <span class=\"balance-amount-primary\">\n                        <span class=\"amount-integer\">{{ (toAccount.balance || 0) | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                        <span class=\"amount-fractional\">{{ (toAccount.balance || 0) | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                        <span class=\"currency-name\">NANO</span>\n                      </span>\n                    </span>\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-right\">\n                    <div class=\"uk-text-small text-half-muted\" style=\"height: 25px;\"></div>\n                    <span class=\"block-balance\">\n                      <span class=\"balance-amount-primary uk-text-success\">\n                        <span class=\"amount-sign\">+</span>\n                        <span class=\"amount-integer\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                        <span class=\"amount-fractional\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                        <span class=\"currency-name\">NANO</span>\n                      </span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"uk-text-right@s nlt-button-group\">\n          <button (click)=\"activePanel = 'send'\" class=\"uk-button uk-button-danger uk-width-1-1@s uk-width-auto@m\">Cancel</button>\n          <button *ngIf=\"!confirmingTransaction\" class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m\" (click)=\"confirmTransaction()\">Confirm & Send</button>\n          <button *ngIf=\"confirmingTransaction\" class=\"uk-button uk-button-secondary uk-disabled nlt-icon-button nlt-icon-button-inline uk-width-1-1@s uk-width-auto@m\"><span class=\"spinner\" uk-spinner=\"ratio: 0.5;\"></span> Sending</button>\n        </div>\n      </div>\n    </div>\n    <!-- End Confirmation Panel -->\n\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport BigNumber from 'bignumber.js';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {UtilService, StateBlock, TxType} from '../../services/util.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NanoBlockService} from '../../services/nano-block.service';\nimport {ApiService} from '../../services/api.service';\nimport {PriceService} from '../../services/price.service';\nimport * as QRCode from 'qrcode';\nimport * as bip39 from 'bip39';\nimport * as bip39Wallet from 'nanocurrency-web';\nimport { QrModalService } from '../../services/qr-modal.service';\nimport hermes from 'hermes-channel';\nimport * as nanocurrency from 'nanocurrency';\nimport { MusigService } from '../../services/musig.service';\nimport { environment } from 'environments/environment';\n\nconst INDEX_MAX = 4294967295;\n// navigation source for cancel command (excluding camera source because too complicated to fix)\nenum navSource {'remote', 'multisig'}\n@Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.css']\n})\n\nexport class SignComponent implements OnInit {\n  paramsString = '';\n  activePanel = 'error';\n  shouldSign: boolean = null; // if a block has been scanned for signing (or if it is a block to process)\n  accounts = this.walletService.wallet.accounts;\n  addressBookResults$ = new BehaviorSubject([]);\n  showAddressBook = false;\n  addressBookMatch = '';\n  amount = null;\n  rawAmount: BigNumber = new BigNumber(0);\n  amountFiat: number|null = null;\n  fromAccountID: any = '';\n  fromAccountBalance: BigNumber = null;\n  fromAddressBook = '';\n  toAccountID = '';\n  toAccountBalance: BigNumber = null;\n  toAddressBook = '';\n  repAddressBook = '';\n  toAccountStatus = null;\n  currentBlock: StateBlock = null;\n  previousBlock: StateBlock = null;\n  txType: TxType = null;\n  txTypes = TxType; // to access enum in html\n  txTypeMessage = '';\n  confirmingTransaction = false;\n  shouldGenWork = false;\n  signTypes: string[] = ['Internal Wallet or Ledger', 'Seed or Mnemonic+Index', 'Private or Expanded Key', 'Multisig'];\n  signTypeSelected: string = this.signTypes[0];\n  signatureAccount = '';\n  signatureMessage = '';\n  signatureMessageSuccess = '';\n  walletAccount = null;\n  nullBlock = '0000000000000000000000000000000000000000000000000000000000000000';\n  qrString = null;\n  qrCodeImage = null;\n  qrCodeImageBlock = null;\n  validSeed = false;\n  validIndex = true;\n  validPrivkey = false;\n  sourceSecret = '';\n  sourcePriv = '';\n  index = '0';\n  privateKey = null; // the final private key to sign with if using manual entry\n  privateKeyExpanded = false; // if a private key is provided manually and it's expanded 128 char\n  processedHash: string = null;\n  finalSignature: string = null;\n  // With v21 the 1x is the old 8x and max will be 8x due to the webgl threshold is max ffffffff00000000\n  thresholds = [\n    { name: '1x', value: 1 },\n    { name: '2x', value: 2 },\n    { name: '4x', value: 4 },\n    { name: '8x', value: 8 }\n  ];\n  selectedThreshold = this.thresholds[0].value;\n  selectedThresholdOld = this.selectedThreshold;\n  navigationSource = navSource.remote;\n\n  /**\n   MULTISIG\n   */\n  multisigLink = this.getMultisigLink(); // link to be shared to other multisig participants\n  participants = 2;\n  validParticipants = true;\n  savedParticipants = 0;\n  tabData = [];\n  tabListenerActive = false;\n  tabCount = null;\n  inputMultisigData = [];\n  multisigAccount = '';\n  outputMultisigData = '';\n  activeStep = 1;\n  inputAdd = '';\n  validInputAdd = false;\n  isInputAddDisabled = false;\n  tabMode = false;\n  tabChecked = false; // if multi-tab mode enabled\n  blockHash = '';\n  remoteTabInit = false;\n  qrModal: any = null;\n  qrCodeImageOutput = null;\n  showAddBox = false;\n  isDesktop = environment.desktop;\n  // END MULTISIG\n\n  constructor(\n    private router: ActivatedRoute,\n    private routerService: Router,\n    private walletService: WalletService,\n    private addressBookService: AddressBookService,\n    private notificationService: NotificationService,\n    private nanoBlock: NanoBlockService,\n    private workPool: WorkPoolService,\n    public settings: AppSettingsService,\n    private api: ApiService,\n    private util: UtilService,\n    private qrModalService: QrModalService,\n    private musigService: MusigService,\n    public price: PriceService) { }\n\n  @ViewChild('dataAddFocus') _el: ElementRef;\n\n  async ngOnInit() {\n    const UIkit = window['UIkit'];\n    const qrModal = UIkit.modal('#qr-code-modal');\n    this.qrModal = qrModal;\n\n    const params = this.router.snapshot.queryParams;\n    this.signTypeSelected = this.walletService.isConfigured() ? this.signTypes[0] : this.signTypes[1];\n\n    // Multisig tab listening functions\n    hermes.on('tab-ping', (data) => {\n      console.log('Tab was pinged');\n      if (this.blockHash === data[0]) {\n        // Init step for remote tab\n        this.remoteTabInit = true;\n        this.tabMode = true;\n        this.tabChecked = true;\n        this.participants = parseInt(data[2], 10);\n        this.tabListener(false); // start in passive mode\n        this.multiSign();\n      } else {\n        console.log('Non-matching block hash: This: ' + this.blockHash + ' - Remote: ' + data[0]);\n        // When having 3 or more tabs, sometime one of the tabs are pinged twice for unknown reason\n        // and results in this false positive warning. Some cached herms data in the pipeline?\n        this.notificationService.sendWarning('Tab was pinged but the block hash does not match');\n      }\n    });\n\n    // Dual tab mode for auto signing\n    hermes.on('sign-remote', (data) => {\n      console.log('Receiving data from other tab: ' + data);\n      if (!this.tabData.includes(data[1])) {\n        this.tabData.push(data[1]);\n      }\n    });\n\n    // Multi-tab mode checkbox\n    hermes.on('multi-tab', (data) => {\n      console.log('Multi-tab mode enabled');\n      this.tabChecked = data;\n    });\n\n    // Multi-tab mode participant changes\n    hermes.on('participants', (data) => {\n      console.log('Participant count changed');\n      this.participants = data;\n    });\n\n    let shouldGetFromAccount = false;\n\n    if ('sign' in params && 'n_account' in params && 'n_previous' in params && 'n_representative' in params &&\n      'n_balance' in params && 'n_link' in params) {\n      this.currentBlock = {'account': params.n_account, 'previous': params.n_previous, 'representative': params.n_representative,\n      'balance': params.n_balance, 'link': params.n_link, 'signature': 'n_signature' in params ? params.n_signature : '',\n      'work': 'n_work' in params ? params.n_work : ''};\n\n      this.paramsString = 'sign?sign=' + params.sign + '&n_account=' + params.n_account + '&n_previous=' + params.n_previous +\n      '&n_representative=' + params.n_representative + '&n_balance=' + params.n_balance + '&n_link=' + params.n_link +\n      ('n_signature' in params ? ('&n_signature=' + params.n_signature) : '') + ('n_work' in params ? ('&n_work=' + params.n_work) : '');\n\n      // previous block won't be included with open block (or maybe if another wallet implement this feature)\n      if ('p_account' in params && 'p_previous' in params && 'p_representative' in params && 'p_balance' in params && 'p_link' in params) {\n        this.previousBlock = {'account': params.p_account, 'previous': params.p_previous, 'representative': params.p_representative,\n        'balance': params.p_balance, 'link': params.p_link, 'signature': 'p_signature' in params ? params.p_signature : '', 'work': ''};\n\n        this.paramsString = this.paramsString + '&p_account=' + params.p_account + '&p_previous=' + params.p_previous +\n        '&p_representative=' + params.p_representative + '&p_balance=' + params.p_balance + '&p_link=' + params.p_link +\n        ('p_signature' in params ? ('&p_signature=' + params.p_signature) : '');\n      }\n\n      this.shouldSign = params.sign === '1' ? true : false;\n      this.shouldGenWork = this.currentBlock.work === '' && !this.shouldSign;\n\n      // check if multisig\n      if (params.participants) {\n        this.signTypeSelected = this.signTypes[3];\n        this.participants = parseInt(params.participants, 10);\n        this.participantChange(this.participants);\n        this.navigationSource = navSource.multisig;\n      }\n\n      // check if both new block and previous block hashes matches (balances has not been tampered with) and have valid parameters\n      if (this.previousBlock && this.verifyBlock(this.currentBlock) && this.verifyBlock(this.previousBlock)) {\n        // it's a send block\n        if (new BigNumber(this.previousBlock.balance).gt(new BigNumber(this.currentBlock.balance))) {\n          this.txType = TxType.send;\n          this.txTypeMessage = 'send';\n          this.rawAmount = new BigNumber(this.previousBlock.balance).minus(new BigNumber(this.currentBlock.balance));\n          this.fromAccountID = this.currentBlock.account;\n          this.toAccountID = this.util.account.getPublicAccountID(this.util.hex.toUint8(this.currentBlock.link));\n          this.fromAccountBalance = new BigNumber(this.previousBlock.balance);\n          // sending to itself\n          if (this.fromAccountID === this.toAccountID) {\n            this.toAccountBalance = this.fromAccountBalance;\n          }\n        } else if (new BigNumber(this.previousBlock.balance).eq(new BigNumber(this.currentBlock.balance)) &&\n            this.previousBlock.representative !== this.currentBlock.representative && this.currentBlock.link === this.nullBlock) {\n          // it's a change block\n          this.txType = TxType.change;\n          this.txTypeMessage = 'change the representative';\n          this.rawAmount = new BigNumber(0);\n          this.fromAccountID = this.currentBlock.account;\n          this.toAccountID = this.currentBlock.account;\n          this.fromAccountBalance = new BigNumber(this.currentBlock.balance);\n          this.toAccountBalance = new BigNumber(this.currentBlock.balance);\n        } else if (new BigNumber(this.previousBlock.balance).lt(\n            new BigNumber(this.currentBlock.balance)) && this.currentBlock.previous !== this.nullBlock) {\n          // it's a receive block\n          this.txType = TxType.receive;\n          this.txTypeMessage = 'receive';\n          this.rawAmount = new BigNumber(this.currentBlock.balance).minus(new BigNumber(this.previousBlock.balance));\n\n          shouldGetFromAccount = true;\n\n          this.toAccountID = this.currentBlock.account;\n          this.toAccountBalance = new BigNumber(this.previousBlock.balance);\n        } else {\n          return this.notificationService.sendError(`Meaningless block. The balance and representative are unchanged!`, {length: 0});\n        }\n\n        this.amount = this.util.nano.rawToMnano(this.rawAmount).toString(10);\n\n        this.prepareTransaction();\n      } else if (!this.previousBlock && this.verifyBlock(this.currentBlock)) {\n        // No previous block present (open block)\n        // TODO: Make all block subtypes also possible to sign even if previous block is missing, but with less displayed data\n        if (this.currentBlock.previous === this.nullBlock) {\n          this.txType = TxType.open;\n          this.txTypeMessage = 'receive';\n          this.rawAmount = new BigNumber(this.currentBlock.balance);\n\n          shouldGetFromAccount = true;\n\n          this.toAccountID = this.currentBlock.account;\n          this.toAccountBalance = new BigNumber(0);\n        } else {\n          return this.notificationService.sendError(`Only OPEN block is currently supported when previous block is missing`, {length: 0});\n        }\n\n        this.amount = this.util.nano.rawToMnano(this.rawAmount).toString(10);\n        this.prepareTransaction();\n      } else {\n        return;\n      }\n    } else {\n      this.notificationService.sendError(`Incorrect parameters provided for signing!`, {length: 0});\n      return;\n    }\n\n    // Extract block hash (used with multisig)\n    const block: StateBlock = {account: this.currentBlock.account, link: this.currentBlock.link, previous: this.currentBlock.previous,\n      representative: this.currentBlock.representative, balance: this.currentBlock.balance, signature: null, work: null};\n    this.blockHash = this.util.hex.fromUint8(this.util.nano.hashStateBlock(block));\n\n    this.addressBookService.loadAddressBook();\n\n    // do this last since it can technically get stuck or take some time if connection is bad\n    // for example when using offline computer on ubuntu it has been reported it get stuck if not\n    // set to offline mode in the settings\n    if (shouldGetFromAccount) {\n      // get from-account info if online\n      let recipientInfo = null;\n      this.fromAccountID = null;\n      try {\n        recipientInfo = await this.api.blockInfo(this.currentBlock.link);\n      } catch {}\n      if (recipientInfo && 'block_account' in recipientInfo) {\n        this.fromAccountID = recipientInfo.block_account;\n      }\n    }\n  }\n\n  setFocus() {\n    this.showAddBox = true;\n    // Auto set focus to the box (but must be rendered first!)\n    setTimeout(() => { this._el.nativeElement.focus(); }, 200);\n  }\n\n  removeSelectedData(data) {\n    this.inputMultisigData.splice(this.inputMultisigData.indexOf(data), 1);\n    if (this.savedParticipants > 0) {\n      this.savedParticipants = this.savedParticipants - 1;\n      this.isInputAddDisabled = false;\n    }\n  }\n\n  // abort and navigate back\n  cancel() {\n    switch (this.navigationSource) {\n      case navSource.remote:\n        this.routerService.navigate(['remote-signing']);\n        break;\n      case navSource.multisig:\n        this.routerService.navigate(['multisig']);\n    }\n  }\n\n  verifyBlock(block: StateBlock) {\n    if (this.util.account.isValidAccount(block.account) &&\n      this.util.account.isValidAccount(block.representative) &&\n      this.util.account.isValidAmount(block.balance) &&\n      this.util.nano.isValidHash(block.previous) &&\n      this.util.nano.isValidHash(block.link)) {\n      return true;\n    } else {\n      this.notificationService.sendError(`The provided blocks contain invalid values!`, {length: 0});\n      return false;\n    }\n  }\n\n  verifyBlockHash(currentBlock: StateBlock, previousBlock: StateBlock) {\n    const block: StateBlock = {account: previousBlock.account, link: previousBlock.link, previous: previousBlock.previous,\n      representative: previousBlock.representative, balance: previousBlock.balance, signature: null, work: null};\n    const previousHash = this.util.hex.fromUint8(this.util.nano.hashStateBlock(block));\n    if (!currentBlock.previous || previousHash !== currentBlock.previous) {\n      this.notificationService.sendError(`The hash of the previous block does not match the frontier in the new block!`, {length: 0});\n    }\n    return currentBlock.previous && previousHash === currentBlock.previous;\n  }\n\n  searchAddressBook() {\n    this.showAddressBook = true;\n    const search = this.toAccountID || '';\n    const addressBook = this.addressBookService.addressBook;\n\n    const matches = addressBook\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5);\n\n    this.addressBookResults$.next(matches);\n  }\n\n  signTypeChange() {\n    this.signatureMessage = '';\n    this.signatureMessageSuccess = '';\n    let params = this.paramsString;\n\n    switch (this.signTypeSelected) {\n      // wallet\n      case this.signTypes[0]:\n        this.walletAccount = this.accounts.find(a => a.id.replace('xrb_', 'nano_') === this.signatureAccount);\n        if (!this.walletAccount) {\n          this.signatureMessage = 'Could not find a matching wallet account to sign with. Make sure it\\'s added under your accounts';\n        } else {\n          this.signatureMessageSuccess = 'A matching account found!';\n        }\n        break;\n\n      case this.signTypes[1]:\n        this.seedChange(this.sourceSecret);\n        break;\n\n      case this.signTypes[2]:\n        this.privkeyChange(this.sourcePriv);\n        break;\n\n      case this.signTypes[3]:\n        this.privkeyChangeMulti(this.sourcePriv);\n        params = this.paramsString + '&participants=' + this.participants;\n        this.multisigLink = this.getMultisigLink();\n        break;\n    }\n    this.setURLParams(params);\n  }\n\n  powChange() {\n    if (this.shouldGenWork) {\n      this.prepareWork();\n    }\n  }\n\n  changeThreshold() {\n    // multiplier has changed, clear the cache and recalculate\n    if (this.selectedThreshold !== this.selectedThresholdOld) {\n      const workBlock = this.txType === TxType.open ? this.util.account.getAccountPublicKey(this.toAccountID) : this.currentBlock.previous;\n      this.workPool.removeFromCache(workBlock);\n      console.log('PoW multiplier changed: Clearing cache');\n      this.powChange();\n    }\n  }\n\n  prepareWork() {\n    // The block has been verified\n    if (this.toAccountID) {\n      console.log('Precomputing work...');\n      const workBlock = this.txType === TxType.open ? this.util.account.getAccountPublicKey(this.toAccountID) : this.currentBlock.previous;\n      this.workPool.addWorkToCache(workBlock, this.selectedThreshold);\n    }\n  }\n\n  async prepareTransaction() {\n    // Determine fiat value of the amount (if not offline mode)\n    if (this.settings.settings.serverAPI) {\n      this.amountFiat = this.util.nano.rawToMnano(this.rawAmount).times(this.price.price.lastPrice).toNumber();\n    }\n\n    this.fromAddressBook = this.addressBookService.getAccountName(this.fromAccountID);\n    this.toAddressBook = this.addressBookService.getAccountName(this.toAccountID);\n    this.repAddressBook = this.addressBookService.getAccountName(this.currentBlock.representative);\n\n    this.activePanel = 'confirm';\n    // Start precopmuting the work...\n    if (this.shouldGenWork) {\n      this.prepareWork();\n    }\n\n    if (this.txType === TxType.send || this.txType === TxType.change) {\n      this.signatureAccount = this.fromAccountID.replace('xrb_', 'nano_').toLowerCase();\n    } else if (this.txType === TxType.receive || this.txType === TxType.open) {\n      this.signatureAccount = this.toAccountID.replace('xrb_', 'nano_').toLowerCase();\n    }\n\n    if (this.shouldSign) {\n      this.signTypeChange();\n    }\n  }\n\n  // Create signature for the block\n  async confirmTransaction(signature = '') {\n    let walletAccount = this.walletAccount;\n    let isLedger = this.walletService.isLedgerWallet();\n\n    // using internal wallet\n    if (this.signTypeSelected === this.signTypes[0] && walletAccount) {\n      if (this.walletService.isLocked()) {\n        const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n        if (wasUnlocked === false) {\n          return;\n        }\n      }\n    } else if (this.signTypeSelected === this.signTypes[0]) {\n      return this.notificationService.sendWarning('Could not find a matching wallet account to sign with. Make sure it\\'s added under your accounts');\n    }\n\n    // using seed or private key\n    if ((this.signTypeSelected === this.signTypes[1] && !this.validSeed) || (this.signTypeSelected === this.signTypes[2]\n      && !this.validPrivkey) || (this.signTypeSelected === this.signTypes[3] && !this.validPrivkey)) {\n        return this.notificationService.sendWarning('Could not find a valid private key to sign with.');\n      }\n    if (this.signTypeSelected === this.signTypes[1] || this.signTypeSelected === this.signTypes[2]) {\n      isLedger = false;\n      // create dummy wallet that only contains needed elements for signature\n      walletAccount = {keyPair: {secretKey: this.util.hex.toUint8(this.privateKey), expanded: this.privateKeyExpanded}};\n    }\n\n    this.confirmingTransaction = true;\n\n    // sign the block (if not multisig)\n    let block: StateBlock;\n    if (this.signTypeSelected !== this.signTypes[3]) {\n      block = await this.nanoBlock.signOfflineBlock(walletAccount, this.currentBlock,\n        this.previousBlock, this.txType, this.shouldGenWork, this.selectedThreshold, isLedger);\n      console.log('Signature: ' + block.signature || 'Error');\n      console.log('Work: ' + block.work || 'Not applied');\n\n      if (!block.signature) {\n        this.confirmingTransaction = false;\n        return this.notificationService.sendError('The block could not be signed!', {length: 0});\n      }\n    } else {\n      // Multisig signature\n      block = this.currentBlock;\n\n      // Check if aggregated multisig account matches the account we want to sign\n      if (block.account !== this.multisigAccount) {\n        return this.notificationService.sendError('The private keys does not match the multisig account you want to sign!', {length: 0});\n      }\n      // Check the given signature format\n      if (!this.util.nano.isValidSignature(signature)) {\n        return this.notificationService.sendError('The multi-signature was invalid!', {length: 0});\n      }\n      block.signature = signature;\n      const openEquiv = this.txType === TxType.open;\n      // Start precomputing the work...\n      if (this.shouldGenWork) {\n        // For open blocks which don't have a frontier, use the public key of the account\n        const workBlock = openEquiv ? this.util.account.getAccountPublicKey(this.multisigAccount) : block.previous;\n        if (!this.workPool.workExists(workBlock)) {\n          this.notificationService.sendInfo(`Generating Proof of Work...`, { identifier: 'pow', length: 0 });\n        }\n\n        const tempWork = await this.workPool.getWork(workBlock, this.selectedThreshold);\n        if (tempWork.length === 16 ) {\n          block.work = tempWork;\n        }\n        this.notificationService.removeNotification('pow');\n        this.workPool.removeFromCache(workBlock);\n      }\n      this.resetMultisig();\n    }\n\n    this.qrString = null;\n    this.qrCodeImageBlock = null;\n    this.finalSignature = null;\n\n    const UIkit = window['UIkit'];\n    const modal = UIkit.modal('#signed-modal');\n    modal.show();\n\n    this.finalSignature = block.signature;\n    // remove work param if empty\n    if (block.work === '') {\n      delete block['work'];\n    }\n\n    try {\n      this.clean(block);\n      if (this.previousBlock) {\n        this.clean(this.previousBlock);\n      }\n      if (this.previousBlock) {\n        this.qrString = 'nanoprocess:{\"block\":' + JSON.stringify(block) +\n        ',\"previous\":' + JSON.stringify(this.previousBlock) + '}';\n      } else {\n        this.qrString = 'nanoprocess:{\"block\":' + JSON.stringify(block) + '}';\n      }\n\n      const qrCode = await QRCode.toDataURL(this.qrString, { errorCorrectionLevel: 'L', scale: 16 });\n      this.qrCodeImageBlock = qrCode;\n    } catch (error) {\n      this.confirmingTransaction = false;\n      console.log(error);\n      return this.notificationService.sendError('The block could not be signed!', {length: 0});\n    }\n\n    this.confirmingTransaction = false;\n    this.notificationService.sendSuccess('The block has been signed and can be sent to the network!', {length: 0});\n  }\n\n  // Send signed block to the network\n  async confirmBlock() {\n    this.confirmingTransaction = true;\n    const workBlock = this.txType === TxType.open ? this.util.account.getAccountPublicKey(this.toAccountID) : this.currentBlock.previous;\n    if (this.shouldGenWork) {\n      // For open blocks which don't have a frontier, use the public key of the account\n      if (!this.workPool.workExists(workBlock)) {\n        this.notificationService.sendInfo(`Generating Proof of Work...`, { identifier: 'pow', length: 0 });\n      }\n\n      if (this.txType === TxType.receive || this.txType === TxType.open) {\n        this.currentBlock.work = await this.workPool.getWork(workBlock, 1 / 64);\n      } else {\n        this.currentBlock.work = await this.workPool.getWork(workBlock, 1);\n      }\n      this.notificationService.removeNotification('pow');\n\n      this.workPool.removeFromCache(workBlock);\n    }\n\n    // Validate that frontier is still the same and the previous balance is correct\n    if (this.txType !== TxType.open) {\n      const accountInfo = await this.api.accountInfo(this.signatureAccount);\n      if ('frontier' in accountInfo && accountInfo.frontier !== this.currentBlock.previous) {\n        this.confirmingTransaction = false;\n        return this.notificationService.sendError('The block can\\'t be processed because the account frontier has changed!', {length: 0});\n      }\n      if ('balance' in accountInfo && accountInfo.balance !== this.previousBlock.balance) {\n        this.confirmingTransaction = false;\n        return this.notificationService.sendError('The block can\\'t be processed because the current account balance does not match the previous block!', {length: 0});\n      }\n    }\n\n    if (this.currentBlock.signature === '') {\n      this.confirmingTransaction = false;\n      return this.notificationService.sendError('The block can\\'t be processed because the signature is missing!', {length: 0});\n    }\n\n    if (this.currentBlock.work === '') {\n      this.confirmingTransaction = false;\n      return this.notificationService.sendError('The block can\\'t be processed because work is missing!', {length: 0});\n    }\n\n    // Process block\n    const blockData: any = this.currentBlock;\n    blockData.type = 'state';\n    const processResponse = await this.api.process(blockData, this.txType);\n    if (processResponse && processResponse.hash) {\n      // Add new hash into the work pool but does not make much sense for this case\n      // this.workPool.addWorkToCache(processResponse.hash);\n      this.workPool.removeFromCache(workBlock);\n      this.processedHash = processResponse.hash;\n      this.notificationService.sendSuccess('Successfully processed the block!');\n    } else {\n      console.log(processResponse);\n      this.notificationService.sendError('There was an error while processing the block! Please see the console.', {length: 0});\n    }\n    this.confirmingTransaction = false;\n  }\n\n  copied() {\n    this.notificationService.removeNotification('success-copied');\n    this.notificationService.sendSuccess(`Successfully copied to clipboard!`, { identifier: 'success-copied' });\n  }\n\n  clean(obj) {\n    for (const propName in obj) {\n      if (obj[propName] === null || obj[propName] === undefined) {\n        delete obj[propName];\n      }\n    }\n  }\n\n  seedChange(input) {\n    const keyType = this.checkMasterKey(input);\n    this.validSeed = keyType !== null;\n    if (this.validSeed && this.validIndex) {\n      this.verifyKey(keyType, input, Number(this.index));\n    } else {\n      this.signatureMessage = '';\n      this.signatureMessageSuccess = '';\n    }\n  }\n\n  privkeyChange(input) {\n    const privKey = this.convertPrivateKey(input);\n    if (privKey !== null) {\n      // Match given block account with with private key\n      const pubKey = this.util.account.generateAccountKeyPair(this.util.hex.toUint8(privKey), this.privateKeyExpanded).publicKey;\n      const address = this.util.account.getPublicAccountID(pubKey);\n      if (address === this.signatureAccount ) {\n        this.validPrivkey = true;\n        this.privateKey = privKey;\n        this.signatureMessage = '';\n        this.signatureMessageSuccess = 'The private key match the account!';\n        return;\n      } else {\n        this.signatureMessage = 'The account for this private key does not match!';\n      }\n    } else {\n      this.signatureMessage = '';\n    }\n    this.signatureMessageSuccess = '';\n    this.validPrivkey = false;\n    this.privateKey = '';\n  }\n\n  indexChange(index) {\n    this.validIndex = true;\n    if (this.util.string.isNumeric(index) && index % 1 === 0) {\n      index = parseInt(index, 10);\n      if (!this.util.nano.isValidIndex(index)) {\n        this.validIndex = false;\n      }\n      if (index > INDEX_MAX) {\n        this.validIndex = false;\n      }\n    } else {\n      this.validIndex = false;\n    }\n\n    if (this.validSeed && this.validIndex) {\n      const keyType = this.checkMasterKey(this.sourceSecret);\n      this.verifyKey(keyType, this.sourceSecret, Number(this.index));\n    } else {\n      this.signatureMessage = '';\n      this.signatureMessageSuccess = '';\n    }\n  }\n\n  verifyKey(keyType: string, input: string, index: number) {\n    let seed = '';\n    let privKey1 = '';\n    let privKey2 = '';\n\n    // input is mnemonic\n    if (keyType === 'mnemonic') {\n      seed = bip39.mnemonicToEntropy(input).toUpperCase();\n      // seed must be 64 or the nano wallet can't be created.\n      // This is the reason 12-words can't be used because the seed would be 32 in length\n      if (seed.length !== 64) {\n        this.notificationService.sendWarning(`Mnemonic not 24 words`);\n        return;\n      }\n    }\n\n    // nano seed\n    if (keyType === 'nano_seed' || seed !== '' || keyType === 'bip39_seed') {\n      if (seed === '') { // seed from input, no mnemonic\n        seed = input;\n      }\n      // start with blake2b derivation\n      if (keyType !== 'bip39_seed') {\n          privKey1 = this.util.hex.fromUint8(this.util.account.generateAccountSecretKeyBytes(this.util.hex.toUint8(seed), index));\n      }\n      // also check using bip39/44 derivation\n      let bip39Seed;\n      // take 128 char bip39 seed directly from input or convert it from a 64 char nano seed (entropy)\n      if (keyType === 'bip39_seed') {\n        bip39Seed = input;\n      } else {\n        bip39Seed = bip39Wallet.wallet.generate(seed).seed;\n      }\n      privKey2 = bip39Wallet.wallet.accounts(bip39Seed, index, index)[0].privateKey;\n    }\n\n    // Match given block account with any of the private keys extracted\n    const pubKey1 = this.util.account.generateAccountKeyPair(this.util.hex.toUint8(privKey1), this.privateKeyExpanded).publicKey;\n    const pubKey2 = this.util.account.generateAccountKeyPair(this.util.hex.toUint8(privKey2), this.privateKeyExpanded).publicKey;\n    const address1 = this.util.account.getPublicAccountID(pubKey1);\n    const address2 = this.util.account.getPublicAccountID(pubKey2);\n\n    if (address1 === this.signatureAccount || address2 === this.signatureAccount ) {\n      if (address1 === this.signatureAccount) {\n        this.privateKey = privKey1;\n      } else {\n        this.privateKey = privKey2;\n      }\n      this.signatureMessage = '';\n      this.signatureMessageSuccess = 'A matching private key found!';\n    } else {\n      this.signatureMessage = 'Could not find a matching private key!';\n      this.signatureMessageSuccess = '';\n    }\n  }\n\n  // Validate type of master key\n  checkMasterKey(key) {\n    // validate nano seed\n    if (key.length === 64) {\n      if (this.util.nano.isValidSeed(key)) {\n        return 'nano_seed';\n      }\n    }\n    // validate bip39 seed\n    if (key.length === 128) {\n      if (this.util.hex.isHex(key)) {\n        return 'bip39_seed';\n      }\n    }\n    // validate mnemonic\n    if (bip39.validateMnemonic(key)) {\n      return 'mnemonic';\n    }\n    return null;\n  }\n\n  convertPrivateKey(key) {\n    if (key.length === 128) {\n      this.privateKeyExpanded = true;\n      // expanded key includes deterministic R value material which we ignore\n      return key.substring(0, 64);\n    } else if (key.length === 64) {\n      return key;\n    } else {\n      return null;\n    }\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'seed1':\n          this.sourceSecret = data.content;\n          this.seedChange(data.content);\n          break;\n        case 'priv1':\n          this.sourcePriv = data.content;\n          if (this.signTypeSelected === this.signTypes[2]) {\n            this.privkeyChange(data.content);\n          } else if (this.signTypeSelected === this.signTypes[3]) {\n            this.privkeyChangeMulti(data.content);\n          }\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n  async generateOutputQR() {\n    const qrCode = await QRCode.toDataURL(`${this.outputMultisigData}`, { errorCorrectionLevel: 'M', scale: 16 });\n    this.qrCodeImageOutput = qrCode;\n  }\n\n  // Replace the address bar content\n  setURLParams(params) {\n    if (window.history.pushState) {\n      try {\n        window.history.replaceState(null, null, '/' + params);\n      } catch (error) {\n        // console.log(error)\n      }\n    }\n  }\n\n  /**\n   * MULTISIG\n   */\n\n  privkeyChangeMulti(input) {\n    const privKey = this.convertPrivateKey(input);\n    if (privKey !== null) {\n      if (this.util.nano.isValidHash(privKey)) {\n        this.validPrivkey = true;\n        this.privateKey = privKey;\n        this.signatureMessage = '';\n        return;\n      } else {\n        this.signatureMessage = 'Invalid private key';\n      }\n    } else {\n      this.signatureMessage = '';\n    }\n    this.signatureMessageSuccess = '';\n    this.validPrivkey = false;\n    this.privateKey = '';\n  }\n\n  // Start signing procedure using multiple tabs\n  runMultiTabs() {\n    console.log('Starting automatic tab signing');\n    // Ping other tabs and make sure enough of them respond and with correct hash\n    this.tabCount = 1;\n    hermes.on('tab-pong', (data) => {\n      console.log('Tab ' + this.tabCount + ' responded');\n      if (this.blockHash === data[0]) {\n        this.tabCount++;\n        if (this.tabCount === this.participants) {\n          hermes.off('tab-pong'); // unsubscribe\n          // Start the process\n          console.log('Starting step 1 from local tab');\n          this.tabListener(false); // start in passive mode to wait for signing process\n          // Init step\n          this.multiSign();\n        }\n      }\n    });\n    this.tabMode = true,\n    console.log('Send ping to other tabs');\n    hermes.send('tab-ping', [this.blockHash, '', this.participants]);\n    // Set a timeout\n    setTimeout(() => {  this.checkTabs(); }, 5000);\n  }\n\n  checkTabs() {\n    if (this.tabCount && this.tabCount < this.participants) {\n      hermes.off('tab-pong'); // unsubscribe\n      return this.notificationService.sendWarning('Make sure you have enough tabs running with the same block hash');\n    }\n  }\n\n  // Checking input tab data and act when enough data is available for the current active step\n  tabListener(activate = false) {\n    this.tabListenerActive = activate ? true : this.tabListenerActive;\n    if (this.tabListenerActive) {\n      const stepData = [];\n      for (const data of this.tabData) {\n        if (data.substring(0, 1) === (this.activeStep - 1).toString()) {\n          stepData.push(data);\n        }\n      }\n      // Enough data for this step\n      if (stepData.length >= this.participants - 1) {\n        this.tabListenerActive = false;\n        // Input the data and let the automation start\n        for (const data of stepData) {\n          this.inputAdd = data; // emulate user input\n          this.inputAddChange(data);\n        }\n      }\n    }\n\n    if (this.tabMode) {\n      setTimeout(() => {  this.tabListener(); }, 200);\n    }\n  }\n\n  resetMultisig() {\n    this.participants = 2;\n    this.validParticipants = true;\n    this.savedParticipants = 0;\n    this.tabData = [];\n    this.tabListenerActive = false;\n    this.tabCount = null;\n    this.inputMultisigData = [];\n    this.multisigAccount = '';\n    this.outputMultisigData = '';\n    this.qrCodeImageOutput = null;\n    this.activeStep = 1;\n    this.inputAdd = '';\n    this.validInputAdd = false;\n    this.isInputAddDisabled = false;\n    this.tabMode = false;\n    this.tabChecked = false;\n    this.remoteTabInit = false;\n    this.privateKey = '';\n    this.sourcePriv = '';\n    this.validPrivkey = false;\n    this.confirmingTransaction = false;\n    this.showAddBox = false;\n\n    this.setURLParams(this.paramsString + '&participants=' + this.participants);\n    this.multisigLink = this.getMultisigLink();\n    this.musigService.resetMusig();\n    hermes.off('tab-pong'); // unsubscribe\n  }\n  // activating multi-tab mode\n  tabModeCheck() {\n    hermes.send('multi-tab', this.tabChecked);\n    if (this.tabChecked) {\n      hermes.send('participants', this.participants);\n      hermes.send('hash', this.blockHash);\n    }\n  }\n\n  // number of participants changes\n  participantChange(index) {\n    if (this.util.string.isNumeric(index) && index >= 2 && index < 1000) {\n      this.validParticipants = true;\n      this.participants = parseInt(index, 10);\n      this.setURLParams(this.paramsString + '&participants=' + index);\n      this.multisigLink = this.getMultisigLink();\n    } else {\n      this.validParticipants = false;\n    }\n\n    if (this.validParticipants) {\n      if (this.tabChecked) {\n        hermes.send('participants', this.participants);\n      }\n    } else {\n      this.signatureMessage = '';\n      this.signatureMessageSuccess = '';\n    }\n  }\n\n  // generate shared data to be sent to other participants\n  getMultisigLink() {\n    return 'nanosign:{\"block\":' + JSON.stringify(this.currentBlock) +\n    ',\"previous\":' + JSON.stringify(this.previousBlock) +  ',\"participants\":' + this.participants + '}';\n  }\n\n  // the field for input data has changed\n  inputAddChange(hashString) {\n    const hashFull = hashString.substring(2);\n    let valid = true;\n    if (hashFull.length === 64) {\n      if (!this.util.nano.isValidHash(hashFull)) {\n        valid = false;\n      }\n    } else if (hashFull.length === 128) {\n      if (!this.util.nano.isValidHash(hashFull.substring(0, 64)) || !this.util.nano.isValidHash(hashFull.substring(64, 128))) {\n        valid = false;\n      }\n    } else {\n      valid = false;\n    }\n    const step = parseInt(hashString.substring(0, 1), 10);\n    let correctStep = true;\n    if (step !== this.activeStep - 1) {\n      correctStep = false;\n    }\n\n    if (!valid || !correctStep) {\n      this.validInputAdd = false;\n      if (hashString !== '') {\n        if (!correctStep) {\n          console.log('Wrong input for this step. Expected step ' + (this.activeStep - 1));\n          this.notificationService.removeNotification('wrong-input');\n          this.notificationService.sendWarning('Wrong input for this step. Expected step ' + (this.activeStep - 1), {identifier: 'wrong-input'});\n        }\n      }\n      return;\n    }\n    this.validInputAdd = true;\n    // Automatic tab mode is running, go ahead with the next step\n    if (this.tabMode) {\n      this.addMultisigInputData();\n    }\n  }\n\n  // append input data to complete data\n  addMultisigInputData() {\n    if (!this.validInputAdd) {\n      this.notificationService.sendWarning('Data not in valid format');\n      return;\n    }\n    if (this.outputMultisigData.includes(this.inputAdd.substring(2).toUpperCase())) {\n      this.notificationService.sendWarning('Don\\'t add your own output');\n      return;\n    }\n    if (this.inputMultisigData.includes(this.inputAdd.substring(2).toUpperCase())) {\n      this.notificationService.sendWarning('Data already added');\n      return;\n    }\n    if (this.savedParticipants >= this.participants) {\n      this.notificationService.sendWarning('You already have all data needed given number of participants');\n    }\n\n    this.inputMultisigData.push(this.inputAdd.toUpperCase());\n    this.savedParticipants = this.savedParticipants + 1;\n    this.inputAdd = '';\n    this.showAddBox = false;\n    this.validInputAdd = false;\n    if (this.savedParticipants === this.participants - 1) {\n      this.isInputAddDisabled = true;\n      // Automatic tab mode is running, go ahead with the next step\n      if (this.tabMode) {\n        this.tabListenerActive = false; // pause processing input data\n        this.multiSign();\n      }\n    }\n  }\n\n  // copy data to be shared\n  copyUrl() {\n    const dummy = document.createElement('input');\n    document.body.appendChild(dummy);\n    dummy.setAttribute('value', this.multisigLink);\n    dummy.select();\n    const success = document.execCommand('copy');\n    document.body.removeChild(dummy);\n\n    if (success) {\n      this.notificationService.sendSuccess('Successfully copied multisig URL to clipboard!');\n    } else {\n      this.notificationService.sendError('Failed to copy multisig URL to clipboard!');\n    }\n  }\n\n  startMultisig() {\n    if (this.validPrivkey) {\n      if (this.tabChecked) {\n        this.runMultiTabs();\n      } else {\n        this.multiSign();\n      }\n    } else {\n      this.notificationService.sendWarning('Invalid private key!');\n    }\n  }\n\n  multiSign() {\n    const result = this.musigService.runMultiSign(this.privateKey, this.blockHash, this.inputMultisigData);\n    // used for validation when the final nano block is created\n    if (result && result.multisig !== '') {\n      this.multisigAccount = result.multisig;\n    }\n\n    if (result?.stage === 0) {\n      console.log('Started multisig using block hash: ' + this.blockHash);\n      // Combine output with public key\n      const output = this.activeStep + ':' + this.util.hex.fromUint8(result.outbuf.subarray(33)) +\n        nanocurrency.derivePublicKey(this.privateKey);\n      this.activeStep = this.activeStep + 1;\n      this.outputMultisigData = output.toUpperCase();\n      this.generateOutputQR();\n      this.multisigAccount = ''; // reset for this new run\n\n      // If using multi-tabs, send back the result\n      if (this.tabMode) {\n        if (this.remoteTabInit) {\n          this.remoteTabInit = false;\n          console.log('Responding with pong');\n          this.tabListenerActive = true; // resume processing input data\n          hermes.send('tab-pong', [this.blockHash, this.outputMultisigData]);\n          hermes.send('sign-remote', [this.blockHash, this.outputMultisigData]);\n        } else {\n          console.log('Sending signing data');\n          this.tabListenerActive = true; // resume processing input data\n          hermes.send('sign-remote', [this.blockHash, this.outputMultisigData]);\n        }\n      }\n    } else if (result) {\n      // Finished\n      if (result.stage === 3) {\n        this.inputMultisigData = [];\n        this.outputMultisigData = '';\n        this.qrCodeImageOutput = null;\n        this.tabMode = false;\n        this.tabListenerActive = false;\n        this.confirmTransaction(this.util.hex.fromUint8(result.outbuf.subarray(1)));\n      } else {\n        this.outputMultisigData = this.activeStep + ':' + this.util.hex.fromUint8(result.outbuf.subarray(1));\n        this.generateOutputQR();\n        this.inputMultisigData = [];\n        this.isInputAddDisabled = false;\n        this.savedParticipants = 0;\n        this.inputAdd = '';\n        this.validInputAdd = false;\n        this.activeStep = this.activeStep + 1;\n        // If using dual tabs, send back the result\n        if (this.tabMode) {\n          this.tabListenerActive = true; // resume processing input data\n          hermes.send('sign-remote', [this.blockHash, this.outputMultisigData]);\n        }\n      }\n    }\n  }\n  // END MULTISIG\n}\n","<div uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 *ngIf=\"shouldSign\">Sign Nano Block</h2>\n    <h2 *ngIf=\"!shouldSign\">Process Nano Block</h2>\n\n    <!-- Confirmation Panel -->\n    <div uk-grid *ngIf=\"activePanel == 'confirm'\" class=\"uk-animation-slide-left\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\" style=\"margin-bottom: 20px;\">\n          <div class=\"uk-card-body\" style=\"padding: 15px;\">\n            <div [class.uk-text-danger]=\"txType == txTypes.send\" [class.uk-text-success]=\"txType == txTypes.receive\" [class.text-rep-change]=\"txType == txTypes.change\">\n              <div *ngIf=\"txType == txTypes.change\" style=\"margin-bottom: 7px;\" uk-icon=\"icon: cog; ratio: 1.2;\"><br></div>\n              <div *ngIf=\"!qrCodeImageBlock && shouldSign\">You are about to sign a block to {{txTypeMessage}}</div>\n              <div *ngIf=\"qrCodeImageBlock && shouldSign\">You have signed a block to {{txTypeMessage}}</div>\n              <div *ngIf=\"!blockProcessed && !shouldSign\">You are about to {{txTypeMessage}}</div>\n              <div *ngIf=\"blockProcessed && !shouldSign\">You have processed a block to {{txTypeMessage}}</div>\n            </div>\n\n            <div *ngIf=\"txType != txTypes.change\">\n              <div class=\"block-amount-primary\" [class.uk-text-danger]=\"txType == txTypes.send\" [class.uk-text-success]=\"txType == txTypes.receive\">\n                <span class=\"amount-integer\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                <span class=\"amount-fractional\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                <span class=\"currency-name\">NANO</span>\n              </div>\n              <div style=\"margin: 8px 0 -1px 0;\" class=\"text-half-muted\" *ngIf=\"settings.settings.displayCurrency && amountFiat !== null\">{{ amountFiat | fiat: settings.settings.displayCurrency }}</div>\n              <div style=\"margin: 1px 0 -1px 0;\" class=\"uk-text-muted\" *ngIf=\"settings.settings.displayCurrency && amountFiat !== null\">{{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / NANO</div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"account-snippet-container\" style=\"margin-bottom: 20px;\">\n          <div class=\"account-snippet uk-text-truncate\">\n            <div class=\"uk-card uk-card-default uk-text-truncate\" [class.identicons-enabled]=\"(settings.settings.identiconsStyle !== 'none')\">\n              <div class=\"uk-card-header\">\n                <div *ngIf=\"txType === txTypes.change\" class=\"snippet-caption uk-text-small text-half-muted\">Account</div>\n                <div *ngIf=\"txType !== txTypes.change\" class=\"snippet-caption uk-text-small text-half-muted\">From Account</div>\n                <div class=\"uk-flex uk-flex-nowrap uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                  <a [routerLink]=\"'/account/' + fromAccountID\" class=\"uk-link-reset account-container uk-text-truncate\" uk-tooltip title=\"View Account Details\">\n                    <div class=\"identicon-address-book-row\">\n                      <app-nano-identicon scale=\"12\" [accountID]=\"fromAccountID\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                      <div class=\"account-label uk-text-truncate\" *ngIf=\"fromAddressBook\">{{ fromAddressBook }}</div>\n                    </div>\n                    <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\"><app-nano-account-id [accountID]=\"fromAccountID\"></app-nano-account-id></div>\n                  </a>\n                  <div class=\"snippet-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                    <ul class=\"uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"fromAccountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"txType !== txTypes.change\" class=\"uk-card-body\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-2 uk-text-muted\">\n                    <div class=\"uk-text-small text-half-muted\" style=\"height: 25px;\">Balance</div>\n                    <span class=\"block-balance\">\n                      <span class=\"balance-amount-primary\">\n                        <span class=\"amount-integer\">{{ fromAccountBalance ? (fromAccountBalance | rai: 'mnano,true' | amountsplit: 0) : 'N/A' }}</span>\n                        <span class=\"amount-fractional\">{{ fromAccountBalance ? (fromAccountBalance | rai: 'mnano,true' | amountsplit: 1) : '' }}</span>\n                        <span class=\"currency-name\">{{ fromAccountBalance ? 'NANO' : '' }}</span>\n                      </span>\n                    </span>\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-right\">\n                    <div class=\"uk-text-small text-half-muted\" style=\"height: 25px;\"></div>\n                    <span class=\"block-balance\">\n                      <span class=\"balance-amount-primary uk-text-danger\">\n                        <span class=\"amount-sign\">-</span>\n                        <span class=\"amount-integer\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                        <span class=\"amount-fractional\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                        <span class=\"currency-name\">NANO</span>\n                      </span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"account-snippet uk-text-truncate\">\n            <div class=\"uk-card uk-card-default uk-text-truncate\" [class.identicons-enabled]=\"(settings.settings.identiconsStyle !== 'none')\">\n              <div class=\"uk-card-header\">\n                <div *ngIf=\"txType === txTypes.change\" class=\"snippet-caption uk-text-small text-half-muted\">New Representative</div>\n                <div *ngIf=\"txType !== txTypes.change\" class=\"snippet-caption uk-text-small text-half-muted\">To Account</div>\n                <div *ngIf=\"txType !== txTypes.change\" class=\"uk-flex uk-flex-nowrap uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                  <a [routerLink]=\"'/account/' + toAccountID\" class=\"uk-link-reset account-container uk-text-truncate\" uk-tooltip title=\"View Account Details\">\n                    <div class=\"identicon-address-book-row\">\n                      <app-nano-identicon scale=\"12\" [accountID]=\"toAccountID\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                      <div class=\"account-label uk-text-truncate\" *ngIf=\"toAddressBook\">{{ toAddressBook }}</div>\n                    </div>\n                    <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\"><app-nano-account-id [accountID]=\"toAccountID\"></app-nano-account-id></div>\n                  </a>\n                  <div class=\"snippet-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                    <ul class=\"uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"toAccountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n                </div>\n                <div *ngIf=\"txType === txTypes.change\" class=\"uk-flex uk-flex-nowrap uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                  <a [routerLink]=\"'/account/' + currentBlock.representative\" class=\"uk-link-reset account-container uk-text-truncate\" uk-tooltip title=\"View Account Details\">\n                    <div class=\"identicon-address-book-row\">\n                      <app-nano-identicon scale=\"12\" [accountID]=\"currentBlock.representative\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon>\n                      <div class=\"account-label uk-text-truncate\" *ngIf=\"repAddressBook\">{{ repAddressBook }}</div>\n                    </div>\n                    <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\"><app-nano-account-id [accountID]=\"currentBlock.representative\"></app-nano-account-id></div>\n                  </a>\n                  <div class=\"snippet-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                    <ul class=\"uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"currentBlock.representative\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"txType !== txTypes.change\" class=\"uk-card-body\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-2 uk-text-muted\">\n                    <div class=\"uk-text-small text-half-muted\" style=\"height: 25px;\">Balance</div>\n                    <span class=\"block-balance\">\n                      <span class=\"balance-amount-primary\">\n                        <span class=\"amount-integer\">{{ toAccountBalance && txType === txTypes.receive ? (toAccountBalance | rai: 'mnano,true' | amountsplit: 0) : 'N/A' }}</span>\n                        <span class=\"amount-fractional\">{{ toAccountBalance && txType === txTypes.receive ? (toAccountBalance | rai: 'mnano,true' | amountsplit: 1) : '' }}</span>\n                        <span class=\"currency-name\">{{ toAccountBalance && txType === txTypes.receive ? 'NANO' : '' }}</span>\n                      </span>\n                    </span>\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-right\">\n                    <div class=\"uk-text-small text-half-muted\" style=\"height: 25px;\"></div>\n                    <span class=\"block-balance\">\n                      <span class=\"balance-amount-primary uk-text-success\">\n                        <span class=\"amount-sign\">+</span>\n                        <span class=\"amount-integer\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n                        <span class=\"amount-fractional\">{{ rawAmount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n                        <span class=\"currency-name\">NANO</span>\n                      </span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"shouldSign\" class=\"uk-card uk-card-default uk-width-1-1\" style=\"padding: 20px 20px;\">\n          <span><strong>Signing Method </strong></span><span uk-icon=\"icon: info;\" uk-tooltip title=\"The block is signed with a private key. If using the build-in wallet, it first needs to be created using any of the available methods.\"></span><br>\n          <div class=\"uk-inline uk-width-1-1\" style=\"margin-top: 10px; max-width: 1000px;\">\n            <div uk-grid>\n              <div class=\"uk-width-1-4@m\" style=\"margin-top: 10px !important;\"><label><input class=\"uk-radio\" type=\"radio\" name=\"signtype\" value={{signTypes[0]}} [(ngModel)]=\"signTypeSelected\" (change)=\"signTypeChange()\"> {{signTypes[0]}}</label></div>\n              <div class=\"uk-width-1-4@m\" style=\"margin-top: 10px !important;\"><label><input class=\"uk-radio\" type=\"radio\" name=\"signtype\" value={{signTypes[1]}} [(ngModel)]=\"signTypeSelected\" (change)=\"signTypeChange()\"> {{signTypes[1]}}</label></div>\n              <div class=\"uk-width-1-4@m\" style=\"margin-top: 10px !important;\"><label><input class=\"uk-radio\" type=\"radio\" name=\"signtype\" value={{signTypes[2]}} [(ngModel)]=\"signTypeSelected\" (change)=\"signTypeChange()\"> {{signTypes[2]}}</label></div>\n              <div class=\"uk-width-1-4@m\" style=\"margin-top: 10px !important;\"><label><input class=\"uk-radio\" type=\"radio\" name=\"signtype\" value={{signTypes[3]}} [(ngModel)]=\"signTypeSelected\" (change)=\"signTypeChange()\"> {{signTypes[3]}}</label></div>\n            </div>\n          </div>\n          <br><br>\n          <span><strong>Proof of Work </strong></span><span uk-icon=\"icon: info;\" uk-tooltip title=\"Proof of Work (PoW) can be optionally generated now and included in the block, or it will be added for you before the block is published. The threshold of 1x is normally ok but you may need higher if the network is saturated with transactions and you want it prioritized. Custom multiplier only works for local PoW source CPU/GPU.\"></span><br>\n          <div class=\"uk-inline uk-width-auto\">\n            <select class=\"uk-select\" [(ngModel)]=\"selectedThreshold\" (change)=\"changeThreshold()\">\n              <option *ngFor=\"let option of thresholds\" [value]=\"option.value\">{{ option.name }}</option>\n            </select>\n          </div>\n          <label class=\"uk-margin-small-left\"><input class=\"uk-checkbox\" type=\"checkbox\" name=\"pow\" value=\"pow\" [(ngModel)]=\"shouldGenWork\" (change)=\"powChange()\"> Include</label>\n          <br><br>\n\n          <!-- Seed and index-->\n          <div *ngIf=\"signTypeSelected === signTypes[1]\">\n            <div class=\"uk-width-1-1 narrow-div\">\n              <div class=\"uk-form-horizontal\">\n                <div class=\"uk-margin\">\n                  <label class=\"uk-form-label\" for=\"source-wallet\">Signing Wallet <span uk-icon=\"icon: info;\" uk-tooltip title=\"The seed or mnemonic that contains the account you are signing for.\"></span></label>\n                  <div class=\"uk-form-controls\">\n                    <div class=\"uk-inline uk-width-1-1\" style=\"height: 40px;\">\n                      <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('seed1','generic')\" uk-tooltip title=\"Scan from QR code\"></a>\n                      <input [(ngModel)]=\"sourceSecret\" class=\"uk-input uk-margin-small-bottom {{validSeed ? '':'uk-form-danger'}}\" id=\"source-wallet\" type=\"text\" (ngModelChange)=\"seedChange(sourceSecret)\" placeholder=\"Secret recovery seed, BIP39 seed or 24-word secret recovery mnemonic\" autocomplete=\"off\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"uk-width-1-1 narrow-div\">\n              <div class=\"uk-form-horizontal\">\n                <div class=\"uk-margin\">\n                  <label class=\"uk-form-label\" for=\"start-index\">Account Index <span uk-icon=\"icon: info;\" uk-tooltip title=\"The index at where the account you are signing for is located in the seed. Maximum 4,294,967,295.\"></span></label>\n                  <div class=\"uk-form-controls\">\n                    <div class=\"uk-inline uk-width-1-1\">\n                      <input [(ngModel)]=\"index\" class=\"uk-input uk-margin-small-bottom {{validIndex ? '':'uk-form-danger'}}\" id=\"start-index\" type=\"text\" maxLength=\"10\" (ngModelChange)=\"indexChange(index)\" placeholder=\"0 to 4294967295\" autocomplete=\"off\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- END Seed and index-->\n\n          <!-- Private key-->\n          <div *ngIf=\"signTypeSelected === signTypes[2]\">\n            <div class=\"uk-width-1-1 narrow-div\">\n              <div class=\"uk-form-horizontal\">\n                <div class=\"uk-margin\">\n                  <label class=\"uk-form-label\" for=\"source-wallet\">Private Key <span uk-icon=\"icon: info;\" uk-tooltip title=\"The private key that derive the account you are signing for.\"></span></label>\n                  <div class=\"uk-form-controls\">\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\" style=\"height: 40px; margin-bottom: 10px;\">\n                        <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('priv1','hash')\" uk-tooltip title=\"Scan from QR code\"></a>\n                        <input [(ngModel)]=\"sourcePriv\" class=\"uk-input uk-margin-small-bottom {{validPrivkey ? '':'uk-form-danger'}}\" maxLength=\"128\" id=\"source-wallet\" type=\"text\" (ngModelChange)=\"privkeyChange(sourcePriv)\" placeholder=\"Private key or Expanded private key\" autocomplete=\"off\">\n                      </div>\n                      <label><input class=\"uk-checkbox\" type=\"checkbox\" name=\"expanded\" value='expanded' [(ngModel)]=\"privateKeyExpanded\" (change)=\"privkeyChange(sourcePriv)\"> Expanded private key </label><span uk-icon=\"icon: info;\" uk-tooltip title=\"If using a 64 or 128 char expanded key.\"></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- END Private key-->\n\n          <!-- Multisig-->\n          <div *ngIf=\"signTypeSelected === signTypes[3]\">\n            <div class=\"uk-width-1-1 narrow-div\">\n              <p>Each participant of the multisig will provide their key. Enter number of participants, copy the signing link and share it with the others.</p>\n              <div class=\"uk-form-horizontal\">\n                <div class=\"uk-margin\">\n                  <label class=\"uk-form-label\" for=\"participants\">Participants <span uk-icon=\"icon: info;\" uk-tooltip title=\"Number of participants to multi-sign including yourself\"></span></label>\n                  <div class=\"uk-form-controls\">\n                    <div class=\"uk-inline uk-width-1-1\">\n                      <input [(ngModel)]=\"participants\" class=\"uk-input uk-margin-small-bottom {{validParticipants ? '':'uk-form-danger'}}\" [disabled]=\"this.activeStep > 1\" id=\"participants\" type=\"number\" maxLength=\"3\" (ngModelChange)=\"participantChange(participants)\" placeholder=\"2 to 999\" autocomplete=\"off\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"uk-width-1-1 narrow-div\">\n              <div class=\"uk-form-horizontal\">\n                <div class=\"uk-margin\">\n                  <label class=\"uk-form-label\" for=\"source-wallet\">Private Key <span uk-icon=\"icon: info;\" uk-tooltip title=\"Any private key that is part of the multisig address you want to sign.\"></span></label>\n                  <div class=\"uk-form-controls\">\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\" style=\"height: 40px; margin-bottom: 10px;\">\n                        <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('priv1','hash')\" uk-tooltip title=\"Scan from QR code\"></a>\n                        <input [(ngModel)]=\"sourcePriv\" class=\"uk-input uk-margin-small-bottom {{validPrivkey ? '':'uk-form-danger'}}\" [disabled]=\"this.activeStep > 1\" maxLength=\"64\" id=\"source-wallet\" type=\"text\" (ngModelChange)=\"privkeyChangeMulti(sourcePriv)\" placeholder=\"Private key\" autocomplete=\"off\">\n                      </div>\n                    </div>\n                  </div>\n                  <label *ngIf=\"!isDesktop\"><input class=\"uk-checkbox\" type=\"checkbox\" name=\"multitab\" value='multitab' [(ngModel)]=\"tabChecked\" (change)=\"tabModeCheck()\"> Multi-Tab Mode </label><span *ngIf=\"!isDesktop\" uk-icon=\"icon: info;\" uk-tooltip title=\"If using one browser tab for each private key on the same computer.\"></span>\n                </div>\n              </div>\n            </div>\n\n            <div *ngIf=\"this.activeStep > 1\">\n              <div class=\"uk-width-1-1 narrow-div\" >\n                <div class=\"uk-form-horizontal\">\n                  <div class=\"uk-margin\">\n                    <label class=\"uk-form-label\" for=\"output-data\">Output Data <span uk-icon=\"icon: info;\" uk-tooltip title=\"Copy this to the 'Input Data' for each participant\"></span></label>\n                    <div class=\"uk-form-controls\">\n                      <div class=\"uk-width-1-1\">\n                        <div class=\"uk-inline uk-width-1-1\" style=\"height: 40px; margin-bottom: 10px;\">\n                          <a *ngIf=\"outputMultisigData !== ''\" class=\"uk-form-icon uk-form-icon-flip second-icon\" ngxClipboard [cbContent]=\"outputMultisigData\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Output Value\" uk-tooltip></a>\n                          <a *ngIf=\"outputMultisigData !== ''\" class=\"uk-form-icon uk-form-icon-flip icon-qr-code\" (click)=\"qrModal.show()\" uk-tooltip title=\"Show QR Code\"></a>\n                          <input [(ngModel)]=\"outputMultisigData\" class=\"uk-input uk-margin-small-bottom\" style=\"padding-right:70px !important\" disabled id=\"output-data\" type=\"text\" placeholder=\"\" autocomplete=\"off\">\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"uk-width-1-1 narrow-div\" >\n                <div class=\"uk-form-horizontal\">\n                  <div class=\"uk-margin\">\n                    <label class=\"uk-form-label\">Input Data <span uk-icon=\"icon: info;\" uk-tooltip title=\"Output data from participants to be added\"></span></label>\n                    <div class=\"uk-form-controls\">\n                      <ul class=\"uk-list uk-list-striped\">\n                        <li *ngFor=\"let data of inputMultisigData\">\n                          <div uk-grid>\n                            <div class=\"uk-width-5-6 uk-text-truncate\">\n                              <ng-container>\n                                <div class=\"uk-text-truncate\">{{ data }}</div>\n                              </ng-container>\n                            </div>\n                            <div class=\"action-remove uk-width-1-6 uk-text-right\">\n                              <a (click)=\"removeSelectedData(data)\" class=\"uk-text-danger\" title=\"Remove From List\" uk-tooltip><span uk-icon=\"icon: close;\"></span></a>\n                            </div>\n                          </div>\n                        </li>\n                        <li>\n                          <div *ngIf=\"!showAddBox && !this.isInputAddDisabled\" class=\"add-button uk-width-auto\" (click)=\"setFocus()\"><span uk-icon=\"icon: plus\"></span> Add participant data from step {{(this.activeStep - 1)}}</div>\n                          <div *ngIf=\"showAddBox\" class=\"uk-inline uk-width-1-1\">\n                            <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: plus\" (click)=\"addMultisigInputData()\" uk-tooltip title=\"Add input data\"></a>\n                            <input [(ngModel)]=\"inputAdd\" [disabled]=\"this.isInputAddDisabled\" maxLength=\"130\" class=\"uk-input {{validInputAdd ? '':'uk-form-danger'}}\" type=\"text\" placeholder=\"{{(this.activeStep - 1) + ':abc...'}}\" (ngModelChange)=\"inputAddChange(inputAdd)\" (keyup.enter)=\"addMultisigInputData()\" autocomplete=\"off\" #dataAddFocus>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"uk-width-1-1 narrow-div\">\n              <div class=\"uk-inline uk-width-1-1\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-2@l\" style=\"max-width: 350px; margin-top: 20px !important;\">\n                    <a class=\"uk-button uk-button-primary uk-width-1-1\" ngxClipboard [cbContent]=\"multisigLink\" (cbOnSuccess)=\"copied()\">COPY SIGNING LINK</a>\n                  </div>\n                  <div class=\"uk-width-1-2@l\" style=\"max-width: 350px; margin-top: 20px !important;\">\n                    <button class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"resetMultisig()\">RESET MULTISIG</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- END Multisig-->\n\n          <span class=\"uk-text-danger\">{{signatureMessage}}</span>\n          <span class=\"uk-text-success\">{{signatureMessageSuccess}}</span>\n\n        </div>\n        <br>\n\n        <div *ngIf=\"processedHash\" class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\" style=\"padding: 20px 20px;\">\n          <div class=\"uk-visible-toggle\">\n            <div uk-grid class=\"uk-width-auto\">\n              <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px); flex: auto;\">\n                <span class=\"uk-text-success\">Successfully processed block: </span><a [routerLink]=\"'/transaction/' + processedHash\" class=\"uk-link-text\" title=\"View Block Details\" uk-tooltip>{{ processedHash }}</a>\n              </div>\n              <div class=\"uk-width-auto\" style=\"padding-left: 10px; flex: auto;\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"processedHash\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Block Hash\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <br>\n          <a *ngIf=\"processedHash\" [routerLink]=\"'/account/' + signatureAccount\" [queryParams]=\"{ sign: 1 }\" class=\"uk-button uk-button-primary uk-width-auto\" title=\"Account detail view\" uk-tooltip>Account Detail View</a>\n        </div>\n\n        <div *ngIf=\"!processedHash\">\n          <div class=\"nlt-button-group uk-width-1-1 uk-text-right\">\n            <button class=\"uk-button uk-button-danger uk-width-1-1@s uk-width-auto@m\" (click)=\"cancel()\">Cancel</button>\n            <button *ngIf=\"!confirmingTransaction && shouldSign && signTypeSelected !== signTypes[3]\" class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m\" (click)=\"confirmTransaction()\">Confirm & Sign</button>\n            <button *ngIf=\"!confirmingTransaction && shouldSign && signTypeSelected === signTypes[3]\" class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m\" (click)=\"startMultisig()\" [disabled]=\"!this.validPrivkey || !this.validParticipants || finalSignature || (this.activeStep > 1 && !this.isInputAddDisabled)\">{{this.activeStep !== 4 ? (this.activeStep === 1 ? 'Start Multi-signing' : 'Step '+ (this.activeStep - 1) + '/3 | Next') : 'Step '+ (this.activeStep - 1) + '/3 | Final Step'}}</button>\n            <button *ngIf=\"confirmingTransaction && shouldSign\" class=\"uk-button uk-button-primary uk-disabled uk-width-1-1\"><span class=\"uk-margin-right\" uk-spinner></span> Loading</button>\n            <button *ngIf=\"!confirmingTransaction && !shouldSign\" class=\"uk-button uk-button-primary uk-width-1-1@s uk-width-auto@m\" (click)=\"confirmBlock()\">Confirm & Process</button>\n            <button *ngIf=\"confirmingTransaction && !shouldSign\" class=\"uk-button uk-button-primary uk-disabled uk-width-1-1\"><span class=\"uk-margin-right\" uk-spinner></span> Loading</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- End Confirmation Panel -->\n\n    <div uk-grid *ngIf=\"activePanel == 'error'\" class=\"uk-animation-slide-left\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\">\n          <span style=\"display: block; padding-top: 8px;\">The provided block info is not valid or Nault got connection issues.<br/> Try set Nault in Offline Mode from the app settings if you want to be offline.<br/></span>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<!-- Modal for result QR -->\n<div class=\"modal-position-bottom\" id=\"signed-modal\" uk-modal>\n  <div class=\"uk-modal-dialog uk-modal-body modal-qr\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-header\">\n        <h2 class=\"uk-modal-title\">Signed Block</h2>\n    </div>\n    <div class=\"uk-modal-body modal-qr-body\">\n      <p><a routerLink=\"/qr-scan\" routerLinkActive=\"active\" class=\"uk-modal-close\">Scan</a> the signed QR with an online Nault, or copy the \"Signed Block\" to <a routerLink=\"/remote-signing\" routerLinkActive=\"active\" class=\"uk-modal-close\">Step 3</a>.</p>\n      \n      <div *ngIf=\"qrString && finalSignature\" class=\"uk-width-1-1 uk-text-center\" style=\"display: flex; justify-content: center;\">\n        <span class=\"uk-text-small\" uk-tooltip title=\"Signed block string to be copied to remote device\" style=\"overflow-wrap: anywhere;\"><strong>Signed Block</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"qrString\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n        <span class=\"uk-text-small\" uk-tooltip title=\"Signature to be embedded into the final block\" style=\"overflow-wrap: anywhere; margin-left: 50px;\"><strong>Signature</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"finalSignature\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n      </div>\n\n      <div class=\"uk-width-1-1 uk-text-center\">\n        <img *ngIf=\"qrCodeImageBlock\" [src]=\"qrCodeImageBlock\" alt=\"QR code\"><br />\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal for output data QR -->\n<div class=\"modal-position-bottom\" id=\"qr-code-modal\" uk-modal>\n  <div class=\"uk-modal-dialog uk-margin-auto-vertical\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-body\">\n      <div class=\"uk-width-1-1 uk-text-center\">\n        <img *ngIf=\"qrCodeImageOutput else qrCodeGenerating\" [src]=\"qrCodeImageOutput\" class=\"qr-code\" title=\"Output Data\">\n        <ng-template #qrCodeGenerating>\n          <div class=\"qr-code-placeholder uk-align-center\"><div uk-spinner=\"ratio: 2;\"></div></div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport BigNumber from 'bignumber.js';\nimport {UtilService} from '../../services/util.service';\nimport {NanoBlockService} from '../../services/nano-block.service';\n// import {Subject, timer} from 'rxjs';\n// import {debounce} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {\n  AppSettingsService,\n  // LedgerService,\n  // LedgerStatus,\n  // ModalService,\n  NotificationService,\n  // RepresentativeService,\n  WalletService\n} from '../../services';\n// import { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.css']\n})\n\nexport class SocialComponent implements OnInit {\n\n  @ViewChild('aiFrame') childIframe: ElementRef;\n\n  // accounts = this.walletService.wallet.accounts;\n  // isLedgerWallet = this.walletService.isLedgerWallet();\n  // isSingleKeyWallet = this.walletService.isSingleKeyWallet();\n  // viewAdvanced = false;\n  // hidePopup = true;\n  // string = '';\n  locked = this.walletService.isLocked();\n\n  // // When we change the accounts, redetect changable reps (Debounce by 5 seconds)\n  // accountsChanged$ = new Subject();\n  // reloadRepWarning$ = this.accountsChanged$.pipe(debounce(() => timer(5000)));\n\n  constructor(\n    private http: HttpClient,\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    // public modal: ModalService,\n    // public settings: AppSettingsService,\n    private nanoBlock: NanoBlockService,\n    // private representatives: RepresentativeService,\n    private router: Router,\n    private util: UtilService,\n    // private ledger: LedgerService,\n    // private translocoService: TranslocoService\n    ) { }\n\n  ngOnChanges() {\n    // this.locked = this.walletService.isLocked()\n  }\n\n  async ngOnInit() {\n\n    var self = this\n\n    var on = false\n\n    // if (this.walletService.isLocked()) {\n\n    //   const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n    //   if (wasUnlocked === false) {\n    //     this.router.navigate(['accounts']);\n    //     return;\n    //   }\n\n    // }\n\n\n    // this.showPopup = false\n\n    // window.addEventListener(\n    //   \"prompt\",\n    //   (event) => {\n    //     // if (event.data && typeof event.data === 'string' && event.data.includes('success')) {\n\n    //     //   this.purchasePrompt\n          \n    //     //   // this.string = event.data\n\n    //     //   // const params = new URLSearchParams(this.string.split('?')[1]);\n\n    //     //   // this.router.navigate(['send'], { queryParams: { \n    //     //   //   to: event.data.replace('nano:', '').split('?')[0],\n    //     //   //   amount: params.getAll('amount') || \"0\",\n    //     //   //   callback: params.getAll('callback'),\n    //     //   // } });\n\n    //     // }\n    //     alert('Yooo')\n    //   },\n    //   false\n    // );\n\n    // window.onmessage = function(e) {\n    //     if (e.data == 'mounted') {\n    //         // alert('It mounted');\n    //     }\n    //     if (e.data == 'prompt') {\n    //         // alert('It prompted');\n    //         self.purchasePrompt()\n    //     }\n    // };\n\n    // window.addEventListener(\"message\", ({data}) => {\n    //   console.log(\"Message from worker: \" + data); // 3\n    // });\n\n\n    // window.addEventListener('message', receiveMessage, false);\n\n    // function receiveMessage(event) {\n    //   // Check the origin of the message to ensure it's from a trusted source\n    //   if (event.origin !== 'http://example.com') {\n    //     return;\n    //   }\n      \n    //   // Log the received message from the child iframe\n    //   console.log('Received message from child iframe:', event.data);\n\n    // }\n\n    // iframe.contentWindow.postMessage('purchase', '*');\n\n  }\n\n  ngAfterViewInit() {\n    // Get the reference to the iframe element\n   const isIFrame = (input: HTMLElement | null): input is HTMLIFrameElement => input !== null && input.tagName === 'IFRAME';\n\n   //  var iframe = document.getElementById('aiFrame');\n\n   //  if (isIFrame(iframe) && iframe.contentWindow) {\n   //      iframe.contentWindow.postMessage('message', '*');\n   //      console.log(\"sdas\")\n   //  }\n\n    // Add an event listener to listen for messages from the child iframe\n    window.addEventListener('message', this.receiveMessage.bind(this), false);\n\n    // Send a message to the child iframe\n    // iframe.contentWindow.postMessage('Hello from parent!', 'http://example.com');\n  }\n\n  receiveMessage(event: MessageEvent) {\n    // Check the origin of the message to ensure it's from a trusted source\n    if (event.origin !== 'https://ai.nault.pro') {\n      return;\n    }\n\n    // Log the received message from the child iframe\n    // if (event.data.action === 'loading') this.notificationService.sendError(`Thinking..`);\n    if (event.data.action === 'prompt') this.purchasePrompt(event.data.price)\n  }\n\n  async purchasePrompt(amount) {\n\n    // console.log('CHILD->PARENT:', \"Purchasing Prompt\");\n\n    // if (this.walletService.isLocked()) {\n\n    //   const wasUnlocked = await this.walletService.requestWalletUnlock();\n\n    //   if (wasUnlocked === false) {\n    //     this.router.navigate(['accounts']);\n    //     return;\n    //   }\n\n    // }\n\n    const walletAccount = this.walletService.wallet.accounts[0]\n\n    try {\n\n      // hard code\n      const destinationID = 'nano_1chatai164r4whzni648buh5u58ju9kfej8kmw4h73zhmszxbb7k1dgto6gu';\n\n      // const newHash = await this.nanoBlock.generateSend(walletAccount, destinationID,this.util.nano.mnanoToRaw('0.01'), this.walletService.isLedgerWallet());\n      const newHash = await this.nanoBlock.generateSend(walletAccount, destinationID,this.util.nano.mnanoToRaw(amount), this.walletService.isLedgerWallet());\n      // const newHash = await this.nanoBlock.generateSend(walletAccount, destinationID,this.util.nano.mnanoToRaw('0.01'), this.walletService.isLedgerWallet());\n\n      if (newHash) {\n\n        const isIFrame = (input: HTMLElement | null): input is HTMLIFrameElement => input !== null && input.tagName === 'IFRAME';\n\n        var iframe = document.getElementById('aiFrame');\n\n        if (isIFrame(iframe) && iframe.contentWindow) {\n\n            iframe.contentWindow.postMessage({ hash: newHash }, '*');\n\n            // this.notificationService.sendError(`Sent.`);\n            // this.notificationService.sendSuccess(`Payed 0.01`);\n\n        }\n\n      } else {\n        \n        if (!this.walletService.isLedgerWallet()) {\n          this.notificationService.sendError(`Error paying, please try again.`);\n        }\n\n      }\n\n    } catch (err) {\n\n      console.log( err.message )\n\n      // this.notificationService.sendError(`Error paying: ${err.message}`);\n    \n    }\n\n    await this.walletService.reloadBalances();\n\n    // return newHash\n\n  }\n\n\n}\n","<div>\n\t<!-- <iframe id=\"aiFrame\" src=\"http://localhost:8080\" name=\"nault\" style=\" width: 100%; height: 94vh; \" frameborder=\"0\"></iframe> -->\n\t<iframe id=\"aiFrame\" src=\"https://xno.social\" name=\"nault\" style=\" width: 100%; height: 95vh; \" frameborder=\"0\"></iframe>\n\t<!-- <iframe id=\"aiFrame\" src=\"https://ai.nault.pro\" name=\"nault\" style=\" width: 100%; height: 95vh; \" frameborder=\"0\"></iframe> -->\n</div>","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ModalService} from '../../services/modal.service';\nimport {ApiService} from '../../services/api.service';\nimport {UtilService, TxType} from '../../services/util.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {NanoBlockService} from '../../services/nano-block.service';\nimport * as nanocurrency from 'nanocurrency';\nimport { wallet } from 'nanocurrency-web';\nimport * as bip39 from 'bip39';\nimport {Router} from '@angular/router';\n\nconst INDEX_MAX = 4294967295; // seed index\nconst SWEEP_MAX_INDEX = 100; // max index keys to sweep\nconst SWEEP_MAX_PENDING = 100; // max pending blocks to process per run\n\n@Component({\n  selector: 'app-sweeper',\n  templateUrl: './sweeper.component.html',\n  styleUrls: ['./sweeper.component.css'],\n})\n\nexport class SweeperComponent implements OnInit {\n  accounts = this.walletService.wallet.accounts;\n  indexMax = INDEX_MAX;\n  incomingMax = SWEEP_MAX_PENDING;\n\n  myAccountModel = this.accounts.length > 0 ? this.accounts[0].id : '0';\n  sourceWallet = '';\n  destinationAccount = this.accounts.length > 0 ? this.accounts[0].id : '';\n  startIndex = '0';\n  endIndex = '5';\n  maxIncoming = SWEEP_MAX_PENDING.toString();\n\n  output = '';\n  sweeping = false;\n  pubKey = '';\n  adjustedBalance = '0';\n  representative = '';\n  privKey = '';\n  previous = '';\n  subType = '';\n  blocks = [];\n  keys = [];\n  keyCount = 0;\n  pendingCallback = null;\n  totalSwept = '0';\n  customAccountSelected = this.accounts.length === 0;\n\n  validSeed = false;\n  validDestination = this.myAccountModel !== '0' ? true : false;\n  validStartIndex = true;\n  validEndIndex = true;\n  validMaxIncoming = true;\n  selAccountInit = false;\n\n  @ViewChild('outputarea') logArea: ElementRef;\n\n  constructor(\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    private appSettings: AppSettingsService,\n    public modal: ModalService,\n    private api: ApiService,\n    private workPool: WorkPoolService,\n    public settings: AppSettingsService,\n    private nanoBlock: NanoBlockService,\n    private util: UtilService,\n    private route: Router) {\n      if (this.route.getCurrentNavigation().extras.state && this.route.getCurrentNavigation().extras.state.seed) {\n        this.sourceWallet = this.route.getCurrentNavigation().extras.state.seed;\n        this.validSeed = true;\n      }\n    }\n\n  async ngOnInit() {\n    // Update selected account if changed in the sidebar\n    this.walletService.wallet.selectedAccount$.subscribe(async acc => {\n      if (this.selAccountInit) {\n        this.myAccountModel = acc ? acc.id : (this.accounts.length > 0 ? this.accounts[0].id : '0');\n      }\n      this.selAccountInit = true;\n    });\n\n    // Set the account selected in the sidebar as default\n    if (this.walletService.wallet.selectedAccount !== null) {\n      this.myAccountModel = this.walletService.wallet.selectedAccount.id;\n    }\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  setDestination(account) {\n    if (account !== '0') {\n      this.destinationAccount = account;\n      this.customAccountSelected = false;\n    } else {\n      this.destinationAccount = '';\n      this.customAccountSelected = true;\n    }\n    this.destinationChange(account);\n  }\n\n  // set min value for start index\n  setMin() {\n  this.startIndex = '0';\n  // check end index\n  if (this.validEndIndex) {\n    if (parseInt(this.endIndex, 10) > 0 + SWEEP_MAX_INDEX) {\n      this.endIndex = (0 + SWEEP_MAX_INDEX).toString(); }\n    }\n  }\n\n  // set max value for end index\n  setMax() {\n    this.endIndex = INDEX_MAX.toString();\n    // check start index\n    if (this.validStartIndex) {\n      if (parseInt(this.startIndex, 10) < INDEX_MAX - SWEEP_MAX_INDEX) {\n        this.startIndex = (INDEX_MAX - SWEEP_MAX_INDEX).toString();\n      }\n    }\n  }\n\n  // set max value for pending limit\n  setMaxIncoming() {\n    this.maxIncoming = SWEEP_MAX_PENDING.toString();\n  }\n\n  seedChange(seed) {\n    if (this.checkMasterKey(seed)) {\n      this.validSeed = true;\n    } else {\n      this.validSeed = false;\n    }\n  }\n\n  destinationChange(address) {\n    if (nanocurrency.checkAddress(address)) {\n      this.validDestination = true;\n    } else {\n      this.validDestination = false;\n    }\n  }\n\n  startIndexChange(index) {\n    let invalid = false;\n    if (this.util.string.isNumeric(index) && index % 1 === 0) {\n      index = parseInt(index, 10);\n      if (!nanocurrency.checkIndex(index)) {\n        invalid = true;\n      }\n      if (index > INDEX_MAX) {\n        invalid = true;\n      }\n    } else {\n      invalid = true;\n    }\n    if (invalid) {\n      this.validStartIndex = false;\n      return;\n    }\n    // check end index\n    if (this.validEndIndex) {\n      if (parseInt(this.endIndex, 10) > index + SWEEP_MAX_INDEX) {\n        this.endIndex = (index + SWEEP_MAX_INDEX).toString();\n      }\n    }\n    this.validStartIndex = true;\n  }\n\n  endIndexChange(index) {\n    let invalid = false;\n    if (this.util.string.isNumeric(index) && index % 1 === 0) {\n      index = parseInt(index, 10);\n      if (!nanocurrency.checkIndex(index)) {\n        invalid = true;\n      }\n      if (index > INDEX_MAX) {\n        invalid = true;\n      }\n    } else {\n      invalid = true;\n    }\n    if (invalid) {\n      this.validEndIndex = false;\n      return;\n    }\n    // check end index\n    if (this.validStartIndex) {\n      if (parseInt(this.startIndex, 10) < index - SWEEP_MAX_INDEX) {\n        this.startIndex = (index - SWEEP_MAX_INDEX).toString();\n      }\n    }\n    this.validEndIndex = true;\n  }\n\n  maxIncomingChange(value) {\n    if (!this.util.string.isNumeric(value) || value % 1 !== 0) {\n      this.validMaxIncoming = false;\n      return;\n    } else {\n      value = parseInt(value, 10);\n      if (value > SWEEP_MAX_PENDING) {\n        this.validMaxIncoming = false;\n        return;\n      }\n    }\n\n    this.validMaxIncoming = true;\n  }\n\n  // Validate type of master key. Seed and private key can't be differentiated\n  checkMasterKey(key) {\n    // validate nano seed or private key\n    if (key.length === 64) {\n      if (nanocurrency.checkSeed(key)) {\n        return 'nano_seed';\n      }\n    }\n    // validate bip39 seed\n    if (key.length === 128) {\n      if (this.util.hex.isHex(key)) {\n        return 'bip39_seed';\n      }\n    }\n    // validate mnemonic\n    if (bip39.validateMnemonic(key)) {\n      return 'mnemonic';\n    }\n    return false;\n  }\n\n  // Append row to log output\n  appendLog(row) {\n    let linebreak = '\\n';\n    if (this.output === '') {\n      linebreak = '';\n    }\n    this.output = this.output + linebreak + row;\n    // scroll to bottom\n    this.logArea.nativeElement.scrollTop = this.logArea.nativeElement.scrollHeight;\n  }\n\n  // Process final send block\n  async processSend(privKey, previous, sendCallback) {\n    const pubKey = nanocurrency.derivePublicKey(privKey);\n    const address = nanocurrency.deriveAddress(pubKey, {useNanoPrefix: true});\n\n    // make an extra check on valid destination\n    if (this.validDestination && nanocurrency.checkAddress(this.destinationAccount)) {\n      this.appendLog('Transfer started: ' + address);\n      const work = await this.workPool.getWork(previous, 1); // send threshold\n      // create the block with the work found\n      const block = nanocurrency.createBlock(privKey, {balance: '0', representative: this.representative,\n      work: work, link: this.destinationAccount, previous: previous});\n      // replace xrb with nano (old library)\n      block.block.account = block.block.account.replace('xrb', 'nano');\n      block.block.link_as_account = block.block.link_as_account.replace('xrb', 'nano');\n\n      // publish block for each iteration\n      const data = await this.api.process(block.block, TxType.send);\n      if (data.hash) {\n        const blockInfo = await this.api.blockInfo(data.hash);\n        let nanoAmountSent = null;\n        if (blockInfo.amount) {\n          nanoAmountSent = this.util.nano.rawToMnano(blockInfo.amount);\n          this.totalSwept = this.util.big.add(this.totalSwept, nanoAmountSent);\n        }\n        this.notificationService.sendInfo('Account ' + address + ' was swept and ' +\n        (nanoAmountSent ? ( 'Ӿ' + nanoAmountSent.toString(10) ) : '') + ' transferred to ' + this.destinationAccount, {length: 15000});\n        this.appendLog('Funds transferred ' + (nanoAmountSent ? ('(Ӿ' + nanoAmountSent.toString(10) + ')') : '') + ': ' + data.hash);\n        console.log(this.adjustedBalance + ' raw transferred to ' + this.destinationAccount);\n      } else {\n        this.notificationService.sendWarning(`Failed processing block.`);\n        this.appendLog('Failed processing block: ' + data.error);\n      }\n      sendCallback();\n    } else {\n      this.notificationService.sendError(`The destination address is not valid.`);\n      sendCallback();\n    }\n  }\n\n  // For each pending block\n  async processPending(blocks, keys, keyCount) {\n    const key = keys[keyCount];\n    this.blocks = blocks;\n    this.keys = keys;\n    this.keyCount = keyCount;\n    this.adjustedBalance = this.util.big.add(this.adjustedBalance, blocks[key].amount);\n\n    // generate local work\n    try {\n      this.appendLog('Started generating PoW...');\n\n      // determine input work hash depending if open block or receive block\n      let workInputHash = this.previous;\n      if (this.subType === 'open') {\n        // input hash is the opening address public key\n        workInputHash = this.pubKey;\n      }\n      const work = await this.workPool.getWork(workInputHash, 1 / 64); // receive threshold\n      // create the block with the work found\n      const block = nanocurrency.createBlock(this.privKey, {balance: this.adjustedBalance, representative: this.representative,\n      work: work, link: key, previous: this.previous});\n      // replace xrb with nano (old library)\n      block.block.account = block.block.account.replace('xrb', 'nano');\n      block.block.link_as_account = block.block.link_as_account.replace('xrb', 'nano');\n      // new previous\n      this.previous = block.hash;\n\n      // publish block for each iteration\n      const data = await this.api.process(block.block, this.subType === 'open' ? TxType.open : TxType.receive);\n      if (data.hash) {\n        this.appendLog('Processed pending: ' + data.hash);\n\n        // continue with the next pending\n        this.keyCount += 1;\n        if (this.keyCount < this.keys.length) {\n          // if last block was open, the next one will be a receive\n          if (this.subType === 'open') {\n            this.subType = 'receive';\n          }\n          this.processPending(this.blocks, this.keys, this.keyCount);\n        } else { // all pending done, now we process the final send block\n          this.appendLog('All pending processed!');\n          this.pendingCallback(this.previous);\n        }\n      } else {\n        this.notificationService.sendWarning(`Failed processing block`);\n        this.appendLog('Failed processing block: ' + data.error);\n      }\n    } catch (error) {\n      if (error.message === 'invalid_hash') {\n        this.notificationService.sendError(`Block hash must be 64 character hex string`);\n      } else {\n        this.notificationService.sendError(`An unknown error occurred while generating PoW`);\n        console.log('An unknown error occurred while generating PoW' + error);\n      }\n      this.sweeping = false;\n      return;\n    }\n  }\n\n  // Create pending blocks based on current balance and previous block (or start with an open block)\n  async createPendingBlocks(privKey, address, balance, previous, subType, callback, accountCallback) {\n    this.privKey = privKey;\n    this.previous = previous;\n    this.subType = subType;\n    this.pendingCallback = callback;\n    // check for pending first\n    let data = null;\n    if (this.appSettings.settings.minimumReceive) {\n      const minAmount = this.util.nano.mnanoToRaw(this.appSettings.settings.minimumReceive).toString(10);\n      if (this.appSettings.settings.pendingOption === 'amount') {\n        data = await this.api.pendingLimitSorted(address, this.maxIncoming, minAmount);\n      } else {\n        data = await this.api.pendingLimit(address, this.maxIncoming, minAmount);\n      }\n\n    } else {\n      if (this.appSettings.settings.pendingOption === 'amount') {\n        data = await this.api.pendingSorted(address, this.maxIncoming);\n      } else {\n        data = await this.api.pending(address, this.maxIncoming);\n      }\n    }\n\n    // if there are any pending, process them\n    if (data.blocks) {\n      // sum all raw amounts\n      let raw = '0';\n      Object.keys(data.blocks).forEach(function(key) {\n        raw = this.util.big.add(raw, data.blocks[key].amount);\n      }.bind(this));\n      const nanoAmount = this.util.nano.rawToMnano(raw);\n      const pending = {count: Object.keys(data.blocks).length, raw: raw, XNO: nanoAmount, blocks: data.blocks};\n      const row = 'Found ' + pending.count + ' pending containing total ' + pending.XNO + ' XNO';\n      this.appendLog(row);\n\n      // create receive blocks for all pending\n      const keys = [];\n      // create an array with all keys to be used recurively\n      Object.keys(pending.blocks).forEach(function(key) {\n        keys.push(key);\n      });\n\n      this.processPending(pending.blocks, keys, 0);\n    } else { // no pending, create final block directly\n      if (parseInt(this.adjustedBalance, 10) > 0) {\n        this.processSend(this.privKey, this.previous, () => {\n          accountCallback(); // tell that we are ok to continue with next step\n        });\n      } else {\n        accountCallback(); // tell that we are ok to continue with next step\n      }\n    }\n  }\n\n  // Process an account\n  async processAccount(privKey, accountCallback) {\n    if (privKey.length !== 64) {\n      accountCallback();\n      return;\n    }\n\n    this.pubKey = nanocurrency.derivePublicKey(privKey);\n    const address = nanocurrency.deriveAddress(this.pubKey, {useNanoPrefix: true});\n\n    // get account info required to build the block\n    let balance = 0; // balance will be 0 if open block\n    this.adjustedBalance = balance.toString();\n    let previous = null; // previous is null if we create open block\n    this.representative = this.settings.settings.defaultRepresentative || this.nanoBlock.getRandomRepresentative();\n    let subType = 'open';\n\n    // retrive from RPC\n    const accountInfo = await this.api.accountInfo(address);\n    let validResponse = false;\n    // if frontier is returned it means the account has been opened and we create a receive block\n    if (accountInfo.frontier) {\n      validResponse = true;\n      balance = accountInfo.balance;\n      this.adjustedBalance = balance.toString();\n      previous = accountInfo.frontier;\n      this.representative = accountInfo.representative;\n      subType = 'receive';\n      validResponse = true;\n    } else if (accountInfo.error === 'Account not found') {\n      validResponse = true;\n      this.adjustedBalance = '0';\n    }\n    if (validResponse) {\n      // create and publish all pending\n      this.createPendingBlocks(privKey, address, balance, previous, subType, function(previous_) {\n        // the previous is the last received block and will be used to create the final send block\n        if (parseInt(this.adjustedBalance, 10) > 0) {\n          this.processSend(privKey, previous_, () => {\n            accountCallback();\n          });\n        } else {\n          accountCallback();\n        }\n      }.bind(this), () => {\n        accountCallback();\n      });\n    } else {\n      this.notificationService.sendError(`Bad RPC response. Please try again.`);\n      accountCallback();\n    }\n  }\n\n  // Recursively process private keys from index range\n  async processIndexRecursive(privKeys, keyCount) {\n    // delay each process to not hit backend rate limiters\n    await this.sleep(300);\n    const privKey = privKeys[keyCount][0];\n    this.appendLog('Checking index ' + privKeys[keyCount][2] + ' using ' + privKeys[keyCount][1]);\n    this.processAccount(privKey, function() {\n      // continue with the next pending\n      keyCount += 1;\n      if (keyCount < privKeys.length) {\n        this.processIndexRecursive(privKeys, keyCount);\n      } else {\n        // all private keys have been processed\n        this.appendLog('Finished processing all accounts');\n        this.appendLog('Ӿ' + this.totalSwept + ' transferred');\n        this.notificationService.sendInfo('Finished processing all accounts. Ӿ' + this.totalSwept + ' transferred', {length: 0});\n        this.sweeping = false;\n      }\n    }.bind(this));\n  }\n\n  async sweepContinue () {\n    this.sweeping = true;\n    this.totalSwept = '0';\n\n    const keyType = this.checkMasterKey(this.sourceWallet);\n    if (this.validEndIndex && this.validStartIndex && this.validMaxIncoming) {\n      let seed = '', privKey;\n      let bip39Seed = '';\n      // input is mnemonic\n      if (keyType === 'mnemonic') {\n        seed = bip39.mnemonicToEntropy(this.sourceWallet).toUpperCase();\n        bip39Seed = this.util.string.mnemonicToSeedSync(this.sourceWallet).toString('hex');\n        // Seed must be 64 for regular nano blake derivation to happen\n        // For other lengths, only bip39/44 derivation is possible\n        if (seed.length !== 32 && seed.length !== 40 && seed.length !== 48 && seed.length !== 56 && seed.length !== 64) {\n          this.notificationService.sendError(`Mnemonic not 12,15,18,21 or 24 words`);\n          return;\n        }\n      }\n\n      // nano seed or private key\n      if (keyType === 'nano_seed' || seed !== '' || keyType === 'bip39_seed') {\n        // check if a private key first (no index)\n        this.appendLog('Checking if input is a private key');\n        if (seed === '') { // seed from input, no mnemonic\n          seed = this.sourceWallet;\n        }\n        this.processAccount(seed, function() {\n          // done checking if private key, continue interpret as seed\n          const privKeys = [];\n          // start with blake2b derivation (but not if the mnemonic is anything other than 24 words)\n          if (keyType !== 'bip39_seed' && seed.length === 64) {\n            for (let i = parseInt(this.startIndex, 10); i <= parseInt(this.endIndex, 10); i++) {\n              privKey = nanocurrency.deriveSecretKey(seed, i);\n              privKeys.push([privKey, 'blake2b', i]);\n            }\n          }\n          // also check all indexes using bip39/44 derivation\n          // take 128 char bip39 seed directly from input or convert it from a 64 char nano seed (entropy)\n          if (keyType === 'bip39_seed') {\n            bip39Seed = this.sourceWallet;\n          } else if (seed.length === 64) {\n            bip39Seed = wallet.generate(seed).seed;\n          }\n\n          if (bip39Seed.length !== 128) return this.notificationService.sendError(`Invalid input format! Please check.`);\n          const accounts = wallet.accounts(bip39Seed, this.startIndex, this.endIndex);\n          let k = 0;\n          for (let i = parseInt(this.startIndex, 10); i <= parseInt(this.endIndex, 10); i++) {\n            privKey = accounts[k].privateKey;\n            k += 1;\n            privKeys.push([privKey, 'bip39/44', i]);\n          }\n          this.processIndexRecursive(privKeys, 0);\n        }.bind(this));\n      }\n\n    } else {\n      this.notificationService.sendError(`Invalid input format! Please check.`);\n    }\n  }\n\n  /* Start the sweeping */\n  async sweep() {\n    if (!this.validSeed) {\n      this.notificationService.sendError(`No valid source wallet provided!`);\n      return;\n    }\n    if (!this.validDestination) {\n      this.notificationService.sendError(`No valid destination account provided!`);\n      return;\n    }\n\n    if (this.validStartIndex && this.validEndIndex) {\n      if (parseInt(this.startIndex, 10) > parseInt(this.endIndex, 10)) {\n        this.notificationService.sendError(`End Index must be equal or larger than Start Index`);\n        return;\n      }\n    } else {\n      this.notificationService.sendError(`Not valid start and end indexes`);\n      return;\n    }\n\n    if (!this.validMaxIncoming) {\n      this.notificationService.sendError(`Not a valid number for Max Incoming`);\n      return;\n    }\n\n    // let user confirm account\n    const UIkit = window['UIkit'];\n    try {\n      const msg = '<p class=\"uk-alert uk-alert-danger\"><br><span class=\"uk-flex\"><span uk-icon=\"icon: warning; ratio: 3;\" class=\"uk-align-center\"></span></span><span style=\"font-size: 18px;\">You are about to empty the source wallet, which will <b>transfer all funds from it to the destination address</b>.</span><br><br><b style=\"font-size: 18px;\">Before continuing, make sure you (or someone) have saved the secret recovery seed and/or mnemonic of the specified destination address</b>.<br><br><span style=\"font-size: 18px;\"><b>YOU WILL NOT BE ABLE TO RECOVER THE FUNDS</b><br>without a backup of the specified destination address.</span></p><br>';\n      await UIkit.modal.confirm(msg);\n      this.sweepContinue();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">Wallet Sweeper</h2>\n\n    <div class=\"uk-width-1-1 nlt-page-intro\">\n      <p>\n        This lets you collect all funds from all accounts in a given wallet and transfer them to any destination.\n      </p>\n      <p>\n        Could be used to load a paper wallet into some of your existing accounts, transfer a wallet or even empty your existing Nault wallet and transfer it somewhere else.\n      </p>\n      <p>\n        Even a mnemonic from a Ledger hardware wallet or other multicurrency wallets using BIP39/44 can be recovered using this tool.\n      </p>\n      <p>\n        <strong>Please use with caution if you are using an external destination. Make sure you have access to the secret recovery seed on the receiving side!</strong>\n      </p>\n    </div>\n\n    <div class=\"uk-card uk-card-default\">\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"source-wallet\">Source Wallet <span uk-icon=\"icon: info;\" uk-tooltip title=\"The wallet to empty/sweep into the destination. WARNING: This wallet and all coresponding accounts will be emptied.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\">\n                        <input [(ngModel)]=\"sourceWallet\" class=\"uk-input uk-margin-small-bottom {{validSeed ? '':'uk-form-danger'}}\" id=\"source-wallet\" type=\"text\" (ngModelChange)=\"seedChange(sourceWallet)\" placeholder=\"Secret recovery seed, BIP39 seed, private key or 12,15,18,21,24-word secret recovery mnemonic\" autocomplete=\"off\">\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"destination-account\">Local Destination <span uk-icon=\"icon: info;\" uk-tooltip title=\"Local accounts that can be used as destination for the swept funds. Make sure you are able to unlock your Nault wallet.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" id=\"destination-account\" [(ngModel)]=\"myAccountModel\" (change)=\"setDestination(myAccountModel)\">\n                    <option *ngFor=\"let account of accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | rai: 'mnano,true' | amountsplit: 0 }}{{ account.balance | rai: 'mnano,true' | amountsplit: 1 }} XNO)</option>\n                    <option [value]=\"0\">Custom Destination</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"customAccountSelected\" class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"custom-destination\">Custom Destination <span uk-icon=\"icon: info;\" uk-tooltip title=\"The deposit account for the sweps funds. Can be any remote account.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\">\n                        <input [(ngModel)]=\"destinationAccount\" class=\"uk-input uk-margin-small-bottom {{validDestination ? '':'uk-form-danger'}}\" id=\"custom-destination\" type=\"text\" (ngModelChange)=\"destinationChange(destinationAccount)\" placeholder=\"nano_abc..123\">\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"start-index\">Start Index <span uk-icon=\"icon: info;\" uk-tooltip title=\"The account index to start looking for funds. The first account in any wallet is usually 0. Ignored if using private key as source. The maximum number of indexes to check in each run is 100.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input [(ngModel)]=\"startIndex\" class=\"uk-input uk-margin-small-bottom {{validStartIndex ? '':'uk-form-danger'}}\" id=\"start-index\" type=\"text\" maxLength=\"10\" (ngModelChange)=\"startIndexChange(startIndex)\" placeholder=\"0 to {{indexMax}}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"end-index\">End Index <span uk-icon=\"icon: info;\" uk-tooltip title=\"The account index to stop looking for funds. The first account in any wallet is usually 0. Ignored if using private key as source. The maximum number of indexes to check in each run is 100.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input [(ngModel)]=\"endIndex\" class=\"uk-input uk-margin-small-bottom {{validEndIndex ? '':'uk-form-danger'}}\" id=\"end-index\" type=\"text\" maxLength=\"10\" (ngModelChange)=\"endIndexChange(endIndex)\" placeholder=\"0 to {{indexMax}}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"max-incoming\">Max Incoming Tx's <span uk-icon=\"icon: info;\" uk-tooltip title=\"Maximum number of incoming transactions to receive on each source account before sweeping. 0 is allowed. You can also use the 'Min Receive' in the app settings to get rid of spam. If not enough, you can just run the process multiple times.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input [(ngModel)]=\"maxIncoming\" class=\"uk-input uk-margin-small-bottom {{validMaxIncoming ? '':'uk-form-danger'}}\" id=\"max-incoming\" type=\"text\" maxLength=\"10\" (ngModelChange)=\"maxIncomingChange(maxIncoming)\" placeholder=\"0 to {{incomingMax}}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <button *ngIf=\"!sweeping\" class=\"uk-button uk-button-primary uk-width-1-1\" type=\"button\" [disabled]=\"!settings.settings.serverAPI\" (click)=\"sweep()\">{{settings.settings.serverAPI ? 'START SWEEPING':'NOT AVAILABLE IN OFFLINE MODE'}}</button>\n            <button *ngIf=\"sweeping\" class=\"uk-button uk-button-primary uk-disabled uk-width-1-1\" type=\"button\"><span class=\"uk-margin-right\" uk-spinner></span> PROCESSING...</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-width-1-1\">\n      <textarea [(ngModel)]=\"output\" rows=\"4\" readOnly #outputarea class=\"uk-input uk-margin-small-bottom\" placeholder=\"The output log will be visible here\"></textarea>   \n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, ChildActivationEnd, Router} from '@angular/router';\nimport {WalletService} from '../../services/wallet.service';\nimport {ApiService} from '../../services/api.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport BigNumber from 'bignumber.js';\nimport {AddressBookService} from '../../services/address-book.service';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-transaction-details',\n  templateUrl: './transaction-details.component.html',\n  styleUrls: ['./transaction-details.component.css']\n})\nexport class TransactionDetailsComponent implements OnInit {\n  nano = 1000000000000000000000000;\n\n  routerSub = null;\n  transaction: any = {};\n  hashID = '';\n  blockType = '';\n  loadingBlock = false;\n  isStateBlock = true;\n  isUnconfirmedBlock = false;\n  blockHeight = -1;\n\n  toAccountID = '';\n  fromAccountID = '';\n  toAddressBook = '';\n  fromAddressBook = '';\n\n  transactionJSON = '';\n  showBlockData = false;\n\n  amountRaw = new BigNumber(0);\n  successorHash = '';\n\n  constructor(\n    private walletService: WalletService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private addressBook: AddressBookService,\n    private api: ApiService,\n    private notifications: NotificationService,\n    public settings: AppSettingsService,\n    private translocoService: TranslocoService\n  ) { }\n\n  async ngOnInit() {\n    this.routerSub = this.router.events.subscribe(event => {\n      if (event instanceof ChildActivationEnd) {\n        this.loadTransaction(); // Reload the state when navigating to itself from the transactions page\n      }\n    });\n\n    await this.loadTransaction();\n  }\n\n  async loadTransaction() {\n    this.toAccountID = '';\n    this.fromAccountID = '';\n    this.toAddressBook = '';\n    this.fromAddressBook = '';\n    this.transaction = {};\n    this.transactionJSON = '';\n    this.isUnconfirmedBlock = false;\n    this.blockHeight = -1;\n    this.showBlockData = false;\n    let legacyFromAccount = '';\n    this.blockType = '';\n    this.amountRaw = new BigNumber(0);\n    this.successorHash = '';\n    const hash = this.route.snapshot.params.transaction;\n    this.hashID = hash;\n\n    this.loadingBlock = true;\n    const blockData = await this.api.blocksInfo([hash]);\n\n    if ( !blockData || blockData.error || !blockData.blocks[hash] ) {\n      this.loadingBlock = false;\n      this.transaction = null;\n      return;\n    }\n\n    const hashData = blockData.blocks[hash];\n    const hashContents = hashData.contents ? hashData.contents : hashData;\n    hashData.contents = hashContents;\n\n    this.transactionJSON = JSON.stringify(hashData.contents, null , 4);\n\n    this.isUnconfirmedBlock = (hashData.confirmed === 'false') ? true : false;\n    this.blockHeight = hashData.height;\n\n    const HASH_ONLY_ZEROES = '0000000000000000000000000000000000000000000000000000000000000000';\n\n    const blockType = hashData.contents.type;\n    if (blockType === 'state') {\n      const isOpen = (hashData.contents.previous === HASH_ONLY_ZEROES);\n\n      if (isOpen) {\n        this.blockType = 'open';\n      } else {\n        const prevRes = await this.api.blocksInfo([hashData.contents.previous]);\n        const prevData = prevRes.blocks[hashData.contents.previous];\n        prevData.contents = JSON.parse(prevData.contents);\n        if (!prevData.contents.balance) {\n          // Previous block is not a state block.\n          this.blockType = prevData.contents.type;\n          legacyFromAccount = prevData.source_account;\n        } else {\n          const prevBalance = new BigNumber(prevData.contents.balance);\n          const curBalance = new BigNumber(hashData.contents.balance);\n          const balDifference = curBalance.minus(prevBalance);\n          if (balDifference.isNegative()) {\n            this.blockType = 'send';\n          } else if (balDifference.isZero()) {\n            this.blockType = 'change';\n          } else {\n            this.blockType = 'receive';\n          }\n        }\n      }\n    } else {\n      this.blockType = blockType;\n      this.isStateBlock = false;\n    }\n\n    if (hashData.amount) {\n      this.amountRaw = new BigNumber(hashData.amount).mod(this.nano);\n    }\n\n    if (\n          (hashData.successor != null)\n        && (hashData.successor !== HASH_ONLY_ZEROES)\n      ) {\n        this.successorHash = hashData.successor;\n    }\n\n    this.transaction = hashData;\n\n    let fromAccount = '';\n    let toAccount = '';\n    switch (this.blockType) {\n      case 'send':\n        fromAccount = this.transaction.block_account;\n        toAccount = this.transaction.contents.destination || this.transaction.contents.link_as_account;\n        break;\n      case 'open':\n      case 'receive':\n        fromAccount = this.transaction.source_account;\n        toAccount = this.transaction.block_account;\n        break;\n      case 'change':\n        fromAccount = this.transaction.block_account;\n        toAccount = this.transaction.contents.representative;\n        break;\n    }\n\n    if (legacyFromAccount) {\n      fromAccount = legacyFromAccount;\n    }\n\n    this.toAccountID = toAccount;\n    this.fromAccountID = fromAccount;\n\n    this.fromAddressBook = (\n        this.addressBook.getAccountName(fromAccount)\n      || this.getAccountLabel(fromAccount, null)\n    );\n\n    this.toAddressBook = (\n        this.addressBook.getAccountName(toAccount)\n      || this.getAccountLabel(toAccount, null)\n    );\n\n    this.loadingBlock = false;\n  }\n\n  getAccountLabel(accountID, defaultLabel) {\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === accountID);\n\n    if (walletAccount == null) {\n      return defaultLabel;\n    }\n\n    return (this.translocoService.translate('general.account') + ' #' + walletAccount.index);\n  }\n\n  getBalanceFromHex(balance) {\n    return new BigNumber(balance, 16);\n  }\n\n  getBalanceFromDec(balance) {\n    return new BigNumber(balance, 10);\n  }\n\n  copied() {\n    this.notifications.removeNotification('success-copied');\n    this.notifications.sendSuccess(`Successfully copied to clipboard!`, { identifier: 'success-copied' });\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">Transaction Details</h2>\n\n    <div *ngIf=\"!transaction\">\n      <div class=\"uk-alert uk-alert-warning nlt-inline-alert\">\n        <div class=\"icon-column\">\n          <div uk-icon=\"icon: warning; ratio: 2;\"></div>\n        </div>\n        <p>\n          <b>Unable to find the block with specified hash</b><br>\n          Please double check that the block hash is correct<br>\n          Additionally, try selecting a different server in the app settings\n        </p>\n      </div>\n    </div>\n\n    <div *ngIf=\"isUnconfirmedBlock\">\n      <div class=\"uk-alert uk-alert-danger nlt-inline-alert\">\n        <div class=\"icon-column\">\n          <div uk-icon=\"icon: warning; ratio: 2;\"></div>\n        </div>\n        <p>\n          <b>This block has not yet been confirmed by the network</b><br>\n          The information provided below is not final until the network verifies this block\n        </p>\n      </div>\n    </div>\n\n    <div class=\"uk-width-1-1\" *ngIf=\"transaction\">\n\n      <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\" style=\"margin-bottom: 20px;\" *ngIf=\"loadingBlock === false\">\n        <div class=\"uk-card-header\" style=\"padding: 15px;\" *ngIf=\"(blockType !== 'change')\">\n          <div\n            style=\"padding-bottom: 4px;\"\n            [title]=\"( isUnconfirmedBlock ? 'This transaction has not yet been confirmed by the network' : '' )\"\n            uk-tooltip\n          >\n            <span *ngIf=\"(blockType === 'send')\" [class]=\"(isUnconfirmedBlock ? 'text-half-muted' : 'uk-text-danger')\">Sent</span>\n            <span *ngIf=\"(blockType === 'open')\" [class]=\"(isUnconfirmedBlock ? 'text-half-muted' : 'uk-text-success')\">Received</span>\n            <span *ngIf=\"(blockType === 'receive')\" [class]=\"(isUnconfirmedBlock ? 'text-half-muted' : 'uk-text-success')\">Received</span>\n            <span class=\"icon-unconfirmed text-half-muted\" uk-icon=\"icon: clock;\" *ngIf=\"(isUnconfirmedBlock === true)\"></span>\n          </div>\n          <div\n            *ngIf=\"transaction?.amount\"\n            class=\"block-amount-primary\"\n            [class.uk-text-danger]=\"(blockType === 'send')\"\n            [class.uk-text-success]=\"( (blockType === 'open') || (blockType === 'receive') )\"\n          >\n            <span class=\"amount-integer\">{{ transaction?.amount | rai: 'mnano,true' | amountsplit: 0 }}</span>\n            <span class=\"amount-fractional\">{{ transaction?.amount | rai: 'mnano,true' | amountsplit: 1 }}</span>\n            <span class=\"currency-name\">NANO</span>\n          </div>\n          <div *ngIf=\"amountRaw.gt(0)\" class=\"uk-text-small text-half-muted\" style=\"margin: 2px 0 -2px 0;\">+{{ amountRaw.toString(10) }} raw</div>\n        </div>\n        <div class=\"uk-card-header\" *ngIf=\"(blockType === 'change')\">\n          <div\n            [title]=\"( isUnconfirmedBlock ? 'This change has not yet been confirmed by the network' : '' )\"\n            uk-tooltip\n          >\n            <div [class]=\"(isUnconfirmedBlock ? 'text-half-muted' : 'text-rep-change')\" style=\"margin-bottom: 7px;\" uk-icon=\"icon: cog; ratio: 1.2;\"></div><br>\n            <span [class]=\"(isUnconfirmedBlock ? 'text-half-muted' : 'text-rep-change')\">Representative Change</span>\n            <span class=\"icon-unconfirmed text-half-muted\" uk-icon=\"icon: clock;\" *ngIf=\"(isUnconfirmedBlock === true)\"></span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"account-snippet-container\" *ngIf=\"loadingBlock === false\">\n        <div class=\"account-snippet uk-text-truncate\">\n          <div class=\"uk-card uk-card-default uk-text-truncate\" [class.identicons-enabled]=\"(settings.settings.identiconsStyle !== 'none')\">\n            <div class=\"uk-card-header\">\n              <div class=\"snippet-caption uk-text-small text-half-muted\" *ngIf=\"(blockType !== 'change')\">From Account</div>\n              <div class=\"snippet-caption uk-text-small text-half-muted\" *ngIf=\"(blockType === 'change')\">Account</div>\n              <div class=\"uk-flex uk-flex-nowrap uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                <a [routerLink]=\"'/account/' + fromAccountID\" class=\"uk-link-reset account-container uk-text-truncate\" uk-tooltip title=\"View Account Details\">\n                  <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\"><app-nano-account-id [accountID]=\"fromAccountID\"></app-nano-account-id></div>\n                  <div class=\"identicon-address-book-row\">\n                    <!-- <app-nano-identicon scale=\"12\" [accountID]=\"fromAccountID\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon> -->\n                    <div class=\"account-label uk-text-truncate\" *ngIf=\"fromAddressBook\">{{ fromAddressBook }}</div>\n                  </div>\n                </a>\n                <div class=\"snippet-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                  <ul class=\"uk-iconnav\">\n                    <li><a ngxClipboard [cbContent]=\"fromAccountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"account-snippet uk-text-truncate\">\n          <div class=\"uk-card uk-card-default uk-text-truncate\" [class.identicons-enabled]=\"(settings.settings.identiconsStyle !== 'none')\">\n            <div class=\"uk-card-header\">\n              <div class=\"snippet-caption uk-text-small text-half-muted\" *ngIf=\"(blockType != 'change')\">To Account</div>\n              <div class=\"snippet-caption uk-text-small text-half-muted\" *ngIf=\"(blockType == 'change')\">New Representative</div>\n              <div class=\"uk-flex uk-flex-nowrap uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                <a [routerLink]=\"'/account/' + toAccountID\" class=\"uk-link-reset account-container uk-text-truncate\" uk-tooltip title=\"View Account Details\">\n                  <div class=\"nano-address-clickable nano-address-monospace uk-text-truncate\"><app-nano-account-id [accountID]=\"toAccountID\"></app-nano-account-id></div>\n                  <div class=\"identicon-address-book-row\">\n                    <!-- <app-nano-identicon scale=\"12\" [accountID]=\"toAccountID\" [settingIdenticonsStyle]=\"settings.settings.identiconsStyle\" class=\"nano-identicon\" *ngIf=\"(settings.settings.identiconsStyle !== 'none')\"></app-nano-identicon> -->\n                    <div class=\"account-label uk-text-truncate\" *ngIf=\"toAddressBook\">{{ toAddressBook }}</div>\n                  </div>\n                </a>\n                <div class=\"snippet-address-actions uk-width-auto uk-flex uk-flex-bottom\">\n                  <ul class=\"uk-iconnav\">\n                    <li><a ngxClipboard [cbContent]=\"toAccountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n\n      <div class=\"uk-card-header uk-padding-small uk-form-horizontal\">\n\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\">Block Hash:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <div uk-grid class=\"uk-flex-nowrap uk-text-truncate\">\n              <div class=\"uk-width-auto block-hash-monospace uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">{{ hashID }}</div>\n              <div class=\"uk-width-auto block-hash-actions\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"hashID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Block Hash\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"uk-card-body uk-text-center\" *ngIf=\"loadingBlock\">\n        <span class=\"uk-margin-right\" uk-spinner></span> Loading transaction details...\n      </div>\n\n      <div class=\"uk-card-body uk-padding-small uk-form-horizontal\" *ngIf=\"!loadingBlock && transaction\">\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.type\">\n          <label class=\"uk-form-label\">Type:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">{{ transaction?.contents?.type }}</div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.local_timestamp\">\n          <label class=\"uk-form-label\">Date:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <span *ngIf=\"transaction.local_timestamp\">{{ transaction?.local_timestamp * 1000 | date: 'MMM d, y HH:mm:ss' }}</span>\n            <span *ngIf=\"!transaction.local_timestamp\" class=\"uk-text-muted\">N/A</span>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.balance\">\n          <label class=\"uk-form-label\">Balance:</label>\n          <div class=\"uk-form-controls uk-text-truncate block-balance\">\n            <div class=\"balance-amount-primary uk-text-truncate\">\n              <span class=\"amount-integer\">{{ ( isStateBlock ? getBalanceFromDec(transaction?.contents?.balance) : getBalanceFromHex(transaction?.contents?.balance )) | rai: 'mnano,true' | amountsplit: 0 }}</span>\n              <span class=\"amount-fractional\">{{ ( isStateBlock ? getBalanceFromDec(transaction?.contents?.balance) : getBalanceFromHex(transaction?.contents?.balance )) | rai: 'mnano,true' | amountsplit: 1 }}</span>\n              <span class=\"currency-name\">NANO</span>\n            </div>\n            <div class=\"uk-text-small block-hash-monospace\"><span class=\"text-half-muted\" style=\"margin-right: 4px;\">=</span>{{ transaction?.contents?.balance }} raw</div>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.representative\">\n          <label class=\"uk-form-label\">Representative:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <a [routerLink]=\"'/account/' + transaction?.contents?.representative\" class=\"account-container uk-link-text uk-text-truncate\" uk-tooltip title=\"View Account Details\">\n              <span class=\"nano-address-clickable nano-address-monospace uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                <app-nano-account-id [accountID]=\"transaction?.contents?.representative\"></app-nano-account-id>\n              </span>\n            </a>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.previous && (blockType != 'open')\">\n          <label class=\"uk-form-label\">Previous:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <div uk-grid class=\"uk-flex-nowrap uk-text-truncate\">\n              <a\n                class=\"uk-width-auto uk-text-truncate block-hash-monospace block-hash-clickable\"\n                [routerLink]=\"'/transaction/' + transaction?.contents?.previous\"\n                style=\"max-width: calc(100% - 35px);\"\n                title=\"View Block Details\"\n                uk-tooltip\n              >{{ transaction?.contents?.previous }}</a>\n              <div class=\"uk-width-auto block-hash-actions\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"transaction?.contents?.previous\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Previous Block Hash\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"successorHash\">\n          <label class=\"uk-form-label\">Successor:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <div uk-grid class=\"uk-flex-nowrap uk-text-truncate\">\n              <a\n                class=\"uk-width-auto uk-text-truncate block-hash-monospace block-hash-clickable\"\n                [routerLink]=\"'/transaction/' + successorHash\"\n                style=\"max-width: calc(100% - 35px);\"\n                title=\"View Block Details\"\n                uk-tooltip\n              >{{ successorHash }}</a>\n              <div class=\"uk-width-auto block-hash-actions\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"successorHash\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Successor Block Hash\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"blockHeight != -1\">\n          <label class=\"uk-form-label\">Height:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">{{ blockHeight | number:'':'en-US' }}</div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"(transaction?.contents?.link || transaction?.contents?.source) && (blockType == 'open' || blockType == 'receive')\">\n          <label class=\"uk-form-label\">Link (Source):</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <div uk-grid class=\"uk-flex-nowrap uk-text-truncate\">\n              <a\n                class=\"uk-width-auto uk-text-truncate block-hash-monospace block-hash-clickable\"\n                [routerLink]=\"'/transaction/' + (transaction?.contents?.link || transaction?.contents?.source)\"\n                style=\"max-width: calc(100% - 35px);\"\n                title=\"View Block Details\"\n                uk-tooltip\n              >{{ transaction?.contents?.link }}</a>\n              <div class=\"uk-width-auto block-hash-actions\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"(transaction?.contents?.link || transaction?.contents?.source)\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Source Block Hash\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.link_as_account && blockType == 'send'\">\n          <label class=\"uk-form-label\">Link (Destination):</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <a [routerLink]=\"'/account/' + transaction?.contents?.link_as_account\" class=\"account-container uk-link-text uk-text-truncate\" uk-tooltip title=\"View Account Details\">\n              <span class=\"nano-address-clickable nano-address-monospace uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                <app-nano-account-id [accountID]=\"transaction?.contents?.link_as_account\"></app-nano-account-id>\n              </span>\n            </a>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.work\">\n          <label class=\"uk-form-label\">Work:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <div uk-grid class=\"uk-flex-nowrap uk-text-truncate\">\n              <div\n                class=\"uk-width-auto uk-text-truncate block-hash-monospace\"\n                style=\"max-width: calc(100% - 35px);\"\n              >{{ transaction?.contents?.work }}</div>\n              <div class=\"uk-width-auto block-hash-actions\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"transaction?.contents?.work\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Work Value\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.signature\">\n          <label class=\"uk-form-label\">Signature:</label>\n          <div class=\"uk-form-controls uk-text-small\">\n            <div uk-grid class=\"uk-flex-nowrap uk-flex-middle\" style=\"max-width: 100%;\">\n              <div class=\"uk-width-auto block-hash-monospace block-signature\">{{ transaction?.contents?.signature }}</div>\n              <div class=\"uk-width-auto block-hash-actions\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"transaction?.contents?.signature\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Signature\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n    <div uk-grid *ngIf=\"transaction\">\n      <div class=\"uk-width-1-1 uk-text-center\">\n        <a (click)=\"showBlockData = !showBlockData\" class=\"uk-link-text\">{{ showBlockData ? 'Hide' : 'Show' }} Block Data</a>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"transaction && transactionJSON && showBlockData\">\n      <div class=\"uk-card-header\">\n        Raw Block Data\n      </div>\n      <div class=\"uk-card-body uk-padding-small uk-form-horizontal\">\n        <pre><code>{{ transactionJSON }}</code></pre>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {LedgerService, LedgerStatus} from '../../services/ledger.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {PowService} from '../../services/pow.service';\n\n@Component({\n  selector: 'app-wallet-widget',\n  templateUrl: './wallet-widget.component.html',\n  styleUrls: ['./wallet-widget.component.css']\n})\nexport class WalletWidgetComponent implements OnInit {\n  wallet = this.walletService.wallet;\n\n  ledgerStatus = 'not-connected';\n  powAlert = false;\n\n  unlockPassword = '';\n\n  modal: any = null;\n  mayAttemptUnlock = true;\n  timeoutIdAllowingUnlock: any = null;\n\n  constructor(\n    public walletService: WalletService,\n    private notificationService: NotificationService,\n    public ledgerService: LedgerService,\n    public settings: AppSettingsService,\n    private powService: PowService) { }\n\n  @ViewChild('passwordInput') passwordInput: ElementRef;\n\n  ngOnInit() {\n    const UIkit = (window as any).UIkit;\n    const modal = UIkit.modal(document.getElementById('unlock-wallet-modal'));\n    UIkit.util.on('#unlock-wallet-modal', 'hidden', () => {\n      this.onModalHidden();\n    });\n    this.modal = modal;\n\n    this.ledgerService.ledgerStatus$.subscribe((ledgerStatus: any) => {\n      this.ledgerStatus = ledgerStatus.status;\n    });\n\n    // Detect if a PoW is taking too long and alert\n    this.powService.powAlert$.subscribe(async shouldAlert => {\n      if (shouldAlert) {\n        this.powAlert = true;\n      } else {\n        this.powAlert = false;\n      }\n    });\n\n    this.walletService.wallet.unlockModalRequested$.subscribe(async wasRequested => {\n      if (wasRequested === true) {\n        this.showModal();\n      }\n    });\n  }\n\n  showModal() {\n    this.unlockPassword = '';\n    this.modal.show();\n  }\n\n  onModalHidden() {\n    this.unlockPassword = '';\n    this.walletService.wallet.unlockModalRequested$.next(false);\n  }\n\n  async lockWallet() {\n    if (this.wallet.type === 'ledger') {\n      return; // No need to lock a ledger wallet, no password saved\n    }\n    if (!this.wallet.password) {\n      return this.notificationService.sendWarning(`You must set a password on your wallet - it is currently blank!`);\n    }\n    const locked = await this.walletService.lockWallet();\n    if (locked) {\n      this.notificationService.sendSuccess(`Wallet locked`);\n    } else {\n      this.notificationService.sendError(`Unable to lock wallet`);\n    }\n  }\n\n  async reloadLedger() {\n    this.notificationService.sendInfo(`Checking Ledger Status...`, { identifier: 'ledger-status', length: 0 });\n    try {\n      await this.ledgerService.loadLedger();\n      this.notificationService.removeNotification('ledger-status');\n      if (this.ledgerStatus === LedgerStatus.READY) {\n        this.notificationService.sendSuccess(`Successfully connected to Ledger device`);\n      }\n    } catch (err) {\n      console.log(`Got error when loading ledger! `, err);\n      this.notificationService.removeNotification('ledger-status');\n      // this.notificationService.sendError(`Unable to load Ledger Device: ${err.message}`);\n    }\n  }\n\n  allowUnlock(params: any) {\n    this.mayAttemptUnlock = true;\n    this.timeoutIdAllowingUnlock = null;\n    this.unlockPassword = '';\n\n    if (params.focusInputElement === true) {\n      setTimeout(() => { this.passwordInput.nativeElement.focus(); }, 10);\n    }\n  }\n\n  async unlockWallet() {\n    if (this.mayAttemptUnlock === false) {\n      return;\n    }\n\n    this.mayAttemptUnlock = false;\n\n    if (this.timeoutIdAllowingUnlock !== null) {\n      clearTimeout(this.timeoutIdAllowingUnlock);\n    }\n\n    this.timeoutIdAllowingUnlock = setTimeout(\n      () => {\n        this.allowUnlock({ focusInputElement: true });\n      },\n      500\n    );\n\n    const unlocked = await this.walletService.unlockWallet(this.unlockPassword);\n\n    if (unlocked) {\n      // this.notificationService.sendSuccess(`Wallet unlocked`);\n      this.modal.hide();\n      if (this.unlockPassword.length < 6) {\n        // eslint-disable-next-line max-len\n        this.notificationService.sendWarning(`You are using an insecure password and encouraged to change it from settings > manage wallet`);\n      }\n\n      if (this.timeoutIdAllowingUnlock !== null) {\n        clearTimeout(this.timeoutIdAllowingUnlock);\n        this.timeoutIdAllowingUnlock = null;\n      }\n\n      this.allowUnlock({ focusInputElement: false });\n    } else {\n      this.notificationService.sendError(`Incorrect password, please try again!`);\n    }\n  }\n\n  cancelPow() {\n    this.powService.cancelAllPow(true);\n  }\n\n}\n","<div *ngIf=\"walletService.isLedgerWallet()\">\n  <div class=\"nav-status-row\" *ngIf=\"ledgerStatus === 'not-connected' || !ledgerStatus\">\n    <div class=\"status-icon\">\n      <span class=\"uk-text-warning\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary uk-text-warning\">Ledger disconnected</div>\n      <div class=\"label secondary\"><a (click)=\"reloadLedger()\">Reconnect</a> or <a href=\"https://docs.nault.cc/2020/08/04/ledger-guide.html#troubleshooting\" target=\"_blank\" rel=\"noopener noreferrer\">view Troubleshooting Guide</a></div>\n    </div>\n  </div>\n  <div class=\"nav-status-row\" *ngIf=\"( ledgerStatus === 'locked' )\">\n    <div class=\"status-icon\">\n      <span class=\"uk-text-warning\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary uk-text-warning\">Ledger locked</div>\n      <div class=\"label secondary\">Unlock the device, then <a (click)=\"reloadLedger()\">click here</a> to reconnect</div>\n    </div>\n  </div>\n  <div class=\"nav-status-row interactable\" (click)=\"reloadLedger()\" *ngIf=\"( ledgerStatus === 'ready' )\">\n    <div class=\"status-icon\">\n      <span class=\"uk-text-success\" uk-icon=\"icon: bolt; ratio: 1.2;\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary uk-text-success\">Ledger Ready</div>\n    </div>\n  </div>\n</div>\n\n<div class=\"nav-status-row\" *ngIf=\"powAlert\">\n  <div class=\"status-icon\">\n    <span class=\"uk-text-warning\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n  </div>\n  <div class=\"status-labels\">\n    <div class=\"label primary uk-text-warning\">Proof of Work is taking a while...</div>\n    <div class=\"label secondary\"><a routerLink=\"/configure-app\" routerLinkActive=\"active\">Change PoW method</a> or <a (click)=\"cancelPow()\">cancel PoW</a></div>\n  </div>\n</div>\n\n<ng-container *ngIf=\"walletService.isConfigured() && !walletService.isLedgerWallet()\">\n  <div class=\"nav-status-row half-muted interactable\" (click)=\"showModal()\" *ngIf=\"walletService.isLocked()\">\n    <div class=\"status-icon\">\n      <span uk-icon=\"icon: lock; ratio: 1.2;\" class=\"uk-text-top\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary half-muted\">Wallet Locked</div>\n    </div>\n  </div>\n  <div class=\"nav-status-row half-muted interactable\" (click)=\"lockWallet()\" *ngIf=\"!walletService.isLocked()\">\n    <div class=\"status-icon\">\n      <span uk-icon=\"icon: unlock; ratio: 1.2;\" class=\"uk-text-top\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary half-muted\">Wallet Unlocked</div>\n    </div>\n  </div>\n</ng-container>\n\n<a routerLink=\"/configure-wallet\" class=\"nav-status-row interactable\" *ngIf=\"!walletService.isConfigured()\">\n  <div class=\"status-icon\">\n    <span class=\"uk-text-warning\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n  </div>\n  <div class=\"status-labels\">\n    <div class=\"label primary uk-text-warning\">Configure Wallet</div>\n  </div>\n</a>\n\n<div class=\"modal-position-bottom\" id=\"unlock-wallet-modal\" uk-modal>\n  <div class=\"uk-modal-dialog\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-header\">\n      <h2 class=\"uk-modal-title\">Unlock</h2>\n    </div>\n    <div class=\"uk-modal-body\">\n      <input #passwordInput autofocus type=\"password\" [(ngModel)]=\"unlockPassword\" (keyup.enter)=\"unlockWallet()\"\n        [class]=\"{ 'uk-input': true, 'password-input': true, 'uk-form-danger': !mayAttemptUnlock }\"\n        [placeholder]=\"( mayAttemptUnlock ? 'Enter wallet password' : 'Incorrect password' )\"\n        [disabled]=\"!mayAttemptUnlock\"\n      >\n    </div>\n    <div class=\"uk-modal-footer uk-text-right nlt-button-group\">\n      <button class=\"uk-button uk-button-default uk-modal-close\" type=\"button\">Cancel</button>\n      <button class=\"uk-button uk-button-primary\" type=\"button\" (click)=\"unlockWallet()\" [disabled]=\"!mayAttemptUnlock\">Unlock</button>\n    </div>\n  </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {UtilService} from '../services/util.service';\nimport {AppSettingsService} from '../services/app-settings.service';\n\n@Pipe({\n  name: 'account'\n})\nexport class AccountPipe implements PipeTransform {\n\n  constructor(private util: UtilService, private settings: AppSettingsService) {\n\n  }\n\n  transform(value: any, args?: any): any {\n    // const val = this.util.account.setPrefix(value, this.settings.settings.displayPrefix);\n\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'amountsplit'\n})\nexport class AmountSplitPipe implements PipeTransform {\n  transform(input: string, idx: number): string {\n    const splitAmount = input.split('.')[idx];\n\n    if (idx === 0) {\n      // Integer\n      return splitAmount.replace('BTC ', '');\n    }\n\n    // Fractional\n\n    if (splitAmount == null) {\n      return '';\n    }\n\n    const fractionalAmount = splitAmount.replace(/0+$/g, '');\n\n    if (fractionalAmount === '') {\n      return '';\n    }\n\n    return ( '.' + fractionalAmount );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {CurrencyPipe} from '@angular/common';\n\n@Pipe({\n  name: 'currencySymbol'\n})\nexport class CurrencySymbolPipe extends CurrencyPipe implements PipeTransform {\n\n  // This pipe simply shows the currency symbol ($, BTC, etc) and removes any numeric values\n  transform(value: any, args?: any): any {\n    const currency = super.transform(0, value, 'symbol', '1.0-2');\n    return currency.replace(/[0-9]/g, '');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {CurrencyPipe} from '@angular/common';\nimport {BigNumber} from 'bignumber.js';\n\n@Pipe({\n  name: 'fiat'\n})\nexport class FiatPipe extends CurrencyPipe implements PipeTransform {\n  transform(value: any, currencyCode?: string, display?:\n    'code' | 'symbol' | 'symbol-narrow' | string | boolean, digits?: string, locale?: string): any {\n    if (currencyCode === '') {\n      return ``;\n    }\n    if (currencyCode === 'BTC') {\n      return `BTC ${new BigNumber(Number(value).toFixed(4) || 0).toFixed(6)}`;\n    }\n    return super.transform(value, currencyCode, 'symbol-narrow', digits, locale);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'noPaddingZeros'\n})\nexport class NoPaddingZerosPipe implements PipeTransform {\n  transform(input: string): string {\n    const sig = input.split('.')[0];\n    const frac = input.split('.')[1].replace(/0+$/g, '');\n\n    // 1.000000 XNO >> 1 XNO\n    if (!frac) {\n      return sig;\n    }\n\n    // 0.002200 >> 0.0022 XNO\n    return `${sig}.${frac}`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'rai'\n})\nexport class RaiPipe implements PipeTransform {\n  precision = 6;\n\n  mrai = 1000000000000000000000000000000;\n  krai = 1000000000000000000000000000;\n  rai  = 1000000000000000000000000;\n\n  transform(value: any, args?: any): any {\n    const opts = args.split(',');\n    const denomination = opts[0] || 'mrai';\n    const hideText = opts[1] || false;\n\n    switch (denomination.toLowerCase()) {\n      default:\n      case 'xrb': return `${(value / this.mrai).toFixed(6)}${!hideText ? ' XNO' : ''}`;\n      case 'mnano':\n        const hasRawValue = (value / this.rai) % 1;\n        if (hasRawValue) {\n          // New more precise toFixed function, but bugs on huge raw numbers\n          const newVal = value / this.mrai < 0.000001 ? 0 : value / this.mrai;\n          return `${this.toFixed(newVal, this.precision)}${!hideText ? ' XNO' : ''}`;\n        } else {\n          return `${(value / this.mrai).toFixed(6)}${!hideText ? ' XNO' : ''}`;\n        }\n      case 'knano': return `${(value / this.krai).toFixed(3)}${!hideText ? ' knano' : ''}`;\n      case 'nano': return `${(value / this.rai).toFixed(0)}${!hideText ? ' nano' : ''}`;\n      case 'raw': return `${value}${!hideText ? ' raw' : ''}`;\n      case 'dynamic':\n        const rai = (value / this.rai);\n        if (rai >= 1000000) {\n          return `${(value / this.mrai).toFixed(this.precision)}${!hideText ? ' mRai' : ''}`;\n        } else if (rai >= 1000) {\n          return `${(value / this.krai).toFixed(this.precision)}${!hideText ? ' kRai' : ''}`;\n        } else if (rai >= 0.00001) {\n          return `${(value / this.rai).toFixed(this.precision)}${!hideText ? ' Rai' : ''}`;\n        } else if (rai === 0) {\n          return `${value}${!hideText ? ' mRai' : ''}`;\n        } else {\n          return `${value}${!hideText ? ' raw' : ''}`;\n        }\n    }\n  }\n\n  toFixed(num, fixed) {\n    if (isNaN(num)) {\n      return 0;\n    }\n    const re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n    return num.toString().match(re)[0];\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'squeeze'\n})\nexport class SqueezePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    const arg = args ? args.split(',') || [] : [];\n    const openingChars = arg[0] ? parseInt( arg[0], 10 ) : 10;\n    const closingChars = arg[1] ? parseInt( arg[1], 10 ) : 5;\n    const firstChars = value.split('').slice(0, openingChars).join('');\n    const lastChars = value.split('').slice(-closingChars).join('');\n\n    if ( value.length < (openingChars + closingChars) ) {\n      return value;\n    }\n\n    return `${firstChars}...${lastChars}`;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n\ninterface AddressBookEntry {\n  account: string;\n  name: string;\n  trackBalance: boolean;\n  trackTransactions: boolean;\n}\n\n\n@Injectable()\nexport class AddressBookService {\n  storeKey = `nanovault-addressbook`;\n\n  addressBook: AddressBookEntry[] = [];\n\n  addressBook$ = new BehaviorSubject([]);\n\n  constructor() { }\n\n  loadAddressBook() {\n    let addressBook = [];\n    const addressBookStore = localStorage.getItem(this.storeKey);\n    if (addressBookStore) {\n      addressBook = JSON.parse(addressBookStore);\n    }\n    this.addressBook = addressBook;\n    this.addressBook$.next(this.addressBook);\n\n    return this.addressBook;\n  }\n\n  patchXrbPrefixData() {\n    const addressBookStore = localStorage.getItem(this.storeKey);\n    if (!addressBookStore) return;\n\n    const addressBook = JSON.parse(addressBookStore);\n\n    const newAddressBook = addressBook.map(entry => {\n      if (entry.account.indexOf('xrb_') !== -1) {\n        entry.account = entry.account.replace('xrb_', 'nano_');\n      }\n      return entry;\n    });\n\n    localStorage.setItem(this.storeKey, JSON.stringify(newAddressBook));\n\n    return true;\n  }\n\n  async saveAddress(account, name, trackBalance, trackTransactions) {\n    const existingName = this.addressBook.find(a => a.name.toLowerCase() === name.toLowerCase());\n    if (existingName) {\n      const accountIndex = this.addressBook.findIndex(a => a.name.toLowerCase() === name.toLowerCase());\n      // return if the name exist and the tracking is unchanged\n      if (this.addressBook[accountIndex].trackBalance === trackBalance &&\n        this.addressBook[accountIndex].trackTransactions === trackTransactions) return;\n    }\n\n    const existingAccount = this.addressBook.find(a => a.account.toLowerCase() === account.toLowerCase());\n    if (existingAccount) {\n      existingAccount.name = name;\n      existingAccount.trackBalance = trackBalance;\n      existingAccount.trackTransactions = trackTransactions;\n    } else {\n      this.addressBook.push({ account, name, trackBalance, trackTransactions});\n    }\n    this.saveAddressBook();\n    this.addressBook$.next(this.addressBook);\n  }\n\n  deleteAddress(account) {\n    const existingAccountIndex = this.addressBook.findIndex(a => a.account.toLowerCase() === account.toLowerCase());\n    if (existingAccountIndex === -1) return;\n\n    this.addressBook.splice(existingAccountIndex, 1);\n    this.saveAddressBook();\n    this.addressBook$.next(this.addressBook);\n  }\n\n  saveAddressBook(): void {\n    localStorage.setItem(this.storeKey, JSON.stringify(this.addressBook));\n  }\n\n  clearAddressBook(): void {\n    this.addressBook = [];\n    this.addressBook$.next(this.addressBook);\n    localStorage.removeItem(this.storeKey);\n  }\n\n  setAddressBookOrder(addressList) {\n    this.addressBook = addressList\n      .map(address => ({\n        account: address,\n        name: this.getAccountName(address),\n        trackBalance: this.getBalanceTrackingById(address),\n        trackTransactions: this.getTransactionTrackingById(address)\n      }))\n      .filter(entry => entry.name !== null);\n\n    this.saveAddressBook();\n    this.addressBook$.next(this.addressBook);\n  }\n\n  getAccountName(account: string): string|null {\n    if (!account || !account.length) return null;\n    const match = this.addressBook.find(a => a.account.toLowerCase() === account.toLowerCase());\n    return match && match.name || null;\n  }\n\n  getAccountIdByName(name: string): string|null {\n    if (!name || !name.length) return null;\n    const match = this.addressBook.find(a => a.name.toLowerCase() === name.toLowerCase());\n    return match ? match.account : null;\n  }\n\n  nameExists(name: string): boolean {\n    return this.addressBook.findIndex(a => a.name.toLowerCase() === name.toLowerCase()) !== -1;\n  }\n\n  getBalanceTrackingById(account: string): boolean {\n    if (!account || !account.length) return false;\n    const match = this.addressBook.find(a => a.account.toLowerCase() === account.toLowerCase());\n    return match && match.trackBalance || false;\n  }\n\n  getTransactionTrackingById(account: string): boolean {\n    if (!account || !account.length) return false;\n    const match = this.addressBook.find(a => a.account.toLowerCase() === account.toLowerCase());\n    return match && match.trackTransactions || false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpHeaders} from '@angular/common/http';\nimport {NodeService} from './node.service';\nimport {AppSettingsService} from './app-settings.service';\nimport { TxType } from './util.service';\n\n@Injectable()\nexport class ApiService {\n  storeKey = `nanovault-active-difficulty`;\n  constructor(private http: HttpClient, private node: NodeService, private appSettings: AppSettingsService) { }\n\n  private async request(action, data, skipError, url = '', validateResponse?): Promise<any> {\n    data.action = action;\n    const apiUrl = url === '' ? this.appSettings.settings.serverAPI : url;\n    if (!apiUrl) {\n      this.node.setOffline(null); // offline mode\n      return;\n    }\n    if (this.node.node.status === false) {\n      if (!skipError) {\n        this.node.setLoading();\n      }\n    }\n    let options: any = {\n      responseType: 'json',\n    };\n    if (this.appSettings.settings.serverAuth != null && this.appSettings.settings.serverAuth !== '') {\n      options =\n        Object.assign(\n          {},\n          options,\n          {\n            headers: new HttpHeaders()\n              .set('Authorization', this.appSettings.settings.serverAuth)\n          }\n        );\n    }\n    return await this.http.post(apiUrl, data, options).toPromise()\n      .then(res => {\n        if ( typeof validateResponse === 'function' ) {\n          const { err } = validateResponse(res);\n          const isValidResponse = (err == null);\n\n          if (isValidResponse === false) {\n            throw {\n              isValidationFailure: true,\n              status: 500,\n              reason: err,\n              res,\n            };\n          };\n        };\n\n        this.node.setOnline();\n        return res;\n      })\n      .catch(async err => {\n        if (skipError) return;\n\n        if ( err.isValidationFailure === true ) {\n          console.log(\n            'Node response failed validation.',\n            err.reason,\n            err.res\n          );\n        } else {\n          console.log('Node responded with error', err.status);\n        }\n\n        if (this.appSettings.settings.serverName === 'random') {\n          // choose a new backend and do the request again\n          this.appSettings.loadServerSettings();\n          await this.sleep(1000); // delay if all servers are down\n          return this.request(action, data, skipError, '', validateResponse);\n        } else {\n          // hard exit\n          if (err.status === 429) {\n            this.node.setOffline('Too Many Requests to the node. Try again later or choose a different node.');\n          } else {\n            this.node.setOffline();\n          }\n          throw err;\n        }\n      });\n  }\n\n  async accountsBalances(accounts: string[]): Promise<{balances: any }> {\n    return await this.request('accounts_balances', { accounts }, false);\n  }\n  async accountsFrontiers(accounts: string[]): Promise<{frontiers: any }> {\n    return await this.request('accounts_frontiers', { accounts }, false);\n  }\n  async accountsPending(accounts: string[], count: number = 50): Promise<{blocks: any }> {\n    return await this.request('accounts_pending', { accounts, count, source: true, include_only_confirmed: true }, false);\n  }\n  async accountsPendingLimit(accounts: string[], threshold: string, count: number = 50): Promise<{blocks: any }> {\n    return await this.request('accounts_pending', { accounts, count, threshold, source: true, include_only_confirmed: true }, false);\n  }\n  async accountsPendingSorted(accounts: string[], count: number = 50): Promise<{blocks: any }> {\n    return await this.request('accounts_pending',\n      { accounts, count, source: true, include_only_confirmed: true, sorting: true }, false\n    );\n  }\n  async accountsPendingLimitSorted(accounts: string[], threshold: string, count: number = 50): Promise<{blocks: any }> {\n    return await this.request('accounts_pending',\n      { accounts, count, threshold, source: true, include_only_confirmed: true, sorting: true }, false\n    );\n  }\n  async delegatorsCount(account: string): Promise<{ count: string }> {\n    return await this.request('delegators_count', { account }, false);\n  }\n  async representativesOnline(): Promise<{ representatives: any }> {\n    return await this.request('representatives_online', { }, false);\n  }\n\n  async blocksInfo(blocks): Promise<{blocks: any, error?: string}> {\n    return await this.request('blocks_info', { hashes: blocks, pending: true, source: true }, false);\n  }\n  async blockInfo(hash): Promise<any> {\n    return await this.request('block_info', { hash: hash }, false);\n  }\n  async blockCount(): Promise<{count: number, unchecked: number, cemented: number }> {\n    return await this.request('block_count', { include_cemented: 'true'}, false);\n  }\n  async workGenerate(hash, difficulty, workServer = ''): Promise<{ work: string }> {\n    const validateResponse = (res) => {\n      if(res.work == null) {\n        return {\n          err: `Missing field \"work\".`,\n        };\n      };\n\n      if(typeof res.work !== 'string') {\n        return {\n          err: `Invalid type of field \"work\", expected \"string\", got \"${ typeof res.work }\".`,\n        };\n      };\n\n      if(res.work.length !== 16) {\n        return {\n          err: `Invalid length of field \"work\", expected 16, got ${ res.work.length }.`,\n        };\n      };\n\n      if( /^[0-9A-F]+$/i.test(res.work) === false ) {\n        return {\n          err: `Invalid contents of field \"work\", expected hex characters.`,\n        };\n      };\n\n      return {\n        err: null,\n      };\n    };\n\n    return await this.request('work_generate', { hash, difficulty }, workServer !== '', workServer, validateResponse);\n  }\n  async process(block, subtype: TxType): Promise<{ hash: string, error?: string }> {\n    console.log(\"block\", block)\n    return await this.request('process', { block: JSON.stringify(block), watch_work: 'false', subtype: TxType[subtype] }, false);\n  }\n  async accountHistory(account, count = 25, raw = false, offset = 0, reverse = false): Promise<{history: any }> {\n    // use unlimited count if 0\n    if (count === 0) {\n      return await this.request('account_history', { account, raw, offset, reverse}, false);\n    } else {\n      return await this.request('account_history', { account, count, raw, offset, reverse}, false);\n    }\n  }\n  async accountInfo(account): Promise<any> {\n    return await this.request('account_info', { account, pending: true, representative: true, weight: true }, false);\n  }\n  async pending(account, count): Promise<any> {\n    return await this.request('pending', { account, count, source: true, include_only_confirmed: true }, false);\n  }\n  async pendingLimit(account, count, threshold): Promise<any> {\n    return await this.request('pending', { account, count, threshold, source: true, include_only_confirmed: true }, false);\n  }\n  async pendingSorted(account, count): Promise<any> {\n    return await this.request('pending', { account, count, source: true, include_only_confirmed: true, sorting: true }, false);\n  }\n  async pendingLimitSorted(account, count, threshold): Promise<any> {\n    return await this.request('pending', { account, count, threshold, source: true, include_only_confirmed: true, sorting: true }, false);\n  }\n  async version(): Promise<{rpc_version: number, store_version: number, protocol_version: number, node_vendor: string, network: string,\n    network_identifier: string, build_info: string }> {\n    return await this.request('version', { }, true);\n  }\n  async confirmationQuorum(): Promise<{quorum_delta: string, online_weight_quorum_percent: number, online_weight_minimum: string,\n    online_stake_total: string, trended_stake_total: string, peers_stake_total: string }> {\n    return await this.request('confirmation_quorum', { }, true);\n  }\n  public deleteCache() {\n    localStorage.removeItem(this.storeKey);\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as url from 'url';\nimport { TranslocoService, getBrowserCultureLang, getBrowserLang } from '@ngneat/transloco';\n\nexport type WalletStore = 'localStorage'|'none';\nexport type PoWSource = 'server'|'clientCPU'|'clientWebGL'|'best'|'custom'|'nano.to';\nexport type LedgerConnectionType = 'usb'|'bluetooth';\n\ninterface AppSettings {\n  language: string;\n  displayDenomination: string;\n  // displayPrefix: string | null;\n  walletStore: string;\n  displayCurrency: string;\n  defaultRepresentative: string | null;\n  lockOnClose: number;\n  lockInactivityMinutes: number;\n  ledgerReconnect: LedgerConnectionType;\n  powSource: PoWSource;\n  multiplierSource: number;\n  customWorkServer: string;\n  pendingOption: string;\n  serverName: string;\n  serverAPI: string | null;\n  serverWS: string | null;\n  serverAuth: string | null;\n  minimumReceive: string | null;\n  walletVersion: number | null;\n  lightModeEnabled: boolean;\n  identiconsStyle: string;\n}\n\n@Injectable()\nexport class AppSettingsService {\n  storeKey = `nanovault-appsettings`;\n\n  settings: AppSettings = {\n    language: null,\n    displayDenomination: 'mnano',\n    // displayPrefix: 'xrb',\n    walletStore: 'localStorage',\n    displayCurrency: 'USD',\n    defaultRepresentative: null,\n    lockOnClose: 1,\n    lockInactivityMinutes: 30,\n    ledgerReconnect: 'usb',\n    serverName: 'rpc.nano.to',\n    powSource: 'nano.to',\n    serverAPI: 'https://rpc.nano.to',\n    serverWS: null,\n    serverAuth: null,\n    multiplierSource: 1,\n    customWorkServer: '',\n    pendingOption: 'amount',\n    minimumReceive: '0.000001',\n    walletVersion: 1,\n    lightModeEnabled: false,\n    identiconsStyle: 'nanoidenticons',\n  };\n\n  serverOptions = [\n    \n    {\n      name: 'Nano.to - Automatic',\n      value: 'rpc.nano.to',\n      api: 'https://rpc.nano.to',\n      ws: null,\n      auth: '',\n      shouldRandom: true,\n    },\n\n    {\n      name: 'US-1.Nano.To',\n      value: 'us-2.nano.to',\n      api: 'https://us-2.nano.to',\n      ws: null,\n      auth: '',\n      shouldRandom: true,\n    },\n\n    {\n      name: 'US-2.Nano.To',\n      value: 'us-2.nano.to',\n      api: 'https://us-2.nano.to',\n      ws: null,\n      auth: '',\n      shouldRandom: true,\n    },\n\n    {\n      name: 'Europe-1.Nano.To',\n      value: 'uk-2.nano.to',\n      api: 'https://us-2.nano.to',\n      ws: null,\n      auth: '',\n      shouldRandom: true,\n    },\n\n    {\n      name: 'Africa-1.Nano.To',\n      value: 'humblenano-2.nano.to',\n      api: 'https://humblenano-2.nano.to',\n      ws: null,\n      auth: '',\n      shouldRandom: true,\n    },\n\n    {\n      name: 'Random',\n      value: 'random',\n      api: null,\n      ws: null,\n      auth: null,\n      shouldRandom: false,\n    },\n\n    {\n      name: 'Custom Server',\n      value: 'custom',\n      api: null,\n      ws: null,\n      auth: null,\n      shouldRandom: false,\n    },\n\n    {\n      name: 'Offline',\n      value: 'offline',\n      api: null,\n      ws: null,\n      auth: null,\n      shouldRandom: false,\n    }\n\n  ];\n\n  // Simplified list for comparison in other classes\n  knownApiEndpoints = this.serverOptions.reduce((acc, server) => {\n    if (!server.api) return acc;\n    acc.push( server.api.replace(/https?:\\/\\//g, '') );\n    return acc;\n  }, []);\n\n  constructor(\n    private translate: TranslocoService\n  ) { }\n\n  loadAppSettings() {\n    let settings: AppSettings = this.settings;\n    const settingsStore = localStorage.getItem(this.storeKey);\n    if (settingsStore) {\n      settings = JSON.parse(settingsStore);\n    }\n    this.settings = Object.assign(this.settings, settings);\n\n    if (this.settings.language === null) {\n      const browserCultureLang = getBrowserCultureLang();\n      const browserLang = getBrowserLang();\n\n      if (this.translate.getAvailableLangs().some(lang => lang['id'] === browserCultureLang)) {\n        this.settings.language = browserCultureLang;\n      } else if (this.translate.getAvailableLangs().some(lang => lang['id'] === browserCultureLang)) {\n        this.settings.language = browserLang;\n      } else {\n        this.settings.language = this.translate.getDefaultLang();\n      }\n\n      console.log('No language configured, setting to: ' + this.settings.language);\n      console.log('Browser culture language: ' + browserCultureLang);\n      console.log('Browser language: ' + browserLang);\n    }\n\n    this.loadServerSettings();\n\n    return this.settings;\n  }\n\n  loadServerSettings() {\n    const matchingServerOption = this.serverOptions.find(d => d.value === this.settings.serverName);\n\n    if (this.settings.serverName === 'random' || !matchingServerOption) {\n      const availableServers = this.serverOptions.filter(server => server.shouldRandom);\n      const randomServerOption = availableServers[Math.floor(Math.random() * availableServers.length)];\n      console.log('SETTINGS: Random', randomServerOption);\n\n      this.settings.serverAPI = randomServerOption.api;\n      this.settings.serverWS = randomServerOption.ws;\n      this.settings.serverName = 'random';\n    } else if (this.settings.serverName === 'custom') {\n      console.log('SETTINGS: Custom');\n    } else if (this.settings.serverName === 'nano.to') {\n      console.log('SETTINGS: Nano.to Professional RPC');\n    } else if (this.settings.serverName === 'offline') {\n      console.log('SETTINGS: Offline Mode');\n      this.settings.serverName = matchingServerOption.value;\n      this.settings.serverAPI = matchingServerOption.api;\n      this.settings.serverWS = matchingServerOption.ws;\n    } else {\n      console.log('SETTINGS: Found', matchingServerOption);\n      this.settings.serverName = matchingServerOption.value;\n      this.settings.serverAPI = matchingServerOption.api;\n      this.settings.serverWS = matchingServerOption.ws;\n    }\n  }\n\n  saveAppSettings() {\n    localStorage.setItem(this.storeKey, JSON.stringify(this.settings));\n  }\n\n  getAppSetting(key) {\n    return this.settings[key] || null;\n  }\n\n  setAppSetting(key, value) {\n    this.settings[key] = value;\n    this.saveAppSettings();\n  }\n\n  setAppSettings(settingsObject) {\n    for (const key in settingsObject) {\n      if (!settingsObject.hasOwnProperty(key)) continue;\n      this.settings[key] = settingsObject[key];\n    }\n\n    this.saveAppSettings();\n  }\n\n  clearAppSettings() {\n    localStorage.removeItem(this.storeKey);\n    this.settings = {\n      language: 'en',\n      displayDenomination: 'mnano',\n      // displayPrefix: 'xrb',\n      walletStore: 'localStorage',\n      displayCurrency: 'USD',\n      defaultRepresentative: null,\n      lockOnClose: 1,\n      lockInactivityMinutes: 30,\n      ledgerReconnect: 'usb',\n      powSource: 'best',\n      multiplierSource: 1,\n      customWorkServer: '',\n      pendingOption: 'amount',\n      serverName: 'random',\n      serverAPI: null,\n      serverWS: null,\n      serverAuth: null,\n      minimumReceive: '0.000001',\n      walletVersion: 1,\n      lightModeEnabled: false,\n      identiconsStyle: 'nanoidenticons',\n    };\n  }\n\n  // Get the base URL part of the serverAPI, e.g. https://nanovault.io from https://nanovault.io/api/node-api.\n  getServerApiBaseUrl(): string {\n    const u = url.parse(this.settings.serverAPI);\n    u.pathname = '/';\n    return url.format(u);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilService } from './util.service';\r\nimport { NotificationService } from './notification.service';\r\nimport { WalletService } from './wallet.service';\r\nimport { RemoteSignService } from './remote-sign.service';\r\n\r\n@Injectable()\r\nexport class DeeplinkService {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private notifcationService: NotificationService,\r\n    private util: UtilService,\r\n    private walletService: WalletService,\r\n    private remoteSignService: RemoteSignService,\r\n  ) { }\r\n\r\n  navigate(deeplink: string): boolean {\r\n    const nano_scheme = /^(nano|nanorep|nanoseed|nanokey|nanosign|nanoprocess|https):.+$/g;\r\n\r\n    if (this.util.account.isValidAccount(deeplink)) {\r\n      // Got address, routing to send...\r\n      this.router.navigate(['send'], {queryParams: {to: deeplink}});\r\n\r\n    } else if (this.util.nano.isValidSeed(deeplink)) {\r\n      // Seed\r\n      this.handleSeed(deeplink);\r\n\r\n    } else if (nano_scheme.test(deeplink)) {\r\n      // This is a valid Nano scheme URI\r\n      const url = new URL(deeplink);\r\n\r\n      // check if deeplink contains a full URL path\r\n      if (url.protocol === 'https:') {\r\n        if (url.pathname === '/import-wallet' && url.hash.slice(1).length) {\r\n          // wallet import\r\n          this.router.navigate(['import-wallet'], { queryParams: {hostname: url.hostname}, fragment: url.hash.slice(1)});\r\n        } else if (url.pathname === '/import-address-book' && url.hash.slice(1).length) {\r\n          // address book import\r\n          this.router.navigate(['import-address-book'], { queryParams: {hostname: url.hostname}, fragment: url.hash.slice(1)});\r\n        }\r\n      } else if (url.protocol === 'nano:' && this.util.account.isValidAccount(url.pathname)) {\r\n        // Got address, routing to send...\r\n        const amount = url.searchParams.get('amount');\r\n        this.router.navigate(['send'], { queryParams: {\r\n          to: url.pathname,\r\n          amount: amount ? this.util.nano.rawToMnano(amount) : null\r\n        }});\r\n\r\n      } else if (url.protocol === 'nanorep:' && this.util.account.isValidAccount(url.pathname)) {\r\n        // Representative change\r\n        this.router.navigate(['representatives'], { queryParams: {\r\n          hideOverview: true,\r\n          accounts: 'all',\r\n          representative: url.pathname\r\n        }});\r\n\r\n      } else if (url.protocol === 'nanoseed:' && this.util.nano.isValidSeed(url.pathname)) {\r\n        // Seed\r\n        this.handleSeed(url.pathname);\r\n      } else if (url.protocol === 'nanokey:' && this.util.nano.isValidHash(url.pathname)) {\r\n        // Private key\r\n        this.handlePrivateKey(url.pathname);\r\n      } else if (url.protocol === 'nanosign:') {\r\n          this.remoteSignService.navigateSignBlock(url);\r\n\r\n      } else if (url.protocol === 'nanoprocess:') {\r\n          this.remoteSignService.navigateProcessBlock(url);\r\n      }\r\n\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  hasAccounts() {\r\n    return this.walletService.wallet.accounts.length > 0;\r\n  }\r\n\r\n  handleSeed(seed) {\r\n    if (this.hasAccounts()) {\r\n      // Wallet already set up, sweeping...\r\n      this.router.navigate(['sweeper'], { state: { seed: seed } });\r\n    } else {\r\n      // No wallet set up, new wallet...\r\n      this.router.navigate(['configure-wallet'], { state: { seed: seed }});\r\n    }\r\n  }\r\n\r\n  handlePrivateKey(key) {\r\n    if (this.hasAccounts()) {\r\n      // Wallet already set up, sweeping...\r\n      this.router.navigate(['sweeper'], { state: { seed: key } });\r\n    } else {\r\n      // No wallet set up, new wallet...\r\n      this.router.navigate(['configure-wallet'], { state: { key: key }});\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {NotificationService} from './notification.service';\nimport { IpcRenderer } from 'electron';\n\n@Injectable()\nexport class DesktopService {\n\n  private _ipc: IpcRenderer | undefined;\n\n  constructor(private notifications: NotificationService) {\n    if (window.require) {\n      try {\n        this._ipc = window.require('electron').ipcRenderer;\n        console.log('IPC loaded');\n      } catch (e) {\n        throw e;\n      }\n    }\n  }\n\n  connect() {\n  }\n\n  on(channel: string, listener) {\n    if (!this._ipc) return false;\n    this._ipc.on(channel, listener);\n    return true;\n  }\n\n  send(channel: string, ...args) {\n    if (!this._ipc) return false;\n    this._ipc.send(channel, ...args);\n    return true;\n  }\n\n}\n","export * from './address-book.service';\nexport * from './api.service';\nexport * from './app-settings.service';\nexport * from './desktop.service';\nexport * from './ledger.service';\nexport * from './modal.service';\nexport * from './nano-block.service';\nexport * from './node.service';\nexport * from './notification.service';\nexport * from './pow.service';\nexport * from './price.service';\nexport * from './representative.service';\nexport * from './util.service';\nexport * from './wallet.service';\nexport * from './websocket.service';\nexport * from './work-pool.service';\nexport * from './ninja.service';\nexport * from './deeplink.service';\n","import { Injectable } from '@angular/core';\nimport Nano from 'hw-app-nano';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport TransportUSB from '@ledgerhq/hw-transport-webusb';\nimport TransportHID from '@ledgerhq/hw-transport-webhid';\nimport TransportBLE from '@ledgerhq/hw-transport-web-ble';\nimport Transport from '@ledgerhq/hw-transport';\nimport * as LedgerLogs from '@ledgerhq/logs';\nimport {Subject} from 'rxjs';\nimport {ApiService} from './api.service';\nimport {NotificationService} from './notification.service';\nimport { environment } from '../../environments/environment';\nimport {DesktopService} from './desktop.service';\nimport { AppSettingsService } from './app-settings.service';\n\nexport const STATUS_CODES = {\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  INVALID_SIGNATURE: 0x6a81,\n  CACHE_MISS: 0x6a82\n};\n\nexport const LedgerStatus = {\n  NOT_CONNECTED: 'not-connected',\n  LOCKED: 'locked',\n  READY: 'ready',\n};\n\n\nexport interface LedgerData {\n  status: string;\n  nano: any|null;\n  transport: Transport|null;\n}\n\nexport interface LedgerLog {\n  type: string;\n  message?: string;\n  data?: any;\n  id: string;\n  date: Date;\n}\n\nconst zeroBlock = '0000000000000000000000000000000000000000000000000000000000000000';\n\n@Injectable()\nexport class LedgerService {\n  walletPrefix = `44'/165'/`;\n\n  waitTimeout = 300000;\n  normalTimeout = 5000;\n  pollInterval = 15000;\n\n  pollingLedger = false;\n\n  ledger: LedgerData = {\n    status: LedgerStatus.NOT_CONNECTED,\n    nano: null,\n    transport: null,\n  };\n\n  // isDesktop = true;\n  isDesktop = environment.desktop;\n  queryingDesktopLedger = false;\n\n  supportsU2F = false;\n  supportsWebHID = false;\n  supportsWebUSB = false;\n  supportsBluetooth = false;\n  supportsUSB = false;\n\n  transportMode: 'U2F' | 'USB' | 'HID' | 'Bluetooth' = 'U2F';\n  DynamicTransport = TransportU2F;\n\n  ledgerStatus$: Subject<any> = new Subject();\n  desktopMessage$ = new Subject();\n\n  constructor(private api: ApiService,\n              private desktop: DesktopService,\n              private notifications: NotificationService,\n              private appSettings: AppSettingsService) {\n    if (this.isDesktop) {\n      this.configureDesktop();\n    } else {\n      this.checkBrowserSupport().then(() => {\n        if (appSettings.getAppSetting('ledgerReconnect') === 'bluetooth') {\n          this.enableBluetoothMode(true);\n        }\n      });\n    }\n  }\n\n  // Scraps binding to any existing transport/nano object\n  resetLedger() {\n    this.ledger.transport = null;\n    this.ledger.nano = null;\n  }\n\n  /**\n   * Prepare the main listener for events from the desktop client.\n   * Dispatches new messages via the main Observables\n   */\n  configureDesktop() {\n    this.desktop.connect();\n    this.desktop.on('ledger', (event, message) => {\n      if (!message || !message.event) return;\n      switch (message.event) {\n        case 'ledger-status':\n          this.ledger.status = message.data.status;\n          this.ledgerStatus$.next({ status: message.data.status, statusText: message.data.statusText });\n          break;\n\n        case 'account-details':\n        case 'cache-block':\n        case 'sign-block':\n          this.desktopMessage$.next(message);\n          break;\n      }\n    });\n    this.supportsUSB = true;\n  }\n\n  /**\n   * Check which transport protocols are supported by the browser\n   */\n  async checkBrowserSupport() {\n    await Promise.all([\n      TransportU2F.isSupported().then(supported => this.supportsU2F = supported),\n      TransportHID.isSupported().then(supported => this.supportsWebHID = supported),\n      TransportUSB.isSupported().then(supported => this.supportsWebUSB = supported),\n      TransportBLE.isSupported().then(supported => this.supportsBluetooth = supported),\n    ]);\n    this.supportsUSB = this.supportsU2F || this.supportsWebHID || this.supportsWebUSB;\n  }\n\n  /**\n   * Detect the optimal USB transport protocol for the current browser and OS\n   */\n  detectUsbTransport() {\n    const isWindows = window.navigator.platform.includes('Win');\n\n    if (isWindows && this.supportsWebHID) {\n      // Prefer WebHID on Windows due to stability issues with WebUSB\n      this.transportMode = 'HID';\n      this.DynamicTransport = TransportHID;\n    } else if (this.supportsWebUSB) {\n      // Else prefer WebUSB\n      this.transportMode = 'USB';\n      this.DynamicTransport = TransportUSB;\n    } else if (this.supportsWebHID) {\n      // Fallback to WebHID\n      this.transportMode = 'HID';\n      this.DynamicTransport = TransportHID;\n    } else {\n      // Legacy browsers\n      this.transportMode = 'U2F';\n      this.DynamicTransport = TransportU2F;\n    }\n  }\n\n  /**\n   * Enable or disable bluetooth communication, if supported\n   * @param enabled   The bluetooth enabled state\n   */\n  enableBluetoothMode(enabled: boolean) {\n    if (this.supportsBluetooth && enabled) {\n      this.transportMode = 'Bluetooth';\n      this.DynamicTransport = TransportBLE;\n    } else {\n      this.detectUsbTransport();\n    }\n  }\n\n  /**\n   * Get the next response coming from the desktop client for a specific event/filter\n   * @param eventType\n   * @param {any} filterFn\n   * @returns {Promise<any>}\n   */\n  async getDesktopResponse(eventType, filterFn?) {\n    return new Promise((resolve, reject) => {\n      const sub = this.desktopMessage$\n        .subscribe((response: any) => {\n          // Listen to all desktop messages until one passes our filters\n          if (response.event !== eventType) {\n            return; // Not the event we want.\n          }\n\n          if (filterFn) {\n            const shouldSkip = filterFn(response.data); // This function should return boolean\n            if (!shouldSkip) return; // This is not the message the subscriber wants\n          }\n\n          sub.unsubscribe(); // This is a message we want, safe to unsubscribe to further messages now.\n\n          if (response.data && response.data.error === true) {\n            return reject(new Error(response.data.errorMessage)); // Request failed!\n          }\n\n          resolve(response.data);\n        }, err => {\n          console.log(`Desktop message got error!`, err);\n          reject(err);\n        });\n    });\n\n  }\n\n\n\n  async getLedgerAccountDesktop(accountIndex, showOnScreen) {\n    if (this.queryingDesktopLedger) {\n      throw new Error(`Already querying desktop device, please wait`);\n    }\n    this.queryingDesktopLedger = true;\n\n    this.desktop.send('ledger', { event: 'account-details', data: { accountIndex, showOnScreen } });\n\n    try {\n      const details = await this.getDesktopResponse('account-details', a => a.accountIndex === accountIndex);\n      this.queryingDesktopLedger = false;\n\n      return details;\n    } catch (err) {\n      this.queryingDesktopLedger = false;\n      throw err;\n    }\n  }\n\n  async updateCacheDesktop(accountIndex, cacheData, signature) {\n    if (this.queryingDesktopLedger) {\n      throw new Error(`Already querying desktop device, please wait`);\n    }\n    this.queryingDesktopLedger = true;\n\n    this.desktop.send('ledger', { event: 'cache-block', data: { accountIndex, cacheData, signature } });\n\n    try {\n      const details = await this.getDesktopResponse('cache-block', a => a.accountIndex === accountIndex);\n      this.queryingDesktopLedger = false;\n\n      return details;\n    } catch (err) {\n      this.queryingDesktopLedger = false;\n      throw new Error(`Error caching block: ${err.message}`);\n    }\n  }\n\n  async signBlockDesktop(accountIndex, blockData) {\n    if (this.queryingDesktopLedger) {\n      throw new Error(`Already querying desktop device, please wait`);\n    }\n    this.queryingDesktopLedger = true;\n\n    this.desktop.send('ledger', { event: 'sign-block', data: { accountIndex, blockData } });\n\n    try {\n      const details = await this.getDesktopResponse('sign-block', a => a.accountIndex === accountIndex);\n      this.queryingDesktopLedger = false;\n\n      return details;\n    } catch (err) {\n      this.queryingDesktopLedger = false;\n      throw new Error(`Error signing block: ${err.message}`);\n    }\n  }\n\n  async loadTransport() {\n    return new Promise((resolve, reject) => {\n      this.DynamicTransport.create().then(trans => {\n\n        // LedgerLogs.listen((log: LedgerLog) => console.log(`Ledger: ${log.type}: ${log.message}`));\n        this.ledger.transport = trans;\n        this.ledger.transport.setExchangeTimeout(this.waitTimeout); // 5 minutes\n        this.ledger.nano = new Nano(this.ledger.transport);\n\n        resolve(this.ledger.transport);\n      }).catch(reject);\n    });\n  }\n\n\n  /**\n   * Main ledger loading function.  Can be called multiple times to attempt a reconnect.\n   * @param {boolean} hideNotifications\n   * @returns {Promise<any>}\n   */\n  async loadLedger(hideNotifications = false) {\n    return new Promise(async (resolve, reject) => {\n\n      // Desktop is handled completely differently.  Send a message for status instead of setting anything up\n      if (this.isDesktop) {\n        if (!this.desktop.send('ledger', { event: 'get-ledger-status', data: { bluetooth: this.transportMode === 'Bluetooth' } })) {\n          reject(new Error(`Electron\\'s IPC was not loaded`));\n        }\n\n        // Any response will be handled by the configureDesktop() function, which pipes responses into this observable\n        const sub = this.ledgerStatus$.subscribe(newStatus => {\n          if (newStatus.status === LedgerStatus.READY) {\n            resolve(true);\n          } else {\n            reject(new Error(newStatus.statusText || `Unable to load desktop Ledger device`));\n          }\n          sub.unsubscribe();\n        }, reject);\n        return;\n      }\n\n      if (!this.ledger.transport) {\n\n        // If in USB mode, detect best transport option\n        if (this.transportMode !== 'Bluetooth') {\n          this.detectUsbTransport();\n          this.appSettings.setAppSetting('ledgerReconnect', 'usb');\n        } else {\n          this.appSettings.setAppSetting('ledgerReconnect', 'bluetooth');\n        }\n\n        try {\n          await this.loadTransport();\n        } catch (err) {\n          if (err.name !== 'TransportOpenUserCancelled') {\n            console.log(`Error loading ${this.transportMode} transport `, err);\n            this.ledger.status = LedgerStatus.NOT_CONNECTED;\n            this.ledgerStatus$.next({ status: this.ledger.status, statusText: `Unable to load Ledger transport: ${err.message || err}` });\n          }\n          this.resetLedger();\n          resolve(false);\n        }\n      }\n\n      if (!this.ledger.transport || !this.ledger.nano) {\n        return resolve(false);\n      }\n\n      if (this.ledger.status === LedgerStatus.READY) {\n        return resolve(true); // Already ready?\n      }\n      let resolved = false;\n\n      // Set up a timeout when things are not ready\n      setTimeout(() => {\n        if (resolved) return;\n        console.log(`Timeout expired, sending not connected`);\n        this.ledger.status = LedgerStatus.NOT_CONNECTED;\n        this.ledgerStatus$.next({ status: this.ledger.status, statusText: `Unable to detect Nano Ledger application (Timeout)` });\n        if (!hideNotifications) {\n          this.notifications.sendWarning(`Unable to connect to the Ledger device.  Make sure it is unlocked and the nano application is open`);\n        }\n        resolved = true;\n        return resolve(false);\n      }, 10000);\n\n      // Try to load the app config\n      try {\n        const ledgerConfig = await this.ledger.nano.getAppConfiguration();\n        resolved = true;\n\n        if (!ledgerConfig) return resolve(false);\n        if (ledgerConfig && ledgerConfig.version) {\n          this.ledger.status = LedgerStatus.LOCKED;\n          this.ledgerStatus$.next({ status: this.ledger.status, statusText: `Nano app detected, but ledger is locked` });\n        }\n      } catch (err) {\n        console.log(`App config error: `, err);\n        if (err.statusText === 'HALTED') {\n          this.resetLedger();\n        }\n        if (!hideNotifications && !resolved) {\n          this.notifications.sendWarning(`Unable to connect to the Ledger device.  Make sure your Ledger is unlocked.  Restart the nano app on your Ledger if the error persists`);\n        }\n        resolved = true;\n        return resolve(false);\n      }\n\n      // Attempt to load account 0 - which confirms the app is unlocked and ready\n      try {\n        const accountDetails = await this.getLedgerAccount(0);\n        this.ledger.status = LedgerStatus.READY;\n        this.ledgerStatus$.next({ status: this.ledger.status, statusText: `Nano Ledger application connected` });\n\n        if (!this.pollingLedger) {\n          this.pollingLedger = true;\n          this.pollLedgerStatus();\n        }\n      } catch (err) {\n        console.log(`Error on account details: `, err);\n        if (err.statusCode === STATUS_CODES.SECURITY_STATUS_NOT_SATISFIED) {\n          this.ledger.status = LedgerStatus.LOCKED;\n          if (!hideNotifications) {\n            this.notifications.sendWarning(`Ledger device locked.  Unlock and open the nano application`);\n          }\n        }\n      }\n\n      resolve(true);\n    }).catch(err => {\n      console.log(`error when loading ledger `, err);\n      if (!hideNotifications) {\n        this.notifications.sendWarning(`Error loading Ledger device: ${typeof err === 'string' ? err : err.message}`, { length: 6000 });\n      }\n\n      return null;\n    });\n\n  }\n\n  async updateCache(accountIndex, blockHash) {\n    if (this.ledger.status !== LedgerStatus.READY) {\n      await this.loadLedger(); // Make sure ledger is ready\n    }\n    const blockResponse = await this.api.blocksInfo([blockHash]);\n    const blockData = blockResponse.blocks[blockHash];\n    if (!blockData) throw new Error(`Unable to load block data`);\n    blockData.contents = JSON.parse(blockData.contents);\n\n    const cacheData = {\n      representative: blockData.contents.representative,\n      balance: blockData.contents.balance,\n      previousBlock: blockData.contents.previous === zeroBlock ? null : blockData.contents.previous,\n      sourceBlock: blockData.contents.link,\n    };\n\n    if (this.isDesktop) {\n      return await this.updateCacheDesktop(accountIndex, cacheData, blockData.contents.signature);\n    } else {\n      return await this.ledger.nano.cacheBlock(this.ledgerPath(accountIndex), cacheData, blockData.contents.signature);\n    }\n  }\n\n  async updateCacheOffline(accountIndex, blockData) {\n    if (this.ledger.status !== LedgerStatus.READY) {\n      await this.loadLedger(); // Make sure ledger is ready\n    }\n\n    const cacheData = {\n      representative: blockData.representative,\n      balance: blockData.balance,\n      previousBlock: blockData.previous === zeroBlock ? null : blockData.previous,\n      sourceBlock: blockData.link,\n    };\n\n    if (this.isDesktop) {\n      return await this.updateCacheDesktop(accountIndex, cacheData, blockData.signature);\n    } else {\n      return await this.ledger.nano.cacheBlock(this.ledgerPath(accountIndex), cacheData, blockData.signature);\n    }\n  }\n\n  async signBlock(accountIndex: number, blockData: any) {\n    if (this.ledger.status !== LedgerStatus.READY) {\n      await this.loadLedger(); // Make sure ledger is ready\n    }\n    if (this.isDesktop) {\n      return this.signBlockDesktop(accountIndex, blockData);\n    } else {\n      this.ledger.transport.setExchangeTimeout(this.waitTimeout);\n      return await this.ledger.nano.signBlock(this.ledgerPath(accountIndex), blockData);\n    }\n  }\n\n  ledgerPath(accountIndex: number) {\n    return `${this.walletPrefix}${accountIndex}'`;\n  }\n\n  async getLedgerAccountWeb(accountIndex: number, showOnScreen = false) {\n    this.ledger.transport.setExchangeTimeout(showOnScreen ? this.waitTimeout : this.normalTimeout);\n    try {\n      return await this.ledger.nano.getAddress(this.ledgerPath(accountIndex), showOnScreen);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getLedgerAccount(accountIndex: number, showOnScreen = false) {\n    if (this.isDesktop) {\n      return await this.getLedgerAccountDesktop(accountIndex, showOnScreen);\n    } else {\n      return await this.getLedgerAccountWeb(accountIndex, showOnScreen);\n    }\n  }\n\n  pollLedgerStatus() {\n    if (!this.pollingLedger) return;\n    setTimeout(async () => {\n      await this.checkLedgerStatus();\n      this.pollLedgerStatus();\n    }, this.pollInterval);\n  }\n\n  async checkLedgerStatus() {\n    if (this.ledger.status !== LedgerStatus.READY) {\n      return;\n    }\n\n    try {\n      const accountDetails = await this.getLedgerAccount(0);\n      this.ledger.status = LedgerStatus.READY;\n    } catch (err) {\n      // Ignore race condition error, which means an action is pending on the ledger (such as block confirmation)\n      if (err.name !== 'TransportRaceCondition') {\n        console.log('Check ledger status failed ', err);\n        this.ledger.status = LedgerStatus.NOT_CONNECTED;\n        this.pollingLedger = false;\n        this.resetLedger();\n      }\n    }\n\n    this.ledgerStatus$.next({ status: this.ledger.status, statusText: `` });\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable()\nexport class ModalService {\n\n  showAccount$ = new BehaviorSubject(null);\n  constructor() { }\n\n  showAccount(account) {\n    this.showAccount$.next(account);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {UtilService} from './util.service';\nimport { NotificationService } from './notification.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as nanocurrency from 'nanocurrency';\nimport { environment } from 'environments/environment';\nconst base32 = require('nano-base32');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusigService {\n  // The multisig wasm library can be validated by running build-or-validate_musig_wasm.sh\n  private wasmURL = environment.desktop ?\n    '../../../resources/app.asar/dist/assets/lib/musig-nano/musig_nano.wasm.b64' : '../../../assets/lib/musig-nano/musig_nano.wasm.b64';\n\n  wasm = null;\n  wasmErrors = ['No error', 'Internal error', 'Invalid parameter(s)', 'Invalid Participant Input'];\n  musigStagePtr: number = null;\n  musigStageNum: number = null;\n  savedPublicKeys = [];\n\n  constructor(\n    private util: UtilService,\n    private notificationService: NotificationService,\n    private http: HttpClient,\n  ) {\n    // Read the wasm file for multisig\n    this.getWASM().subscribe(data => {\n      const wasmString = atob(data);\n      const wasmBytes = new Uint8Array(wasmString.length);\n      for (let i = 0; i < wasmString.length; i++) {\n        wasmBytes[i] = wasmString.charCodeAt(i);\n      }\n\n      const imports = {\n        wasi_snapshot_preview1: {\n          fd_write: (fd, iovs, errno, nwritten) => {\n            console.error('fd_write called: unimplemented');\n            return 0;\n          },\n          proc_exit: () => {\n            console.error('proc_exit called: unimplemented');\n            return 0;\n          },\n          environ_sizes_get: () => {\n            console.error('environ_sizes_get called: unimplemented');\n            return 0;\n          },\n          environ_get: () => {\n            console.error('environ_get called: unimplemented');\n            return 0;\n          },\n          random_get: (ptr, len) => {\n            crypto.getRandomValues(new Uint8Array(this.wasm.memory.buffer, ptr, len));\n            return 0;\n          }\n        },\n        wasi_unstable: {\n          random_get: (ptr, len) => {\n            crypto.getRandomValues(new Uint8Array(this.wasm.memory.buffer, ptr, len));\n            return 0;\n          }\n        },\n      };\n      WebAssembly.instantiate(wasmBytes, imports).then(w => {\n        this.wasm = w.instance.exports;\n      }).catch(console.error);\n    });\n  }\n\n  // Load multisig rust library from local file via http\n  getWASM(): Observable<any> {\n    return this.http.get(this.wasmURL, {headers: new HttpHeaders({\n      'Accept': 'text/html, application/xhtml+xml, */*',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }),\n    responseType: 'text'});\n  }\n\n  resetMusig() {\n    this.musigStagePtr = null;\n    this.musigStageNum = null;\n    this.savedPublicKeys = [];\n  }\n\n  copyToWasm(bytes, ptr = null) {\n    if (!ptr) {\n      ptr = this.wasm.musig_malloc(bytes.length);\n    }\n    const buf = new Uint8Array(this.wasm.memory.buffer, ptr, bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n      buf[i] = bytes[i];\n    }\n    return ptr;\n  }\n  copyFromWasm(ptr, length) {\n    const out = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n      out[i] = this.wasm.memory.buffer[ptr + i];\n    }\n    return out;\n  }\n\n  wasmError(errCode) {\n    throw new Error('Multisig error ' + errCode + ': ' + this.wasmErrors[errCode]);\n  }\n\n  runAggregate(storedAccounts, runWithPubkeys = null) {\n    try {\n      return this.aggregate(storedAccounts, runWithPubkeys);\n    } catch (err) {\n      this.notificationService.sendError(err.toString(), {length: 0});\n      return null;\n    }\n  }\n\n  runMultiSign(privateKey, blockHash, inputMultisigData) {\n    try {\n      return this.multiSign(privateKey, blockHash, inputMultisigData);\n    } catch (err) {\n      this.notificationService.sendError(err.toString(), {length: 0});\n      return null;\n    }\n  }\n\n  aggregate(storedAccounts, runWithPubkeys = null) {\n    let addresses = [];\n    if (runWithPubkeys && this.savedPublicKeys?.length > 1) {\n      for (const pubKey of this.savedPublicKeys) {\n        addresses.push(nanocurrency.deriveAddress(pubKey, {useNanoPrefix: true}));\n      }\n    } else {\n      addresses = storedAccounts;\n      if (addresses.length < 2) {\n          throw new Error('Must have at least 2 participating addresses!');\n      }\n    }\n    const pubkeys = [];\n    for (let address of addresses) {\n      address = address.trim();\n      if (!address.startsWith('xrb_') && !address.startsWith('nano_')) {\n        throw new Error('Nano addresses must start with xrb_ or nano_');\n      }\n      address = address.split('_', 2)[1];\n      try {\n        const bytes = base32.decode(address);\n        if (bytes.length !== 37) {\n          throw new Error('Wrong nano address length');\n        }\n        const pubkey = bytes.subarray(0, 32);\n        const checksum_ = this.util.account.getAccountChecksum(pubkey);\n        if (!this.util.array.equalArrays(bytes.subarray(32), checksum_)) {\n          throw new Error('Invalid nano address checksum');\n        }\n        pubkeys.push(pubkey);\n      } catch (err_) {\n          console.error(err_.toString());\n          throw new Error('Invalid nano address (bad character?)');\n      }\n    }\n    const pubkeyPtrs = this.wasm.musig_malloc(pubkeys.length * 4);\n    const pubkeyPtrsBuf = new Uint32Array(this.wasm.memory.buffer, pubkeyPtrs, pubkeys.length);\n    for (let i = 0; i < pubkeys.length; i++) {\n      pubkeyPtrsBuf[i] = this.copyToWasm(pubkeys[i]);\n    }\n    const outPtr = this.wasm.musig_malloc(33);\n    const outBuf = new Uint8Array(this.wasm.memory.buffer, outPtr, 33);\n    outBuf[0] = 0;\n    this.wasm.musig_aggregate_public_keys(pubkeyPtrs, pubkeys.length, outPtr, outPtr + 1);\n    if (runWithPubkeys) runWithPubkeys(pubkeyPtrs, pubkeys.length);\n    for (let i = 0; i < pubkeyPtrsBuf.length; i++) {\n      this.wasm.musig_free(pubkeyPtrsBuf[i]);\n    }\n    this.wasm.musig_free(pubkeyPtrs);\n    const err = outBuf[0];\n    if (err !== 0) {\n      this.wasm.musig_free(outPtr);\n        throw this.wasmError(err);\n    }\n    const aggPubkey = outBuf.subarray(1).slice();\n    const checksum = this.util.account.getAccountChecksum(aggPubkey);\n    const fullAddress = new Uint8Array(37);\n    for (let i = 0; i < 32; i++) {\n      fullAddress[i] = aggPubkey[i];\n    }\n    for (let i = 0; i < 5; i++) {\n      fullAddress[32 + i] = checksum[i];\n    }\n    const fullAddressFinal = 'nano_' + base32.encode(fullAddress);\n    console.log('Multisig Account: ' + fullAddressFinal);\n    this.wasm.musig_free(outPtr);\n    return {'multisig': fullAddressFinal, 'pubkey': aggPubkey};\n  }\n\n  multiSign(privateKey, blockHash, inputMultisigData) {\n    let multisigAccount = '';\n    // Stage 0 (init)\n    if (!this.musigStagePtr) {\n      if (!this.util.nano.isValidHash(privateKey)) {\n        throw new Error('Invalid private key');\n      }\n      if (!this.util.nano.isValidHash(blockHash)) {\n        throw new Error('Invalid block hash');\n      }\n      const outPtr = this.wasm.musig_malloc(65);\n      const outBuf = new Uint8Array(this.wasm.memory.buffer, outPtr, 65);\n      outBuf[0] = 0;\n      try {\n        this.musigStagePtr = this.wasm.musig_stage0(outPtr, outPtr + 33);\n        this.musigStageNum = 0;\n      } catch (err_) {\n        if (this.musigStagePtr) {\n          this.wasm.musig_free_stage0(this.musigStagePtr);\n        }\n        this.musigStagePtr = undefined;\n        this.musigStageNum = undefined;\n        throw err_;\n      }\n      const err = outBuf[0];\n      if (err !== 0) {\n        this.musigStagePtr = undefined;\n        this.musigStageNum = undefined;\n        this.wasm.musig_free(outPtr);\n        throw this.wasmError(err);\n      }\n\n      const finalBuf = outBuf;\n      this.wasm.musig_free(outPtr);\n      return {'outbuf': finalBuf, 'stage': this.musigStageNum, 'multisig': multisigAccount};\n\n      // Further steps\n    } else {\n      const protocolInputs = [];\n      // only use the first part of the data\n      for (const input of inputMultisigData) {\n        protocolInputs.push(input.substring(2, 66).toLowerCase());\n      }\n      const protocolInputPtrs = this.wasm.musig_malloc(protocolInputs.length * 4);\n      const protocolInputPtrsBuf = new Uint32Array(this.wasm.memory.buffer, protocolInputPtrs, protocolInputs.length);\n      for (let i = 0; i < protocolInputs.length; i++) {\n          protocolInputPtrsBuf[i] = this.copyToWasm(this.util.hex.toUint8(protocolInputs[i]));\n      }\n\n      let privateKeyPtr;\n      if (this.musigStageNum === 0) {\n        privateKeyPtr = this.copyToWasm(this.util.hex.toUint8(privateKey));\n      }\n\n      const outLen = (this.musigStageNum === 2) ? 65 : 33;\n      const outPtr = this.wasm.musig_malloc(outLen);\n      const outBuf = new Uint8Array(this.wasm.memory.buffer, outPtr, outLen);\n      outBuf[0] = 0;\n      let newStagePtr;\n\n      if (this.musigStageNum === 0) {\n        // Extract public keys from the participants\n        this.savedPublicKeys = [];\n        // only use the second part of the data\n        for (const input of inputMultisigData) {\n          this.savedPublicKeys.push(input.substring(66, 130).toLowerCase());\n        }\n        // Add the public key from self\n        const pub = nanocurrency.derivePublicKey(privateKey);\n        if (this.savedPublicKeys.includes(pub.toLowerCase())) {\n          throw new Error('You must use different private keys for each participant!');\n        }\n        this.savedPublicKeys.push(pub);\n\n        const blockhash = this.util.hex.toUint8(blockHash);\n        const blockhashPtr = this.copyToWasm(blockhash);\n        const result = this.aggregate('', (pubkeys, pubkeysLen) => {\n          const flags = 0; // Set to 1 if private key is a raw/expanded scalar (unusual)\n          newStagePtr = this.wasm.musig_stage1(this.musigStagePtr, privateKeyPtr, pubkeys, pubkeysLen, flags,\n            blockhashPtr, blockhash.length, protocolInputPtrs, protocolInputs.length, outPtr, null, outPtr + 1);\n        });\n        multisigAccount = result?.multisig;\n        this.musigStageNum = 0;\n        this.wasm.musig_free(privateKeyPtr);\n        this.wasm.musig_free(blockhashPtr);\n\n      } else if (this.musigStageNum === 1) {\n          newStagePtr = this.wasm.musig_stage2(this.musigStagePtr, protocolInputPtrs, protocolInputs.length, outPtr, outPtr + 1);\n      } else if (this.musigStageNum === 2) {\n          newStagePtr = this.wasm.musig_stage3(this.musigStagePtr, protocolInputPtrs, protocolInputs.length, outPtr, outPtr + 1);\n      } else {\n        this.wasm.musig_free(outPtr);\n          throw new Error('Unexpected musigStageNum ' + this.musigStageNum);\n      }\n      const err = outBuf[0];\n      if (err !== 0) {\n        this.wasm.musig_free(outPtr);\n          throw this.wasmError(err);\n      }\n      this.musigStagePtr = newStagePtr;\n      this.musigStageNum++;\n\n      const finalBuf = new Uint8Array(outBuf); // make a copy to avoid pointer being reset by musig_free\n      this.wasm.musig_free(outPtr);\n      return {'outbuf': finalBuf, 'stage': this.musigStageNum, 'multisig': multisigAccount};\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ApiService} from './api.service';\nimport {UtilService, StateBlock, TxType} from './util.service';\nimport {WorkPoolService} from './work-pool.service';\nimport BigNumber from 'bignumber.js';\nimport {NotificationService} from './notification.service';\nimport {AppSettingsService} from './app-settings.service';\nimport {LedgerService} from './ledger.service';\nimport { WalletAccount } from './wallet.service';\nimport {BehaviorSubject} from 'rxjs';\nconst nacl = window['nacl'];\n\n@Injectable()\nexport class NanoBlockService {\n  representativeAccounts = [\n    'nano_1x7biz69cem95oo7gxkrw6kzhfywq4x5dupw4z1bdzkb74dk9kpxwzjbdhhs', // NanoCrawler\n    'nano_1zuksmn4e8tjw1ch8m8fbrwy5459bx8645o9euj699rs13qy6ysjhrewioey', // Nanowallets.guide\n    'nano_3chartsi6ja8ay1qq9xg3xegqnbg1qx76nouw6jedyb8wx3r4wu94rxap7hg', // Nano Charts\n    'nano_1ninja7rh37ehfp9utkor5ixmxyg8kme8fnzc4zty145ibch8kf5jwpnzr3r', // My Nano Ninja\n    'nano_1iuz18n4g4wfp9gf7p1s8qkygxw7wx9qfjq6a9aq68uyrdnningdcjontgar', // NanoTicker / Json\n    'nano_3power3gwb43rs7u9ky3rsjp6fojftejceexfkf845sfczyue4q3r1hfpr3o', // PowerNode\n    'nano_1ookerz3adg5rxc4zwwoshim5yyyihf6dpogjihwwq6ksjpq7ea4fuam5mmc', // Nanolooker.com\n  ];\n\n  zeroHash = '0000000000000000000000000000000000000000000000000000000000000000';\n\n  newOpenBlock$: BehaviorSubject<boolean|false> = new BehaviorSubject(false);\n\n  constructor(\n    private api: ApiService,\n    private util: UtilService,\n    private workPool: WorkPoolService,\n    private notifications: NotificationService,\n    private ledgerService: LedgerService,\n    public settings: AppSettingsService) { }\n\n  async generateChange(walletAccount, representativeAccount, ledger = false) {\n    const toAcct = await this.api.accountInfo(walletAccount.id);\n    if (!toAcct) throw new Error(`Account must have an open block first`);\n\n    const balance = new BigNumber(toAcct.balance);\n    const balanceDecimal = balance.toString(10);\n    const link = this.zeroHash;\n    const blockData = {\n      type: 'state',\n      account: walletAccount.id,\n      previous: toAcct.frontier,\n      representative: representativeAccount,\n      balance: balanceDecimal,\n      link: link,\n      signature: null,\n      work: null,\n    };\n\n    if (ledger) {\n      const ledgerBlock = {\n        previousBlock: toAcct.frontier,\n        representative: representativeAccount,\n        balance: balanceDecimal,\n      };\n      try {\n        this.sendLedgerNotification();\n        await this.ledgerService.updateCache(walletAccount.index, toAcct.frontier);\n        const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n        this.clearLedgerNotification();\n        blockData.signature = sig.signature;\n      } catch (err) {\n        this.clearLedgerNotification();\n        this.sendLedgerDeniedNotification();\n        return;\n      }\n    } else {\n      this.validateAccount(toAcct);\n      this.signStateBlock(walletAccount, blockData);\n    }\n\n    if (!this.workPool.workExists(toAcct.frontier)) {\n      this.notifications.sendInfo(`Generating Proof of Work...`, { identifier: 'pow', length: 0 });\n    }\n\n    blockData.work = await this.workPool.getWork(toAcct.frontier, 1);\n    this.notifications.removeNotification('pow');\n\n    const processResponse = await this.api.process(blockData, TxType.change);\n    if (processResponse && processResponse.hash) {\n      walletAccount.frontier = processResponse.hash;\n      this.workPool.addWorkToCache(processResponse.hash, 1); // Add new hash into the work pool, high PoW threshold for change block\n      this.workPool.removeFromCache(toAcct.frontier);\n      return processResponse.hash;\n    } else {\n      return null;\n    }\n  }\n\n  // This might be used in the future to send state changes on the blocks instead of normal true/false\n  // subscribeSend(walletAccount, toAccountID, rawAmount, ledger = false): Observable {\n  //   const doSend = async (observable) => {\n  //     console.log(`OBS: Promise resolve, running main send logic.`);\n  //     const startTime = Date.now();\n  //\n  //     console.log(`Observable: Creation event run`);\n  //     observable.next({ step: 0, startTime: startTime });\n  //\n  //\n  //     const fromAccount = await this.api.accountInfo(walletAccount.id);\n  //     if (!fromAccount) throw new Error(`Unable to get account information for ${walletAccount.id}`);\n  //\n  //     const remaining = new BigNumber(fromAccount.balance).minus(rawAmount);\n  //     const remainingDecimal = remaining.toString(10);\n  //     let remainingPadded = remaining.toString(16);\n  //     while (remainingPadded.length < 32) remainingPadded = '0' + remainingPadded; // Left pad with 0's\n  //\n  //     let blockData;\n  //     const representative = fromAccount.representative || (this.settings.settings.defaultRepresentative || this.representativeAccount);\n  //\n  //     observable.next({ step: 1, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //\n  //     let signature = null;\n  //     if (ledger) {\n  //       const ledgerBlock = {\n  //         previousBlock: fromAccount.frontier,\n  //         representative: representative,\n  //         balance: remainingDecimal,\n  //         recipient: toAccountID,\n  //       };\n  //       try {\n  //         this.sendLedgerNotification();\n  //         await this.ledgerService.updateCache(walletAccount.index, fromAccount.frontier);\n  //         const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n  //         this.clearLedgerNotification();\n  //         signature = sig.signature;\n  //\n  //         observable.next({ step: 2, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //       } catch (err) {\n  //         this.clearLedgerNotification();\n  //         this.sendLedgerDeniedNotification(err);\n  //         return;\n  //       }\n  //     } else {\n  //       signature = this.signSendBlock(walletAccount, fromAccount, representative, remainingPadded, toAccountID);\n  //       observable.next({ step: 2, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //     }\n  //\n  //     if (!this.workPool.workExists(fromAccount.frontier)) {\n  //       this.notifications.sendInfo(`Generating Proof of Work...`);\n  //     }\n  //\n  //     blockData = {\n  //       type: 'state',\n  //       account: walletAccount.id,\n  //       previous: fromAccount.frontier,\n  //       representative: representative,\n  //       balance: remainingDecimal,\n  //       link: this.util.account.getAccountPublicKey(toAccountID),\n  //       work: await this.workPool.getWork(fromAccount.frontier),\n  //       signature: signature,\n  //     };\n  //\n  //     observable.next({ step: 3, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //\n  //     const processResponse = await this.api.process(blockData);\n  //     if (!processResponse || !processResponse.hash) throw new Error(processResponse.error || `Node returned an error`);\n  //\n  //     observable.next({ step: 4, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //\n  //     walletAccount.frontier = processResponse.hash;\n  //     this.workPool.addWorkToCache(processResponse.hash); // Add new hash into the work pool\n  //     this.workPool.removeFromCache(fromAccount.frontier);\n  //\n  //     observable.complete();\n  //   };\n  //\n  //\n  //   console.log(`Creating observable... on send...`);\n  //   // Create an observable that can be returned instantly.\n  //   return new Observable(observable => {\n  //\n  //     doSend(observable).then(val => console.log(val));\n  //   });\n  //\n  // }\n\n  async generateSend(walletAccount, toAccountID, rawAmount, ledger = false) {\n    const fromAccount = await this.api.accountInfo(walletAccount.id);\n    if (!fromAccount) throw new Error(`Unable to get account information for ${walletAccount.id}`);\n\n    const remaining = new BigNumber(fromAccount.balance).minus(rawAmount);\n    const remainingDecimal = remaining.toString(10);\n\n    const representative = fromAccount.representative || (this.settings.settings.defaultRepresentative || this.getRandomRepresentative());\n    const blockData = {\n      type: 'state',\n      account: walletAccount.id,\n      previous: fromAccount.frontier,\n      representative: representative,\n      balance: remainingDecimal,\n      link: this.util.account.getAccountPublicKey(toAccountID),\n      work: null,\n      signature: null,\n    };\n\n    if (ledger) {\n      const ledgerBlock = {\n        previousBlock: fromAccount.frontier,\n        representative: representative,\n        balance: remainingDecimal,\n        recipient: toAccountID,\n      };\n      try {\n        this.sendLedgerNotification();\n        await this.ledgerService.updateCache(walletAccount.index, fromAccount.frontier);\n        const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n        this.clearLedgerNotification();\n        blockData.signature = sig.signature;\n      } catch (err) {\n        this.clearLedgerNotification();\n        this.sendLedgerDeniedNotification(err);\n        return;\n      }\n    } else {\n      this.validateAccount(fromAccount);\n      this.signStateBlock(walletAccount, blockData);\n    }\n\n    if (!this.workPool.workExists(fromAccount.frontier)) {\n      this.notifications.sendInfo(`Generating Proof of Work...`, { identifier: 'pow', length: 0 });\n    }\n\n    blockData.work = await this.workPool.getWork(fromAccount.frontier, 1);\n    this.notifications.removeNotification('pow');\n\n    const processResponse = await this.api.process(blockData, TxType.send);\n    if (!processResponse || !processResponse.hash) throw new Error(processResponse.error || `Node returned an error`);\n\n    walletAccount.frontier = processResponse.hash;\n    this.workPool.addWorkToCache(processResponse.hash, 1); // Add new hash into the work pool, high PoW threshold for send block\n    this.workPool.removeFromCache(fromAccount.frontier);\n\n    return processResponse.hash;\n  }\n\n  async generateReceive(walletAccount, sourceBlock, ledger = false) {\n    const toAcct = await this.api.accountInfo(walletAccount.id);\n    let workBlock = null;\n\n    const openEquiv = !toAcct || !toAcct.frontier;\n\n    const previousBlock = toAcct.frontier || this.zeroHash;\n    const representative = toAcct.representative || (this.settings.settings.defaultRepresentative || this.getRandomRepresentative());\n\n    const srcBlockInfo = await this.api.blocksInfo([sourceBlock]);\n    const srcAmount = new BigNumber(srcBlockInfo.blocks[sourceBlock].amount);\n    const newBalance = openEquiv ? srcAmount : new BigNumber(toAcct.balance).plus(srcAmount);\n    const newBalanceDecimal = newBalance.toString(10);\n    let newBalancePadded = newBalance.toString(16);\n    while (newBalancePadded.length < 32) newBalancePadded = '0' + newBalancePadded; // Left pad with 0's\n    const blockData = {\n      type: 'state',\n      account: walletAccount.id,\n      previous: previousBlock,\n      representative: representative,\n      balance: newBalanceDecimal,\n      link: sourceBlock,\n      signature: null,\n      work: null\n    };\n\n    // We have everything we need, we need to obtain a signature\n    if (ledger) {\n      const ledgerBlock: any = {\n        representative: representative,\n        balance: newBalanceDecimal,\n        sourceBlock: sourceBlock,\n      };\n      if (!openEquiv) {\n        ledgerBlock.previousBlock = toAcct.frontier;\n      }\n      try {\n        this.sendLedgerNotification();\n        // On new accounts, we do not need to cache anything\n        if (!openEquiv) {\n          await this.ledgerService.updateCache(walletAccount.index, toAcct.frontier);\n        }\n        const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n        this.notifications.removeNotification('ledger-sign');\n        blockData.signature = sig.signature.toUpperCase();\n      } catch (err) {\n        this.notifications.removeNotification('ledger-sign');\n        this.notifications.sendWarning(err.message || `Transaction denied on Ledger device`);\n        return;\n      }\n    } else {\n      this.validateAccount(toAcct);\n      this.signStateBlock(walletAccount, blockData);\n    }\n\n    workBlock = openEquiv ? this.util.account.getAccountPublicKey(walletAccount.id) : previousBlock;\n    if (!this.workPool.workExists(workBlock)) {\n      this.notifications.sendInfo(`Generating Proof of Work...`, { identifier: 'pow', length: 0 });\n    }\n\n    console.log('Get work for receive block');\n    blockData.work = await this.workPool.getWork(workBlock, 1 / 64); // low PoW threshold since receive block\n    this.notifications.removeNotification('pow');\n    const processResponse = await this.api.process(blockData, openEquiv ? TxType.open : TxType.receive);\n    if (processResponse && processResponse.hash) {\n      walletAccount.frontier = processResponse.hash;\n      // Add new hash into the work pool, high PoW threshold since we don't know what the next one will be\n      // Skip adding new work cache directly, let reloadBalances() check for pending and decide instead\n      // this.workPool.addWorkToCache(processResponse.hash, 1);\n      this.workPool.removeFromCache(workBlock);\n\n      // update the rep view via subscription\n      if (openEquiv) {\n        this.informNewRep();\n      }\n      return processResponse.hash;\n    } else {\n      return null;\n    }\n  }\n\n  // for signing block when offline\n  async signOfflineBlock(walletAccount: WalletAccount, block: StateBlock, prevBlock: StateBlock,\n    type: TxType, genWork: boolean, multiplier: number, ledger = false) {\n    // special treatment if open block\n    const openEquiv = type === TxType.open;\n    console.log('Signing block of subtype: ' + TxType[type]);\n\n    if (ledger) {\n      let ledgerBlock = null;\n      if (type === TxType.send) {\n        ledgerBlock = {\n          previousBlock: block.previous,\n          representative: block.representative,\n          balance: block.balance,\n          recipient: this.util.account.getPublicAccountID(this.util.hex.toUint8(block.link)),\n        };\n      } else if (type === TxType.receive || type === TxType.open) {\n        ledgerBlock = {\n          representative: block.representative,\n          balance: block.balance,\n          sourceBlock: block.link,\n        };\n        if (!openEquiv) {\n          ledgerBlock.previousBlock = block.previous;\n        }\n      } else if (type === TxType.change) {\n        ledgerBlock = {\n          previousBlock: block.previous,\n          representative: block.representative,\n          balance: block.balance,\n        };\n      }\n      try {\n        this.sendLedgerNotification();\n        // On new accounts, we do not need to cache anything\n        if (!openEquiv) {\n          try {\n            // await this.ledgerService.updateCache(walletAccount.index, block.previous);\n            await this.ledgerService.updateCacheOffline(walletAccount.index, prevBlock);\n          } catch (err) {console.log(err); }\n        }\n        const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n        this.clearLedgerNotification();\n        block.signature = sig.signature;\n      } catch (err) {\n        this.clearLedgerNotification();\n        this.sendLedgerDeniedNotification(err);\n        return null;\n      }\n    } else {\n      this.signStateBlock(walletAccount, block);\n    }\n\n    if (genWork) {\n      // For open blocks which don't have a frontier, use the public key of the account\n      const workBlock = openEquiv ? this.util.account.getAccountPublicKey(walletAccount.id) : block.previous;\n      if (!this.workPool.workExists(workBlock)) {\n        this.notifications.sendInfo(`Generating Proof of Work...`, { identifier: 'pow', length: 0 });\n      }\n\n      block.work = await this.workPool.getWork(workBlock, multiplier);\n      this.notifications.removeNotification('pow');\n      this.workPool.removeFromCache(workBlock);\n    }\n    return block; // return signed block (with or without work)\n  }\n\n  async validateAccount(accountInfo) {\n    if (!accountInfo) return;\n    if (!accountInfo.frontier || accountInfo.frontier === this.zeroHash) {\n      if (accountInfo.balance && accountInfo.balance !== '0') {\n        throw new Error(`Frontier not set, but existing account balance is nonzero`);\n      }\n      if (accountInfo.representative) {\n        throw new Error(`Frontier not set, but existing account representative is set`);\n      }\n      return;\n    }\n    const blockResponse = await this.api.blocksInfo([accountInfo.frontier]);\n    const blockData = blockResponse.blocks[accountInfo.frontier];\n    if (!blockData) throw new Error(`Unable to load block data`);\n    blockData.contents = JSON.parse(blockData.contents);\n    if (accountInfo.balance !== blockData.contents.balance || accountInfo.representative !== blockData.contents.representative) {\n      throw new Error(`Frontier block data doesn't match account info`);\n    }\n    if (blockData.contents.type !== 'state') {\n      throw new Error(`Frontier block wasn't a state block, which shouldn't be possible`);\n    }\n    if (this.util.hex.fromUint8(this.util.nano.hashStateBlock(blockData.contents)) !== accountInfo.frontier) {\n      throw new Error(`Frontier hash didn't match block data`);\n    }\n  }\n\n  // Sign a state block, and insert the signature into the block.\n  signStateBlock(walletAccount, blockData) {\n    const hashBytes = this.util.nano.hashStateBlock(blockData);\n    const privKey = walletAccount.keyPair.secretKey;\n    const signed = nacl.sign.detached(hashBytes, privKey, walletAccount.keyPair.expanded);\n    blockData.signature = this.util.hex.fromUint8(signed);\n  }\n\n  sendLedgerDeniedNotification(err = null) {\n    this.notifications.sendWarning(err && err.message || `Transaction denied on Ledger device`);\n  }\n  sendLedgerNotification() {\n    this.notifications.sendInfo(`Waiting for confirmation on Ledger Device...`, { identifier: 'ledger-sign', length: 0 });\n  }\n  clearLedgerNotification() {\n    this.notifications.removeNotification('ledger-sign');\n  }\n\n  getRandomRepresentative() {\n    return this.representativeAccounts[Math.floor(Math.random() * this.representativeAccounts.length)];\n  }\n\n  // Subscribable event when a new open block and we should update the rep info\n  informNewRep() {\n    this.newOpenBlock$.next(true);\n    this.newOpenBlock$.next(false);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificationService } from './notification.service';\nimport { UtilService } from './util.service';\n\n@Injectable()\nexport class NinjaService {\n\n  // URL to Ninja API\n  ninjaUrl = 'https://mynano.ninja/api/';\n\n  // null - loading, false - offline, true - online\n  status = null;\n\n  constructor(private http: HttpClient, private notifications: NotificationService, private util: UtilService) { }\n\n  private async request(action): Promise<any> {\n    return await this.http.get(this.ninjaUrl + action).toPromise()\n      .then(res => {\n        return res;\n      })\n      .catch(err => {\n        return;\n      });\n  }\n\n  private randomizeByScore(replist: any) {\n\n    const scores = {};\n    const newlist = [];\n\n    for (const account of replist) {\n      scores[account.weight] = scores[account.weight] || [];\n      scores[account.weight].push(account);\n    }\n\n    for (const weight in scores) {\n      if (scores.hasOwnProperty(weight)) {\n        let accounts = scores[weight];\n        accounts = this.util.array.shuffle(accounts);\n\n        for (const account of accounts) {\n          newlist.unshift(account);\n        }\n      }\n    }\n\n    return newlist;\n  }\n\n  async recommended(): Promise<any> {\n    return await this.http.get('https://nano.to/reps.json').toPromise();\n  }\n\n  async recommendedRandomized(): Promise<any> {\n    const replist = await this.recommended();\n    return this.randomizeByScore(replist);\n  }\n\n  async getSuggestedRep(): Promise<any> {\n    const replist = await this.recommendedRandomized();\n    return replist[0];\n  }\n\n  // false - does not exist, null - any other error\n  async getAccount(account: string): Promise<any> {\n    const REQUEST_TIMEOUT_MS = 10000;\n\n    const successPromise =\n      this.http.post('https://rpc.nano.to', { action: \"ninja_info\", account }).toPromise()\n      // this.http.get(this.ninjaUrl + 'accounts/' + account).toPromise()\n        .then(res => {\n          return res;\n        })\n        .catch(err => {\n          if (err.status === 404) {\n            return false;\n          }\n\n          return null;\n        });\n\n    const timeoutPromise =\n      new Promise(resolve => {\n        setTimeout(\n          () => {\n            resolve(null);\n          },\n          REQUEST_TIMEOUT_MS\n        );\n      });\n\n    return await Promise.race([\n      successPromise,\n      timeoutPromise\n    ]);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {NotificationService} from './notification.service';\n\n@Injectable()\nexport class NodeService {\n\n  node = {\n    status: null, // null - loading, false - offline, true - online\n  };\n\n  constructor(private notifications: NotificationService) { }\n\n  setOffline(msg = `Unable to connect Node.`) {\n    if (this.node.status === false) return; // Already offline\n    this.node.status = false;\n\n    if (msg) this.notifications.sendError(msg, { identifier: 'node-offline', length: 0 });\n  }\n\n  setOnline() {\n    if (this.node.status) return; // Already online\n\n    this.node.status = true;\n    this.notifications.removeNotification('node-offline');\n  }\n\n  setLoading() {\n    this.node.status = null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as Rx from 'rxjs';\n\ntype NotificationType = 'info'|'success'|'warning'|'error';\n\n@Injectable()\nexport class NotificationService {\n\n  notifications$ = new Rx.BehaviorSubject(null);\n  removeNotification$ = new Rx.BehaviorSubject(null);\n\n  constructor() { }\n\n  // This provides an entry point for all components to send notifications.\n  // It exposes an observable that the actual component uses to grab new notifications\n\n  sendNotification(type: NotificationType, message: string, options = {}) {\n    this.notifications$.next({ type, message, options });\n  }\n\n  removeNotification(identifier: string) {\n    this.removeNotification$.next(identifier);\n  }\n\n  sendInfo(message: string, options = {}) {\n    this.sendNotification('info', message, options);\n  }\n  sendSuccess(message: string, options = {}) {\n    this.sendNotification('success', message, options);\n  }\n  sendWarning(message: string, options = {}) {\n    this.sendNotification('warning', message, options);\n  }\n  sendError(message: string, options = {}) {\n    this.sendNotification('error', message, options);\n  }\n\n  // Custom notification functions - these are re-used in multiple paces through the app\n  sendLedgerChromeWarning() {\n    this.sendWarning(\n      `<b>Notice:</b> You may experience issues using a Ledger device with Google Chrome. ` +\n      `If you do please use Brave/Opera browser or ` +\n      `<a href=\"https://github.com/Nault/Nault/releases\" target=\"_blank\" rel=\"noopener noreferrer\">Nault Desktop</a>.`,\n      { length: 0, identifier: 'chrome-ledger' }\n      );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {AppSettingsService} from './app-settings.service';\nimport {ApiService} from './api.service';\nimport {NotificationService} from './notification.service';\nimport { PoWSource } from './app-settings.service';\nimport Worker from 'worker-loader!./../../assets/lib/cpupow.js';\nimport {UtilService} from './util.service';\nimport {BehaviorSubject} from 'rxjs';\n\nconst mod = window['Module'];\nexport const baseThreshold = 'fffffff800000000'; // threshold since v21 epoch update\nconst hardwareConcurrency = window.navigator.hardwareConcurrency || 2;\nconst workerCount = Math.max(hardwareConcurrency - 1, 1);\nlet workerList = [];\nexport enum workState {'success', 'cancelled', 'error'}\n\n@Injectable()\nexport class PowService {\n\n  webGLAvailable = false;\n  webGLTested = false;\n\n  powAlertLimit = 60; // alert long pow after X sec\n  PoWPool = [];\n  parallelQueue = false;\n  processingQueueItem = false;\n  currentProcessTime = 0; // start timestamp for PoW\n  powAlert$: BehaviorSubject<boolean|false> = new BehaviorSubject(false);\n  public shouldContinueQueue = true; // set to false to disable further processing\n  cpuWorkerResolve = null; // global worker promise to allow termination\n  cpuWorkerReject = null; // global worker promise to allow termination\n  shouldAbortGpuPow = false; // set to true to abort GPU pow\n\n  constructor(\n    private appSettings: AppSettingsService,\n    private api: ApiService,\n    private notifications: NotificationService,\n    private util: UtilService\n  ) { }\n\n  /**\n   * Determine the best PoW Method available for this browser\n   */\n  determineBestPoWMethod(): PoWSource {\n    // if (this.hasWebGLSupport()) return 'clientWebGL';\n    // if (this.hasWorkerSupport()) return 'clientCPU'; // For now, server is better than a CPU default (For Mobile)\n    return 'server';\n  }\n\n  /**\n   * Get PoW for a hash.  If it's already being processed, return the promise.\n   * Otherwise, add it into the queue and return when it is ready\n   */\n  async getPow(hash, multiplier) {\n    const existingPoW = this.PoWPool.find(p => p.hash === hash);\n    if (existingPoW) {\n      return existingPoW.promise.promise; // Its okay if its resolved already\n    }\n\n    return this.addQueueItem(hash, multiplier);\n  }\n\n  /**\n   * Add a new hash into the queue to perform work on.\n   * Returns a promise that is resolved when work is completed\n   */\n  addQueueItem(hash, multiplier) {\n    const existingPoW = this.PoWPool.find(p => p.hash === hash);\n    if (existingPoW) {\n      return existingPoW.promise.promise;\n    }\n\n    const queueItem = {\n      hash,\n      work: null,\n      promise: this.getDeferredPromise(),\n      multiplier: multiplier,\n    };\n\n    this.PoWPool.push(queueItem);\n    this.processQueue();\n\n    return queueItem.promise.promise;\n  }\n\n  /**\n   * Determine if the browser has WebWorker support\n   * @returns {boolean}\n   */\n  public hasWorkerSupport() {\n    return !!window['Worker'];\n  }\n\n  /**\n   * Determine if the browser has WebGL support\n   * @returns {boolean}\n   */\n  public hasWebGLSupport() {\n    if (this.webGLTested) return this.webGLAvailable;\n\n    this.webGLTested = true;\n\n    try {\n      const canvas = document.createElement( 'canvas' );\n      const webGL = !! window['WebGLRenderingContext'] && (canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ));\n      this.webGLAvailable = !!webGL;\n      return this.webGLAvailable;\n    } catch (e) {\n      this.webGLAvailable = false;\n      return false;\n    }\n  }\n\n  /**\n   * Gets the next item in the queue and sends it to be processed\n   */\n  private processQueue() {\n    if (!this.PoWPool.length) return; // No items in the queue\n    if (this.parallelQueue) return; // Not yet implemented\n\n    if (this.processingQueueItem) return; // Already processing.\n\n    // Get the next item from the queue and process it\n    this.processNextQueueItem();\n  }\n\n  /**\n   * Process an individual hash from the queue\n   * Uses the latest app settings to determine which type of PoW to use\n   */\n  private async processNextQueueItem() {\n    if (!this.PoWPool.length) return; // Nothing in the queue?\n    this.processingQueueItem = true;\n    const queueItem = this.PoWPool[0];\n    this.powAlert$.next(false); // extra safety to ensure the alert is always reset\n\n    let powSource = this.appSettings.settings.powSource;\n    const multiplierSource: Number = this.appSettings.settings.multiplierSource;\n    let localMultiplier: Number = 1;\n\n    if (powSource === 'best') {\n      powSource = this.determineBestPoWMethod();\n    }\n\n    if (powSource === 'clientCPU' || powSource === 'clientWebGL' || powSource === 'custom' || powSource === 'nano.to') {\n      if (multiplierSource > 1) { // use manual difficulty\n        localMultiplier = multiplierSource;\n      } else { // use default requested difficulty\n        localMultiplier = queueItem.multiplier;\n      }\n    }\n\n    const work = {state: null, work: ''};\n    switch (powSource) {\n      default:\n      case 'server':\n        const serverWork = await this.getHashServer(queueItem.hash, queueItem.multiplier);\n        if (serverWork) {\n          work.work = serverWork;\n          work.state = workState.success;\n        } else {\n          work.state = workState.error;\n        }\n        break;\n      case 'clientCPU':\n        try {\n          work.work = await this.getHashCPUWorker(queueItem.hash, localMultiplier);\n          work.state = workState.success;\n        } catch (state) {\n          work.state = state;\n        }\n        break;\n      case 'clientWebGL':\n        try {\n          work.work = await this.getHashWebGL(queueItem.hash, localMultiplier);\n          work.state = workState.success;\n        } catch (state) {\n          work.state = state;\n        }\n        break;\n      case 'custom':\n        const workServer = this.appSettings.settings.customWorkServer;\n        // Check all known APIs and return true if there is no match. Then allow local PoW mutliplier\n        const allowLocalMulti = workServer !== '' &&\n          this.appSettings.knownApiEndpoints.every(endpointUrl => !workServer.includes(endpointUrl));\n\n        const customWork = await this.getHashServer(queueItem.hash, allowLocalMulti ? localMultiplier : queueItem.multiplier, workServer);\n        if (customWork) {\n          work.work = customWork;\n          work.state = workState.success;\n        } else {\n          work.state = workState.error;\n        }\n        break;\n      case 'nano.to':\n        const proWork = await this.getHashServer(queueItem.hash, queueItem.multiplier, 'https://rpc.nano.to');\n        if (proWork) {\n          work.work = proWork;\n          work.state = workState.success;\n        } else {\n          work.state = workState.error;\n        }\n        break;\n    }\n\n    this.currentProcessTime = 0; // Reset timer\n    this.PoWPool.shift(); // Remove this item from the queue\n    this.processingQueueItem = false;\n\n    if (work.state === workState.success) {\n      queueItem.work = work.work;\n      queueItem.promise.resolve(work);\n    } else {\n      // this.notifications.sendError(`Unable to generate work for ${queueItem.hash} using ${powSource}`);\n      queueItem.promise.reject(work);\n    }\n\n    if (this.shouldContinueQueue) {\n      this.processQueue();\n    }\n\n    return queueItem;\n  }\n\n  /**\n   * Actual PoW functions\n   */\n  async getHashServer(hash, multiplier, workServer = '') {\n    const newThreshold = this.util.nano.difficultyFromMultiplier(multiplier, baseThreshold);\n    const serverString = workServer === '' ? 'external' : 'custom';\n    console.log('Generating work with multiplier ' + multiplier + ' at threshold ' +\n      newThreshold + ' using ' + serverString + ' server for hash: ', hash);\n    return await this.api.workGenerate(hash, newThreshold, workServer)\n    .then(work => work.work)\n    // Do not fallback to CPU pow. Let the user decide\n    // .catch(async err => await this.getHashCPUWorker(hash, multiplier))\n    .catch(err => null);\n  }\n\n  /**\n   * Generate PoW using CPU without workers (Not used)\n   */\n  getHashCPUSync(hash) {\n    const response = this.getDeferredPromise();\n\n    const PoW = mod.cwrap('launchPoW', 'string', ['string']);\n    const start = Date.now();\n    let work;\n    do { work = PoW(hash); } while (work === '0000000000000000');\n    console.log(`Synchronous CPU: Found work (${work}) for ${hash} after ${(Date.now() - start) / 1000} seconds`);\n\n    response.resolve(work);\n    return response.promise;\n  }\n\n  /**\n   * Generate PoW using CPU and WebWorkers\n   */\n  async getHashCPUWorker(hash, multiplier) {\n    this.checkPowProcessLength(); // start alert timer\n    // console.log('Generating work using CPU for', hash);\n\n    const response = this.getDeferredPromise();\n\n    const start = Date.now();\n    // -- OLD CPU CODE THAT CANT DEFINE THRESHOLD-- //\n    /*\n    const NUM_THREADS = navigator.hardwareConcurrency < 4 ? navigator.hardwareConcurrency : 4;\n    const workers = window['pow_initiate'](NUM_THREADS, '/assets/lib/pow/');\n\n    window['pow_callback'](workers, hash, () => {}, (work) => {\n      console.log(`CPU Worker: Found work (${work}) for ${hash} after ${(Date.now() - start) / 1000} seconds [${NUM_THREADS} Workers]`);\n      response.resolve(work);\n    });\n    */\n\n    // calculate threshold from multiplier\n    const newThreshold = this.util.nano.difficultyFromMultiplier(multiplier, baseThreshold);\n    const work = () => new Promise<void>((resolve, reject) => {\n      this.cpuWorkerResolve = resolve;\n      this.cpuWorkerReject = reject;\n      console.log('Generating work with multiplier ' + multiplier + ' at threshold ' +\n        newThreshold + ' using CPU workers for hash: ', hash);\n      workerList = [];\n      for (let i = 0; i < workerCount; i++) {\n        // const worker = new Worker()\n        const worker = new (Worker as any)();\n        worker.postMessage({\n          blockHash: hash,\n          workerIndex: i,\n          workerCount: workerCount,\n          workThreshold: newThreshold,\n        });\n        worker.onmessage = (workerwork) => {\n          console.log(`CPU Worker: Found work (${workerwork.data}) for ${hash} after ${(Date.now() - start) / 1000} seconds [${workerCount} Workers]`);\n          response.resolve(workerwork.data);\n          this.terminateCpuWorkers(true);\n        };\n        workerList.push(worker);\n      }\n    });\n    try {\n      await work();\n    } catch (msg) {\n      response.reject(msg);\n    }\n\n    return response.promise;\n  }\n\n  /**\n   * Generate PoW using WebGL\n   */\n  getHashWebGL(hash, multiplier) {\n    this.checkPowProcessLength(); // start alert timer\n    const newThreshold = this.util.nano.difficultyFromMultiplier(multiplier, baseThreshold);\n    console.log('Generating work with multiplier ' + multiplier + ' at threshold ' + newThreshold + ' using WebGL for hash: ', hash);\n\n    const response = this.getDeferredPromise();\n\n    const start = Date.now();\n    try {\n      window['NanoWebglPow'](hash, (work, n) => {\n          console.log(`WebGL Worker: Found work (${work}) for ${hash} after ${(Date.now() - start) / 1000} seconds [${n} iterations]`);\n          response.resolve(work);\n        },\n        n => {\n          if (this.shouldAbortGpuPow) {\n            this.shouldAbortGpuPow = false;\n            response.reject(workState.cancelled);\n            return true;\n          }\n        },\n        '0x' + newThreshold.substring(0, 8).toUpperCase() // max threshold for webglpow is currently ffffffff00000000\n      );\n    } catch (error) {\n      if (error.message === 'webgl2_required') {\n        this.webGLAvailable = false;\n        console.warn('WebGL is required for GPU pow');\n      }\n      response.reject(workState.error);\n    }\n\n    return response.promise;\n  }\n\n\n  // Helper for returning a deferred promise that we can resolve when work is ready\n  private getDeferredPromise() {\n    const defer = {\n      promise: null,\n      resolve: null,\n      reject: null,\n    };\n\n    defer.promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve;\n      defer.reject = reject;\n    });\n\n    return defer;\n  }\n\n  // Check if pow takes longer than limit, then notify user\n  async checkPowProcessLength() {\n    this.shouldAbortGpuPow = false;\n    this.currentProcessTime = Date.now();\n    while (this.currentProcessTime !== 0) {\n      // display alert of PoW has been running more than X ms\n      if (Date.now() - this.currentProcessTime >= this.powAlertLimit * 1000) {\n        this.powAlert$.next(true);\n      }\n      await this.sleep(1000);\n    }\n    this.powAlert$.next(false);\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  // Interupt running pow and empty the queue\n  public cancelAllPow(notify) {\n    if (this.currentProcessTime !== 0) {\n      this.currentProcessTime = 0; // reset timer\n      this.powAlert$.next(false); // announce alert to close\n      this.shouldContinueQueue = false; // disable further processing\n      this.terminateCpuWorkers(false); // abort CPU worker if running\n      this.shouldAbortGpuPow = true; // abort GPU pow if running\n      if (notify) {\n        this.notifications.sendInfo(`Proof of Work generation cancelled by the user`);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  terminateCpuWorkers(successful) {\n    for (const workerIndex in workerList) {\n      if (Object.prototype.hasOwnProperty.call(workerList, workerIndex)) {\n        workerList[workerIndex].terminate();\n      }\n    }\n    if (successful && this.cpuWorkerResolve) {\n      this.cpuWorkerResolve();\n    } else if (!successful && this.cpuWorkerReject) {\n      this.cpuWorkerReject(workState.cancelled);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable()\nexport class PriceService {\n  storeKey = `nanovault-price`;\n  // apiUrl = `https://api.coingecko.com/api/v3/coins/nano?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`;\n\n  price = {\n    lastPrice: 0,\n    lastPriceBTC: 0,\n  };\n  lastPrice$ = new BehaviorSubject(1);\n\n  constructor(private http: HttpClient) {\n    this.loadSavedPrice();\n  }\n\n  async getPrice(currency = 'USD') {\n    if (!currency) return; // No currency defined, do not refetch\n    const response: any = await this.http.post('https://rpc.nano.to', { action: \"market_data\" }).toPromise();\n    // const response: any = await this.http.get(`${this.apiUrl}`).toPromise();\n    if (!response) {\n      return this.price.lastPrice;\n    }\n\n    const quote = response.market_data.current_price;\n    const currencyPrice = quote[currency.toLowerCase()];\n    const btcPrice = quote.btc;\n\n    this.price.lastPrice = currencyPrice;\n    this.price.lastPriceBTC = btcPrice;\n\n    this.savePrice();\n\n    this.lastPrice$.next(currencyPrice);\n\n    return this.price.lastPrice;\n  }\n\n  loadSavedPrice() {\n    const priceData = localStorage.getItem(this.storeKey);\n    if (!priceData) return false;\n\n    this.price = JSON.parse(priceData);\n  }\n\n  savePrice() {\n    localStorage.setItem(this.storeKey, JSON.stringify(this.price));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { QrModalComponent, QRType } from '../components/qr-modal/qr-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QrModalService {\n\n  constructor(\n    private modalService: NgbModal) { }\n\n  /** Will return a promise that will only resolve if the type matches the QR string read and is valid\n   *\n   * @param reference Unique reference ID for example a text input\n   * @param type String type to match in QR\n   */\n  openQR(reference: string, type: QRType) {\n    const response = this.getDeferredPromise();\n    const modalRef = this.modalService.open(QrModalComponent, {windowClass: 'scanner-modal'});\n    modalRef.componentInstance.reference = reference;\n    modalRef.componentInstance.type = type;\n    modalRef.result.then((data) => {\n      response.resolve(data);\n    }, () => {\n      response.reject();\n    });\n    return response.promise;\n  }\n\n  // Helper for returning a deferred promise that we can resolve when QR is ready\n  private getDeferredPromise() {\n    const defer = {\n      promise: null,\n      resolve: null,\n      reject: null,\n    };\n\n    defer.promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve;\n      defer.reject = reject;\n    });\n\n    return defer;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NotificationService } from './notification.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from './util.service';\n\n@Injectable()\nexport class RemoteSignService {\n\n\n  constructor(\n    private router: Router,\n    private notifcationService: NotificationService,\n    private util: UtilService,\n  ) { }\n\n  navigateSignBlock(url) {\n    if (!this.checkSignBlock(url.pathname)) {\n      return this.notifcationService.sendWarning('Not a recognized format of an unsigned block.', { length: 5000 });\n    }\n    try {\n      const data = JSON.parse(url.pathname);\n      // Block to sign\n      let paramsSign = {\n        sign: 1,\n        n_account: data.block.account,\n        n_previous: data.block.previous,\n        n_representative: data.block.representative,\n        n_balance: data.block.balance,\n        n_link: data.block.link,\n      };\n      // include previous block if exists\n      if (data.previous) {\n        paramsSign = {...paramsSign, ...{\n          p_account: data.previous.account,\n          p_previous: data.previous.previous,\n          p_representative: data.previous.representative,\n          p_balance: data.previous.balance,\n          p_link: data.previous.link,\n          p_signature: data.previous.signature,\n        }};\n      }\n      // include multisig if exists\n      if (data.participants) {\n        paramsSign = {...paramsSign, ...{\n          participants: data.participants,\n        }};\n      }\n      this.router.navigate(['sign'], { queryParams: paramsSign});\n    } catch (error) {\n      this.notifcationService.sendWarning('Block sign data detected but not correct format.', { length: 5000 });\n    }\n  }\n\n  navigateProcessBlock(url) {\n    if (!this.checkSignBlock(url.pathname) || !this.checkProcessBlock(url.pathname)) {\n      return this.notifcationService.sendWarning('Not a recognized format of a signed block.', { length: 5000 });\n    }\n    try {\n      const data = JSON.parse(url.pathname);\n      // Block to process\n      let paramsProcess = {\n        sign: 0,\n        n_account: data.block.account,\n        n_previous: data.block.previous,\n        n_representative: data.block.representative,\n        n_balance: data.block.balance,\n        n_link: data.block.link,\n        n_signature: data.block.signature,\n        n_work: data.block.work,\n      };\n      // only include if it exist\n      if (data.previous) {\n        paramsProcess = {...paramsProcess, ...{\n          p_account: data.previous.account,\n          p_previous: data.previous.previous,\n          p_representative: data.previous.representative,\n          p_balance: data.previous.balance,\n          p_link: data.previous.link,\n        }};\n      }\n      this.router.navigate(['sign'], { queryParams: paramsProcess});\n    } catch (error) {\n      this.notifcationService.sendWarning('Block process data detected but not correct format.', { length: 5000 });\n    }\n  }\n\n  checkSignBlock(stringdata: string) {\n    try {\n      const data = JSON.parse(stringdata);\n      console.log(data);\n\n      return (this.util.account.isValidAccount(data.block.account) &&\n        (data.previous ? this.util.account.isValidAccount(data.previous.account) : true) &&\n        this.util.account.isValidAccount(data.block.representative) &&\n        (data.previous ? this.util.account.isValidAccount(data.previous.representative) : true) &&\n        this.util.account.isValidAmount(data.block.balance) &&\n        (data.previous ? this.util.account.isValidAmount(data.previous.balance) : true) &&\n        this.util.nano.isValidHash(data.block.previous) &&\n        (data.previous ? this.util.nano.isValidHash(data.previous.previous) : true) &&\n        this.util.nano.isValidHash(data.block.link) &&\n        (data.previous ? this.util.nano.isValidHash(data.previous.link) : true) &&\n        (data.previous ? this.util.nano.isValidSignature(data.previous.signature) : true));\n    } catch (error) {\n      return false;\n    }\n  }\n\n  checkProcessBlock(stringdata: string) {\n    try {\n      const data = JSON.parse(stringdata);\n      return (this.util.nano.isValidSignature(data.block.signature) &&\n        (data.block.work ? this.util.nano.isValidWork(data.block.work) : true));\n    } catch (error) {\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {BaseApiAccount, WalletApiAccount, WalletService} from './wallet.service';\nimport BigNumber from 'bignumber.js';\nimport {ApiService} from './api.service';\nimport {UtilService} from './util.service';\nimport { NinjaService } from './ninja.service';\n\nexport interface RepresentativeStatus {\n  online: boolean;\n  veryHighWeight: boolean;\n  highWeight: boolean;\n  veryLowUptime: boolean;\n  lowUptime: boolean;\n  closing: boolean;\n  markedToAvoid: boolean;\n  markedAsNF: boolean;\n  trusted: boolean;\n  changeRequired: boolean;\n  warn: boolean;\n  known: boolean;\n  daysSinceLastVoted: number;\n  uptime: number;\n  score: number;\n}\n\nexport interface RepresentativeOverview {\n  id: string;\n  weight: BigNumber;\n  accounts: WalletApiAccount[];\n}\n\nexport interface StoredRepresentative {\n id: string;\n name: string;\n warn?: boolean;\n trusted?: boolean;\n}\n\n\nexport interface RepresentativeApiOverview extends BaseApiAccount {\n  account: string;\n  accounts: WalletApiAccount[];\n  delegatedWeight: BigNumber;\n}\n\nexport interface FullRepresentativeOverview extends RepresentativeApiOverview {\n  id: string;\n  percent: BigNumber;\n  statusText: string;\n  label: string|null;\n  status: RepresentativeStatus;\n  donationAddress?: string;\n}\n\n\n@Injectable()\nexport class RepresentativeService {\n  storeKey = `nanovault-representatives`;\n\n  representatives$ = new BehaviorSubject([]);\n  representatives = [];\n\n  walletReps$ = new BehaviorSubject([null]);\n  walletReps = [];\n\n  changeableReps$ = new BehaviorSubject([]);\n  changeableReps = [];\n\n  onlineStakeTotal = new BigNumber(115202418);\n\n  loaded = false;\n\n  constructor(\n    private wallet: WalletService,\n    private api: ApiService,\n    private util: UtilService,\n    private ninja: NinjaService\n  ) {\n    this.representatives = this.defaultRepresentatives;\n  }\n\n  /**\n   * Determine if any accounts in the wallet need a rep change\n   * @returns {Promise<FullRepresentativeOverview[]>}\n   */\n  async detectChangeableReps(cachedReps?: FullRepresentativeOverview[]): Promise<FullRepresentativeOverview[]> {\n    const representatives = cachedReps ? cachedReps : await this.getRepresentativesOverview();\n\n    // Now based on some of their properties, we filter them out\n    const needsChange = [];\n    for (const rep of representatives) {\n      if (rep.status.trusted) {\n        continue; // Reps marked as trusted are good no matter their status\n      }\n\n      // If we have high weight, low uptime or marked as warn, then we need to change\n      if (\n            rep.status.highWeight\n          || rep.status.veryHighWeight\n          || rep.status.lowUptime\n          || rep.status.veryLowUptime\n          || rep.status.warn\n        ) {\n          needsChange.push(rep);\n      }\n    }\n\n    this.changeableReps = needsChange;\n    this.changeableReps$.next(needsChange);\n\n    return needsChange;\n  }\n\n  /**\n   * Get a detailed overview of representatives for all acounts in the wallet\n   * @returns {Promise<FullRepresentativeOverview[]>}\n   */\n  async getRepresentativesOverview(): Promise<FullRepresentativeOverview[]> {\n    // First get the details of all representatives for accounts in our wallet\n    const accounts = await this.wallet.getAccountsDetails();\n    const uniqueReps = this.getUniqueRepresentatives(accounts);\n    const representatives = await this.getRepresentativesDetails(uniqueReps);\n    const onlineReps = await this.getOnlineRepresentatives();\n    const quorum = await this.api.confirmationQuorum();\n\n    const online_stake_total = quorum ? this.util.nano.rawToMnano(quorum.online_stake_total) : null;\n    this.onlineStakeTotal = online_stake_total ? new BigNumber(online_stake_total) : null;\n\n    const allReps = [];\n\n    // Now, loop through each representative and determine some details about it\n    for (const representative of representatives) {\n      const repOnline = onlineReps.indexOf(representative.account) !== -1;\n      const knownRep = this.getRepresentative(representative.account);\n      const knownRepNinja = await this.ninja.getAccount(representative.account);\n\n      const nanoWeight = this.util.nano.rawToMnano(representative.weight || 0);\n      const percent = this.onlineStakeTotal ? nanoWeight.div(this.onlineStakeTotal).times(100) : new BigNumber(0);\n\n      const repStatus: RepresentativeStatus = {\n        online: repOnline,\n        veryHighWeight: false,\n        highWeight: false,\n        veryLowUptime: false,\n        lowUptime: false,\n        closing: false,\n        markedToAvoid: false,\n        markedAsNF: false,\n        trusted: false,\n        daysSinceLastVoted: 0,\n        changeRequired: false,\n        warn: false,\n        known: false,\n        uptime: null,\n        score: null\n      };\n\n      // Determine the status based on some factors\n      let status = 'none';\n      let label;\n\n      if (percent.gte(3)) {\n        status = 'alert'; // Has extremely high voting weight\n        repStatus.veryHighWeight = true;\n        repStatus.changeRequired = true;\n      } else if (percent.gte(2)) {\n        status = 'warn'; // Has high voting weight\n        repStatus.highWeight = true;\n      }\n\n      // Check hardcoded NF reps (override below if trusted but leave markedAsNF intact)\n      const nf = this.nfReps.find(bad => bad.id === representative.account);\n      if (nf) {\n        repStatus.markedAsNF = true;\n        repStatus.changeRequired = true;\n        repStatus.warn = true;\n        status = 'alert';\n      }\n\n      if (knownRep) {\n        // in the list of known representatives\n        status = status === 'none' ? 'ok' : status;\n        label = knownRep.name;\n        repStatus.known = true;\n        if (knownRep.trusted) {\n          status = 'trusted'; // marked as trusted\n          repStatus.trusted = true;\n          repStatus.changeRequired = false;\n          repStatus.warn = false;\n        }\n        if (knownRep.warn) {\n          status = 'alert'; // marked to avoid\n          repStatus.markedToAvoid = true;\n          repStatus.warn = true;\n          repStatus.changeRequired = true;\n        }\n      } else if (knownRepNinja) {\n        status = status === 'none' ? 'ok' : status;\n        label = knownRepNinja.alias;\n      }\n\n      const uptimeIntervalDays = 7;\n\n      if (knownRepNinja && !repStatus.trusted) {\n        if (knownRepNinja.closing === true) {\n          status = 'alert';\n          repStatus.closing = true;\n          repStatus.warn = true;\n          repStatus.changeRequired = true;\n        }\n\n        let uptimeIntervalValue = knownRepNinja.uptime_over.week;\n\n        // temporary fix for knownRepNinja.uptime_over.week always returning 0\n        // uptimeIntervalValue = knownRepNinja.uptime_over.month;\n        // uptimeIntervalDays = 30;\n        // /temporary fix\n\n        // consider uptime value at least 1/<interval days> of daily uptime\n        uptimeIntervalValue = Math.max(\n          uptimeIntervalValue,\n          (knownRepNinja.uptime_over.day / uptimeIntervalDays)\n        );\n\n        if (repOnline === true) {\n          // consider uptime value at least 1% if the rep is currently online\n          uptimeIntervalValue = Math.max(uptimeIntervalValue, 1);\n        }\n\n        repStatus.uptime = uptimeIntervalValue;\n        repStatus.score = knownRepNinja.score;\n\n        const msSinceLastVoted = knownRepNinja.lastVoted ? ( Date.now() - new Date(knownRepNinja.lastVoted).getTime() ) : 0;\n        repStatus.daysSinceLastVoted = Math.floor(msSinceLastVoted / 86400000);\n        if (uptimeIntervalValue === 0) {\n          // display a minimum of <interval days> if the uptime value is 0%\n          repStatus.daysSinceLastVoted = Math.max(repStatus.daysSinceLastVoted, uptimeIntervalDays);\n        }\n\n        if (uptimeIntervalValue < 50) {\n          status = 'alert';\n          repStatus.veryLowUptime = true;\n          repStatus.warn = true;\n          repStatus.changeRequired = true;\n        } else if (uptimeIntervalValue < 60) {\n          if (status !== 'alert') {\n            status = 'warn';\n          }\n          repStatus.lowUptime = true;\n          repStatus.warn = true;\n        }\n      } else if (knownRepNinja === false) {\n        // does not exist (404)\n        status = 'alert';\n        repStatus.uptime = 0;\n        repStatus.veryLowUptime = true;\n        repStatus.daysSinceLastVoted = uptimeIntervalDays;\n        repStatus.warn = true;\n        repStatus.changeRequired = true;\n      } else {\n        // any other api error\n        status = status === 'none' ? 'unknown' : status;\n      }\n\n      const additionalData = {\n        id: representative.account,\n        percent: percent,\n        statusText: status,\n        label: label,\n        status: repStatus,\n        donationAddress: knownRepNinja?.donation?.account,\n      };\n\n      const fullRep = { ...representative, ...additionalData };\n      allReps.push(fullRep);\n    }\n\n    this.walletReps = allReps;\n    this.walletReps$.next(allReps);\n\n    return allReps;\n  }\n\n  /**\n   * Build a list of unique representatives based on the accounts provided\n   * Many accounts may share the same representative\n   * @param accounts\n   * @returns {RepresentativeOverview[]}\n   */\n  getUniqueRepresentatives(accounts: WalletApiAccount[]): RepresentativeOverview[] {\n    const representatives = [];\n    for (const account of accounts) {\n      if (!account || !account.representative) continue; // Account doesn't exist yet\n\n      const existingRep = representatives.find(rep => rep.id === account.representative);\n      if (existingRep) {\n        existingRep.weight = existingRep.weight.plus(new BigNumber(account.balance));\n        existingRep.accounts.push(account);\n      } else {\n        const newRep = {\n          id: account.representative,\n          weight: new BigNumber(account.balance),\n          accounts: [account],\n        };\n        representatives.push(newRep);\n      }\n    }\n\n    return representatives;\n  }\n\n  /**\n   * Get a list of all online representatives\n   * @returns {Promise<string[]>}\n   */\n  async getOnlineRepresentatives(): Promise<string[]> {\n    const representatives = [];\n    const reps = await this.api.representativesOnline();\n    if (!reps) return representatives;\n    for (const representative in reps.representatives) {\n      if (!reps.representatives.hasOwnProperty(representative)) continue;\n      representatives.push(reps.representatives[representative]);\n    }\n\n    return representatives;\n  }\n\n  /**\n   * Add detailed API information to each representative\n   * Note: The uglyness allows for requests to run in parallel\n   * @param {RepresentativeOverview[]} representatives\n   * @returns {Promise<RepresentativeApiOverview[]>}\n   */\n  async getRepresentativesDetails(representatives: RepresentativeOverview[]): Promise<RepresentativeApiOverview[]> {\n    const repInfos = await Promise.all(\n      representatives.map(rep =>\n        this.api.accountInfo(rep.id)\n          .then((res: RepresentativeApiOverview) => {\n            res.account = rep.id;\n            res.delegatedWeight = rep.weight;\n            res.accounts = rep.accounts;\n\n            return res;\n          })\n      )\n    );\n\n    return repInfos;\n  }\n\n  /**\n   * Load the stored/known representative list from local storage\n   * @returns {StoredRepresentative[]}\n   */\n  loadRepresentativeList(): StoredRepresentative[] {\n    if (this.loaded) return this.representatives;\n\n    let list = this.defaultRepresentatives;\n    const representativeStore = localStorage.getItem(this.storeKey);\n    if (representativeStore) {\n      list = JSON.parse(representativeStore);\n    }\n    this.representatives = list;\n    this.representatives$.next(list);\n    this.loaded = true;\n\n    return list;\n  }\n\n  patchXrbPrefixData() {\n    const representativeStore = localStorage.getItem(this.storeKey);\n    if (!representativeStore) return;\n\n    const list = JSON.parse(representativeStore);\n\n    const newRepList = list.map(entry => {\n      if (entry.id.indexOf('xrb_') !== -1) {\n        entry.id = entry.id.replace('xrb_', 'nano_');\n      }\n      return entry;\n    });\n\n    localStorage.setItem(this.storeKey, JSON.stringify(newRepList));\n\n    return true;\n  }\n\n  getRepresentative(id): StoredRepresentative | undefined {\n    return this.representatives.find(rep => rep.id === id);\n  }\n\n  // Reset representatives list to the default one\n  resetRepresentativeList() {\n    localStorage.removeItem(this.storeKey);\n    this.representatives = this.defaultRepresentatives;\n    this.loaded = false;\n  }\n\n\n  saveRepresentative(accountID, name, trusted = false, warn = false): void {\n    const newRepresentative: any = {\n      id: accountID,\n      name: name,\n    };\n    if (trusted) newRepresentative.trusted = true;\n    if (warn) newRepresentative.warn = true;\n\n    const existingRepresentative = this.representatives.find(\n      r => r.name.toLowerCase() === name.toLowerCase() || r.id.toLowerCase() === accountID.toLowerCase()\n    );\n    if (existingRepresentative) {\n      this.representatives.splice(this.representatives.indexOf(existingRepresentative), 1, newRepresentative);\n    } else {\n      this.representatives.push(newRepresentative);\n    }\n\n    this.saveRepresentatives();\n    this.representatives$.next(this.representatives);\n  }\n\n  deleteRepresentative(accountID): void {\n    const existingIndex = this.representatives.findIndex(a => a.id.toLowerCase() === accountID.toLowerCase());\n    if (existingIndex === -1) return;\n\n    this.representatives.splice(existingIndex, 1);\n\n    this.saveRepresentatives();\n    this.representatives$.next(this.representatives);\n  }\n\n  saveRepresentatives(): void {\n    localStorage.setItem(this.storeKey, JSON.stringify(this.representatives));\n  }\n\n  getSortedRepresentatives() {\n    const weightedReps = this.representatives.map(r => {\n      if (r.trusted) {\n        r.weight = 2;\n      } else if (r.warn) {\n        r.weight = 0;\n      } else {\n        r.weight = 1;\n      }\n      return r;\n    });\n\n    return weightedReps.sort((a, b) => b.weight - a.weight);\n  }\n\n  nameExists(name: string): boolean {\n    return this.representatives.findIndex(a => a.name.toLowerCase() === name.toLowerCase()) !== -1;\n  }\n\n  // Default representatives list\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  defaultRepresentatives = [];\n\n  // Bad representatives hardcoded to be avoided. Not visible in the user rep list\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  nfReps = [\n    {\n      id: 'nano_3arg3asgtigae3xckabaaewkx3bzsh7nwz7jkmjos79ihyaxwphhm6qgjps4',\n      name: 'Nano Foundation #1',\n    },\n    {\n      id: 'nano_1stofnrxuz3cai7ze75o174bpm7scwj9jn3nxsn8ntzg784jf1gzn1jjdkou',\n      name: 'Nano Foundation #2',\n    },\n    {\n      id: 'nano_1q3hqecaw15cjt7thbtxu3pbzr1eihtzzpzxguoc37bj1wc5ffoh7w74gi6p',\n      name: 'Nano Foundation #3',\n    },\n    {\n      id: 'nano_3dmtrrws3pocycmbqwawk6xs7446qxa36fcncush4s1pejk16ksbmakis78m',\n      name: 'Nano Foundation #4',\n    },\n    {\n      id: 'nano_3hd4ezdgsp15iemx7h81in7xz5tpxi43b6b41zn3qmwiuypankocw3awes5k',\n      name: 'Nano Foundation #5',\n    },\n    {\n      id: 'nano_1awsn43we17c1oshdru4azeqjz9wii41dy8npubm4rg11so7dx3jtqgoeahy',\n      name: 'Nano Foundation #6',\n    },\n    {\n      id: 'nano_1anrzcuwe64rwxzcco8dkhpyxpi8kd7zsjc1oeimpc3ppca4mrjtwnqposrs',\n      name: 'Nano Foundation #7',\n    },\n    {\n      id: 'nano_1hza3f7wiiqa7ig3jczyxj5yo86yegcmqk3criaz838j91sxcckpfhbhhra1',\n      name: 'Nano Foundation #8',\n    },\n  ];\n\n}\n","import { Injectable } from '@angular/core';\nimport * as blake from 'blakejs';\nimport {BigNumber} from 'bignumber.js';\nimport * as nanocurrency from 'nanocurrency';\n\nconst nacl = window['nacl'];\nconst STATE_BLOCK_PREAMBLE = '0000000000000000000000000000000000000000000000000000000000000006';\nconst pbkdf2_1 = require('pbkdf2');\n\nexport interface StateBlock {\n  account: string;\n  previous: string;\n  representative: string;\n  balance: string;\n  link: string;\n  signature: string;\n  work: string;\n}\n\nexport enum TxType {'send', 'receive', 'open', 'change'}\n\n@Injectable()\nexport class UtilService {\n\n  constructor() {\n  }\n\n  hex = {\n    toUint4: hexToUint4,\n    fromUint8: uint8ToHex,\n    toUint8: hexToUint8,\n    isHex: isHex,\n  };\n  uint4 = {\n    toUint5: uint4ToUint5,\n    toUint8: uint4ToUint8,\n  };\n  uint5 = {\n    toString: uint5ToString,\n  };\n  uint8 = {\n    toUint4: uint8ToUint4,\n    fromHex: hexToUint8,\n    toHex: uint8ToHex,\n  };\n  dec = {\n    toHex: decToHex,\n  };\n  big = {\n    add: bigAdd,\n  };\n  string = {\n    isNumeric: isNumeric,\n    mnemonicToSeedSync: mnemonicToSeedSync,\n  };\n  account = {\n    generateAccountSecretKeyBytes: generateAccountSecretKeyBytes,\n    generateAccountKeyPair: generateAccountKeyPair,\n    getPublicAccountID: getPublicAccountID,\n    generateSeedBytes: generateSeedBytes,\n    getAccountPublicKey: getAccountPublicKey,\n    getAccountChecksum: getAccountChecksum,\n    setPrefix: setPrefix,\n    isValidAccount: isValidAccount,\n    isValidNanoAmount: isValidNanoAmount,\n    isValidAmount: isValidAmount,\n  };\n  nano = {\n    mnanoToRaw: mnanoToRaw,\n    knanoToRaw: knanoToRaw,\n    nanoToRaw: nanoToRaw,\n    rawToMnano: rawToMnano,\n    rawToKnano: rawToKnano,\n    rawToNano: rawToNano,\n    hashStateBlock: hashStateBlock,\n    isValidSeed: isValidSeed,\n    isValidHash: isValidHash,\n    isValidIndex: isValidIndex,\n    isValidSignature: isValidSignature,\n    isValidWork: isValidWork,\n    validateWork: validateWork,\n    difficultyFromMultiplier: difficultyFromMultiplier,\n    multiplierFromDifficulty: multiplierFromDifficulty,\n  };\n  array = {\n    shuffle: shuffle,\n    findWithAttr: findWithAttr,\n    equalArrays: equalArrays\n  };\n\n}\n\n\n\n/** Hex Functions **/\nfunction hexToUint4(hexValue) {\n  const uint4 = new Uint8Array(hexValue.length);\n  for (let i = 0; i < hexValue.length; i++) uint4[i] = parseInt(hexValue.substr(i, 1), 16);\n\n  return uint4;\n}\nfunction hexToUint8(hexValue) {\n  // eslint-disable-next-line no-bitwise\n  const length = (hexValue.length / 2) | 0;\n  const uint8 = new Uint8Array(length);\n  for (let i = 0; i < length; i++) uint8[i] = parseInt(hexValue.substr(i * 2, 2), 16);\n\n  return uint8;\n}\n\n// Check if string is hexdecimal\nfunction isHex(h) {\n  const re = /^[0-9a-fA-F]+$/;\n  return re.test(h);\n}\n\n\n/** Uint4 Functions **/\nfunction uint4ToUint8(uintValue) {\n  const length = uintValue.length / 2;\n  const uint8 = new Uint8Array(length);\n  for (let i = 0; i < length; i++)\tuint8[i] = uintValue[i * 2] * 16 + uintValue[i * 2 + 1];\n\n  return uint8;\n}\n\n/* eslint-disable no-bitwise */\nfunction uint4ToUint5(uintValue) {\n  const length = uintValue.length / 5 * 4;\n  const uint5 = new Uint8Array(length);\n  for (let i = 1; i <= length; i++) {\n    const n = i - 1;\n    const m = i % 4;\n    const z = n + ((i - m) / 4);\n    const right = uintValue[z] << m;\n    let left;\n    if (((length - i) % 4) === 0)\tleft = uintValue[z - 1] << 4;\n    else\tleft = uintValue[z + 1] >> (4 - m);\n    uint5[n] = (left + right) % 32;\n  }\n  return uint5;\n}\n/* eslint-enable no-bitwise */\n\nfunction uint4ToHex(uint4) {\n  let hex = '';\n  for (let i = 0; i < uint4.length; i++) hex += uint4[i].toString(16).toUpperCase();\n  return hex;\n}\n\n\n/** Uint5 Functions **/\nfunction uint5ToString(uint5) {\n  const letter_list = '13456789abcdefghijkmnopqrstuwxyz'.split('');\n  let string = '';\n  for (let i = 0; i < uint5.length; i++)\tstring += letter_list[uint5[i]];\n\n  return string;\n}\n\n/* eslint-disable no-bitwise */\nfunction uint5ToUint4(uint5) {\n  const length = uint5.length / 4 * 5;\n  const uint4 = new Uint8Array(length);\n  for (let i = 1; i <= length; i++) {\n    const n = i - 1;\n    const m = i % 5;\n    const z = n - ((i - m) / 5);\n    const right = uint5[z - 1] << (5 - m);\n    const left = uint5[z] >> m;\n    uint4[n] = (left + right) % 16;\n  }\n  return uint4;\n}\n/* eslint-enable no-bitwise */\n\n\n/** Uint8 Functions **/\nfunction uint8ToHex(uintValue) {\n  let hex = '';\n  let aux;\n  for (let i = 0; i < uintValue.length; i++) {\n    aux = uintValue[i].toString(16).toUpperCase();\n    if (aux.length === 1) {\n      aux = '0' + aux;\n    }\n    hex += aux;\n    aux = '';\n  }\n\n  return(hex);\n}\n\n/* eslint-disable no-bitwise */\nfunction uint8ToUint4(uintValue) {\n  const uint4 = new Uint8Array(uintValue.length * 2);\n  for (let i = 0; i < uintValue.length; i++) {\n    uint4[i * 2] = uintValue[i] / 16 | 0;\n    uint4[i * 2 + 1] = uintValue[i] % 16;\n  }\n\n  return uint4;\n}\n/* eslint-enable no-bitwise */\n\n\n/** Dec Functions **/\nfunction decToHex(decValue, bytes = null) {\n  // eslint-disable-next-line prefer-const\n  let dec = decValue.toString().split(''), sum = [], hex = '', hexArray = [], i, s;\n  while (dec.length) {\n    s = 1 * dec.shift();\n    for (i = 0; s || i < sum.length; i++) {\n      s += (sum[i] || 0) * 10;\n      sum[i] = s % 16;\n      s = (s - sum[i]) / 16;\n    }\n  }\n  while (sum.length) {\n    hexArray.push(sum.pop().toString(16));\n  }\n\n  hex = hexArray.join('');\n\n  if (hex.length % 2 !== 0) {\n    hex = '0' + hex;\n  }\n\n  if (bytes > hex.length / 2) {\n    const diff = bytes - hex.length / 2;\n    for (let j = 0; j < diff; j++) {\n      hex = '00' + hex;\n    }\n  }\n\n  return hex;\n}\n\n// BigNumber functions\nfunction bigAdd(input, value) {\n  const insert = new BigNumber(input);\n  const val = new BigNumber(value);\n  return insert.plus(val).toString(10);\n}\n\n/** String Functions **/\nfunction stringToUint5(string) {\n  const letter_list = '13456789abcdefghijkmnopqrstuwxyz'.split('');\n  const length = string.length;\n  const string_array = string.split('');\n  const uint5 = new Uint8Array(length);\n  for (let i = 0; i < length; i++)\tuint5[i] = letter_list.indexOf(string_array[i]);\n  return uint5;\n}\n\nfunction isNumeric(val) {\n  // numerics and last character is not a dot and number of dots is 0 or 1\n  const isnum = /^-?\\d*\\.?\\d*$/.test(val) && val !== '';\n  return isnum && String(val).slice(-1) !== '.';\n}\n\nfunction mnemonicToSeedSync(mnemonic, password= null) {\n  // const mnemonicBuffer = Buffer.from((mnemonic || '').normalize('NFKD'), 'utf8');\n  // const saltBuffer = Buffer.from(this.salt((password || '').normalize('NFKD')), 'utf8');\n  // Using textencoder here instead ensures it returns an Uint8Array when using the desktop app\n  // and not a Buffer object that messes up the bip39 seed\n  const enc = new TextEncoder();\n  const mnemonicBuffer = enc.encode(mnemonic);\n  const saltBuffer = enc.encode('mnemonic' + (password || ''));\n  return pbkdf2_1.pbkdf2Sync(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n}\n\n\n/** Account Functions **/\nfunction generateAccountSecretKeyBytes(seedBytes, accountIndex) {\n  const accountBytes = hexToUint8(decToHex(accountIndex, 4));\n  const context = blake.blake2bInit(32);\n  blake.blake2bUpdate(context, seedBytes);\n  blake.blake2bUpdate(context, accountBytes);\n  const newKey = blake.blake2bFinal(context);\n\n  return newKey;\n}\n\nfunction getAccountChecksum(pubkey) {\n  const context = blake.blake2bInit(5);\n  blake.blake2bUpdate(context, pubkey);\n  const out = blake.blake2bFinal(context);\n  return out.reverse();\n}\n\nfunction generateAccountKeyPair(accountSecretKeyBytes, expanded = false) {\n  return nacl.sign.keyPair.fromSecretKey(accountSecretKeyBytes, expanded);\n}\n\nfunction getPublicAccountID(accountPublicKeyBytes, prefix = 'nano') {\n  const accountHex = util.uint8.toHex(accountPublicKeyBytes);\n  const keyBytes = util.uint4.toUint8(util.hex.toUint4(accountHex)); // For some reason here we go from u, to hex, to 4, to 8??\n  const checksum = util.uint5.toString(util.uint4.toUint5(util.uint8.toUint4(blake.blake2b(keyBytes, null, 5).reverse())));\n  const account = util.uint5.toString(util.uint4.toUint5(util.hex.toUint4(`0${accountHex}`)));\n\n  return `${prefix}_${account}${checksum}`;\n}\n\nfunction isValidAccount(account: string): boolean {\n  return nanocurrency.checkAddress(account);\n}\n\n// Check if a string is a numeric and larger than 0 but less than nano supply\nfunction isValidNanoAmount(val: string) {\n  // numerics and last character is not a dot and number of dots is 0 or 1\n  const isnum = /^-?\\d*\\.?\\d*$/.test(val);\n  if (isnum && String(val).slice(-1) !== '.') {\n    if (val !== '' && mnanoToRaw(val).gte(1) && nanocurrency.checkAmount(mnanoToRaw(val).toString(10))) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\n// Check if valid raw amount\nfunction isValidAmount(val: string) {\n  return nanocurrency.checkAmount(val);\n}\n\nfunction getAccountPublicKey(account) {\n  if (!isValidAccount(account)) {\n    throw new Error(`Invalid nano account`);\n  }\n  const account_crop = account.length === 64 ? account.substring(4, 64) : account.substring(5, 65);\n  const isValid = /^[13456789abcdefghijkmnopqrstuwxyz]+$/.test(account_crop);\n  if (!isValid) throw new Error(`Invalid nano account`);\n\n  const key_uint4 = array_crop(uint5ToUint4(stringToUint5(account_crop.substring(0, 52))));\n  const hash_uint4 = uint5ToUint4(stringToUint5(account_crop.substring(52, 60)));\n  const key_array = uint4ToUint8(key_uint4);\n  const blake_hash = blake.blake2b(key_array, null, 5).reverse();\n\n  if (!equalArrays(hash_uint4, uint8ToUint4(blake_hash))) throw new Error(`Incorrect checksum`);\n\n  return uint4ToHex(key_uint4);\n}\n\nfunction setPrefix(account, prefix = 'xrb') {\n  if (prefix === 'nano') {\n    return account.replace('xrb_', 'nano_');\n  } else {\n    return account.replace('nano_', 'xrb_');\n  }\n}\n\n/**\n * Conversion functions\n */\nconst mnano = 1000000000000000000000000000000;\nconst knano = 1000000000000000000000000000;\nconst nano  = 1000000000000000000000000;\nfunction mnanoToRaw(value) {\n  return new BigNumber(value).times(mnano);\n}\nfunction knanoToRaw(value) {\n  return new BigNumber(value).times(knano);\n}\nfunction nanoToRaw(value) {\n  return new BigNumber(value).times(nano);\n}\nfunction rawToMnano(value) {\n  return new BigNumber(value).div(mnano);\n}\nfunction rawToKnano(value) {\n  return new BigNumber(value).div(knano);\n}\nfunction rawToNano(value) {\n  return new BigNumber(value).div(nano);\n}\n\n/**\n * Nano functions\n */\nfunction isValidSeed(val: string) {\n  return nanocurrency.checkSeed(val);\n}\n\nfunction isValidHash(val: string) {\n  return nanocurrency.checkHash(val);\n}\n\nfunction isValidIndex(val: number) {\n  return nanocurrency.checkIndex(val);\n}\n\nfunction isValidSignature(val: string) {\n  return nanocurrency.checkSignature(val);\n}\n\nfunction isValidWork(val: string) {\n  return nanocurrency.checkWork(val);\n}\n\nfunction validateWork(blockHash: string, threshold: string, work: string) {\n  return nanocurrency.validateWork({blockHash: blockHash, threshold: threshold, work: work});\n}\n\nfunction hashStateBlock(block: StateBlock) {\n  const balance = new BigNumber(block.balance);\n  if (balance.isNegative() || balance.isNaN()) {\n    throw new Error(`Negative or NaN balance`);\n  }\n  let balancePadded = balance.toString(16);\n  while (balancePadded.length < 32) balancePadded = '0' + balancePadded; // Left pad with 0's\n  const context = blake.blake2bInit(32, null);\n  blake.blake2bUpdate(context, hexToUint8(STATE_BLOCK_PREAMBLE));\n  blake.blake2bUpdate(context, hexToUint8(getAccountPublicKey(block.account)));\n  blake.blake2bUpdate(context, hexToUint8(block.previous));\n  blake.blake2bUpdate(context, hexToUint8(getAccountPublicKey(block.representative)));\n  blake.blake2bUpdate(context, hexToUint8(balancePadded));\n  blake.blake2bUpdate(context, hexToUint8(block.link));\n  return blake.blake2bFinal(context);\n}\n\n// Determine new difficulty from base difficulty (hexadecimal string) and a multiplier (float). Returns hex string\nexport function difficultyFromMultiplier(multiplier, base_difficulty) {\n  const big64 = new BigNumber(2).pow(64);\n  const big_multiplier = new BigNumber(multiplier);\n  const big_base = new BigNumber(base_difficulty, 16);\n  return big64.minus((big64.minus(big_base).dividedToIntegerBy(big_multiplier))).toString(16);\n}\n\n// Determine new multiplier from base difficulty (hexadecimal string) and target difficulty (hexadecimal string). Returns Number\nexport function multiplierFromDifficulty(difficulty, base_difficulty) {\n  const big64 = new BigNumber(2).pow(64);\n  const big_diff = new BigNumber(difficulty, 16);\n  const big_base = new BigNumber(base_difficulty, 16);\n  return big64.minus(big_base).dividedBy(big64.minus(big_diff)).toNumber();\n}\n\n// shuffle any array\nfunction shuffle(array) {\n  let currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction array_crop (array) {\n  const length = array.length - 1;\n  const cropped_array = new Uint8Array(length);\n  for (let i = 0; i < length; i++) {\n    cropped_array[i] = array[i + 1];\n  }\n  return cropped_array;\n}\n\nfunction equalArrays (array1, array2) {\n  if (array1.length !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < array1.length; i++) {\n    if (array1[i] !== array2[i])\treturn false;\n  }\n  return true;\n}\n\n// find the position in an array given an attribute and value\nfunction findWithAttr(array, attr, value) {\n  for (let i = 0; i < array.length; i += 1) {\n      if (array[i][attr] === value) {\n          return i;\n      }\n  }\n  return -1;\n}\n\nfunction generateSeedBytes() {\n  return nacl.randomBytes(32);\n}\n\nconst util = {\n  hex: {\n    toUint4: hexToUint4,\n    fromUint8: uint8ToHex,\n    toUint8: hexToUint8,\n    isHex: isHex,\n  },\n  uint4: {\n    toUint5: uint4ToUint5,\n    toUint8: uint4ToUint8,\n  },\n  uint5: {\n    toString: uint5ToString,\n  },\n  uint8: {\n    toUint4: uint8ToUint4,\n    fromHex: hexToUint8,\n    toHex: uint8ToHex,\n  },\n  dec: {\n    toHex: decToHex,\n  },\n  big: {\n    add: bigAdd,\n  },\n  string: {\n    isNumeric: isNumeric,\n    mnemonicToSeedSync: mnemonicToSeedSync,\n  },\n  account: {\n    generateAccountSecretKeyBytes: generateAccountSecretKeyBytes,\n    generateAccountKeyPair: generateAccountKeyPair,\n    getPublicAccountID: getPublicAccountID,\n    generateSeedBytes: generateSeedBytes,\n    getAccountPublicKey: getAccountPublicKey,\n    getAccountChecksum: getAccountChecksum,\n    setPrefix: setPrefix,\n    isValidAccount: isValidAccount,\n    isValidNanoAmount: isValidNanoAmount,\n    isValidAmount: isValidNanoAmount,\n  },\n  nano: {\n    mnanoToRaw: mnanoToRaw,\n    knanoToRaw: knanoToRaw,\n    nanoToRaw: nanoToRaw,\n    rawToMnano: rawToMnano,\n    rawToKnano: rawToKnano,\n    rawToNano: rawToNano,\n    hashStateBlock: hashStateBlock,\n    isValidSeed: isValidSeed,\n    isValidHash: isValidHash,\n    isValidIndex: isValidIndex,\n    isValidSignature: isValidSignature,\n    isValidWork: isValidWork,\n    validateWork: validateWork,\n    difficultyFromMultiplier: difficultyFromMultiplier,\n    multiplierFromDifficulty: multiplierFromDifficulty,\n  },\n  array: {\n    shuffle: shuffle,\n    findWithAttr: findWithAttr,\n    equalArrays: equalArrays\n  }\n};\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {UtilService} from './util.service';\nimport {ApiService} from './api.service';\nimport {BigNumber} from 'bignumber.js';\nimport {AddressBookService} from './address-book.service';\nimport * as CryptoJS from 'crypto-js';\nimport {WorkPoolService} from './work-pool.service';\nimport {WebsocketService} from './websocket.service';\nimport {NanoBlockService} from './nano-block.service';\nimport {NotificationService} from './notification.service';\nimport {AppSettingsService} from './app-settings.service';\nimport {PriceService} from './price.service';\nimport {LedgerService} from './ledger.service';\nimport { NoPaddingZerosPipe } from 'app/pipes/no-padding-zeros.pipe';\n\nexport type WalletType = 'seed' | 'ledger' | 'privateKey' | 'expandedKey';\n\nexport interface WalletAccount {\n  id: string;\n  frontier: string|null;\n  secret: any;\n  keyPair: any;\n  index: number;\n  balance: BigNumber;\n  pending: BigNumber;\n  balanceRaw: BigNumber;\n  pendingRaw: BigNumber;\n  balanceFiat: number;\n  pendingFiat: number;\n  addressBookName: string|null;\n  receivePow: boolean;\n}\n\nexport interface Block {\n  account: string;\n  hash: string;\n  amount: string;\n  source: string;\n}\n\nexport interface ReceivableBlockUpdate {\n  account: string;\n  sourceHash: string;\n  destinationHash: string|null;\n  hasBeenReceived: boolean;\n}\n\nexport interface FullWallet {\n  type: WalletType;\n  seedBytes: any;\n  seed: string|null;\n  balance: BigNumber;\n  pending: BigNumber;\n  balanceRaw: BigNumber;\n  pendingRaw: BigNumber;\n  balanceFiat: number;\n  pendingFiat: number;\n  hasPending: boolean;\n  updatingBalance: boolean;\n  balanceInitialized: boolean;\n  accounts: WalletAccount[];\n  selectedAccountId: string|null;\n  selectedAccount: WalletAccount|null;\n  selectedAccount$: BehaviorSubject<WalletAccount|null>;\n  locked: boolean;\n  locked$: BehaviorSubject<boolean|false>;\n  unlockModalRequested$: BehaviorSubject<boolean|false>;\n  password: string;\n  pendingBlocks: Block[];\n  pendingBlocksUpdate$: BehaviorSubject<ReceivableBlockUpdate|null>;\n  newWallet$: BehaviorSubject<boolean|false>;\n  refresh$: BehaviorSubject<boolean|false>;\n}\n\nexport interface BaseApiAccount {\n  account_version: string;\n  balance: string;\n  block_count: string;\n  frontier: string;\n  modified_timestamp: string;\n  open_block: string;\n  pending: string;\n  representative: string;\n  representative_block: string;\n  weight: string;\n}\n\nexport interface WalletApiAccount extends BaseApiAccount {\n  addressBookName?: string|null;\n  id?: string;\n}\n\n@Injectable()\nexport class WalletService {\n  nano = 1000000000000000000000000;\n  storeKey = `nanovault-wallet`;\n\n  wallet: FullWallet = {\n    type: 'seed',\n    seedBytes: null,\n    seed: '',\n    balance: new BigNumber(0),\n    pending: new BigNumber(0),\n    balanceRaw: new BigNumber(0),\n    pendingRaw: new BigNumber(0),\n    balanceFiat: 0,\n    pendingFiat: 0,\n    hasPending: false,\n    updatingBalance: false,\n    balanceInitialized: false,\n    accounts: [],\n    selectedAccountId: null,\n    selectedAccount: null,\n    selectedAccount$: new BehaviorSubject(null),\n    locked: false,\n    locked$: new BehaviorSubject(false),\n    unlockModalRequested$: new BehaviorSubject(false),\n    password: '',\n    pendingBlocks: [],\n    pendingBlocksUpdate$: new BehaviorSubject(null),\n    newWallet$: new BehaviorSubject(false),\n    refresh$: new BehaviorSubject(false),\n  };\n\n  processingPending = false;\n  successfulBlocks = [];\n  trackedHashes = [];\n\n  constructor(\n    private util: UtilService,\n    private api: ApiService,\n    private appSettings: AppSettingsService,\n    private addressBook: AddressBookService,\n    private price: PriceService,\n    private workPool: WorkPoolService,\n    private websocket: WebsocketService,\n    private nanoBlock: NanoBlockService,\n    private ledgerService: LedgerService,\n    private noZerosPipe: NoPaddingZerosPipe,\n    private notifications: NotificationService) {\n    this.websocket.newTransactions$.subscribe(async (transaction) => {\n      if (!transaction) return; // Not really a new transaction\n      console.log('New Transaction', transaction);\n      let shouldNotify = false;\n      if (this.appSettings.settings.minimumReceive) {\n        const minAmount = this.util.nano.mnanoToRaw(this.appSettings.settings.minimumReceive);\n        if ((new BigNumber(transaction.amount)).gte(minAmount)) {\n          shouldNotify = true;\n        }\n      } else {\n        shouldNotify = true;\n      }\n\n      const walletAccountIDs = this.wallet.accounts.map(a => a.id);\n\n      // If an incoming pending\n      if (transaction.block.type === 'state' && transaction.block.subtype === 'send'\n      && walletAccountIDs.indexOf(transaction.block.link_as_account) !== -1) {\n        if (shouldNotify) {\n          if (this.wallet.locked && this.appSettings.settings.pendingOption !== 'manual') {\n            this.notifications.sendWarning(`New incoming transaction - Unlock the wallet to receive`, { length: 10000, identifier: 'pending-locked' });\n          } else if (this.appSettings.settings.pendingOption === 'manual') {\n            this.notifications.sendWarning(`New incoming transaction - Set to be received manually`, { length: 10000, identifier: 'pending-locked' });\n          }\n        } else {\n          console.log(\n            `Found new incoming block that was below minimum receive amount: `,\n            transaction.amount,\n            this.appSettings.settings.minimumReceive\n          );\n        }\n        await this.processStateBlock(transaction);\n\n        // If a confirmed outgoing transaction\n      } else if (transaction.block.type === 'state' && transaction.block.subtype === 'send'\n      && walletAccountIDs.indexOf(transaction.block.account) !== -1) {\n        shouldNotify = true;\n        await this.processStateBlock(transaction);\n      }\n\n      // Find if the source or destination is a tracked address in the address book\n      // This is a send transaction (to tracked account or from tracked account)\n      if (walletAccountIDs.indexOf(transaction.block.link_as_account) === -1 && transaction.block.type === 'state' &&\n      (transaction.block.subtype === 'send' || transaction.block.subtype === 'receive') || transaction.block.subtype === 'change' &&\n      (this.addressBook.getTransactionTrackingById(transaction.block.link_as_account) ||\n      this.addressBook.getTransactionTrackingById(transaction.block.account))) {\n        if (shouldNotify || transaction.block.subtype === 'change') {\n          const trackedAmount = this.util.nano.rawToMnano(transaction.amount);\n          // Save hash so we can ignore duplicate messages if subscribing to both send and receive\n          if (this.trackedHashes.indexOf(transaction.hash) !== -1) return; // Already notified this block\n          this.trackedHashes.push(transaction.hash);\n          const addressLink = transaction.block.link_as_account;\n          const address = transaction.block.account;\n          const rep = transaction.block.representative;\n          const accountHrefLink = `<a href=\"/account/${addressLink}\">${this.addressBook.getAccountName(addressLink)}</a>`;\n          const accountHref = `<a href=\"/account/${address}\">${this.addressBook.getAccountName(address)}</a>`;\n\n          if (transaction.block.subtype === 'send') {\n            // Incoming transaction\n            if (this.addressBook.getTransactionTrackingById(addressLink)) {\n              this.notifications.sendInfo(`Tracked address ${accountHrefLink} can now receive ${trackedAmount} XNO`, { length: 10000 });\n              console.log(`Tracked incoming block to: ${address} - Ӿ${trackedAmount}`);\n            }\n            // Outgoing transaction\n            if (this.addressBook.getTransactionTrackingById(address)) {\n              this.notifications.sendInfo(`Tracked address ${accountHref} sent ${trackedAmount} XNO`, { length: 10000 });\n              console.log(`Tracked send block from: ${address} - Ӿ${trackedAmount}`);\n            }\n          } else if (transaction.block.subtype === 'receive' && this.addressBook.getTransactionTrackingById(address)) {\n            // Receive transaction\n            this.notifications.sendInfo(`Tracked address ${accountHref} received incoming ${trackedAmount} XNO`, { length: 10000 });\n            console.log(`Tracked receive block to: ${address} - Ӿ${trackedAmount}`);\n          } else if (transaction.block.subtype === 'change' && this.addressBook.getTransactionTrackingById(address)) {\n            // Change transaction\n            this.notifications.sendInfo(`Tracked address ${accountHref} changed its representative to ${rep}`, { length: 10000 });\n            console.log(`Tracked change block of: ${address} - Rep: ${rep}`);\n          }\n        } else {\n          console.log(\n            `Found new transaction on watch-only account that was below minimum receive amount: `,\n            transaction.amount,\n            this.appSettings.settings.minimumReceive\n          );\n        }\n      }\n\n      // TODO: We don't really need to call to update balances, we should be able to balance on our own from here\n      // I'm not sure about that because what happens if the websocket is disconnected and misses a transaction?\n      // won't the balance be incorrect if relying only on the websocket? / Json\n\n      // Only reload balance if the incoming is to an internal wallet (to avoid RPC spam)\n      if (shouldNotify && walletAccountIDs.indexOf(transaction.block.link_as_account) !== -1) {\n        await this.reloadBalances();\n      }\n    });\n\n    this.addressBook.addressBook$.subscribe(newAddressBook => {\n      this.reloadAddressBook();\n    });\n  }\n\n  async processStateBlock(transaction) {\n    // If we have a minimum receive,  once we know the account... add the amount to wallet pending? set pending to true\n    if (transaction.block.subtype === 'send' && transaction.block.link_as_account) {\n      // This is an incoming send block, we want to perform a receive\n      const walletAccount = this.wallet.accounts.find(a => a.id === transaction.block.link_as_account);\n      if (!walletAccount) return; // Not for our wallet?\n\n      const txAmount = new BigNumber(transaction.amount);\n      let aboveMinimumReceive = true;\n\n      if (this.appSettings.settings.minimumReceive) {\n        const minAmount = this.util.nano.mnanoToRaw(this.appSettings.settings.minimumReceive);\n        aboveMinimumReceive = txAmount.gte(minAmount);\n      }\n\n      if (aboveMinimumReceive === true) {\n        const isNewBlock = this.addPendingBlock(walletAccount.id, transaction.hash, txAmount, transaction.account);\n\n        if (isNewBlock === true) {\n          this.wallet.pending = this.wallet.pending.plus(txAmount);\n          this.wallet.pendingRaw = this.wallet.pendingRaw.plus(txAmount.mod(this.nano));\n          this.wallet.pendingFiat += this.util.nano.rawToMnano(txAmount).times(this.price.price.lastPrice).toNumber();\n          this.wallet.hasPending = true;\n        }\n      }\n\n      await this.processPendingBlocks();\n    } else {\n      // Not a send to us, which means it was a block posted by us.  We shouldnt need to do anything...\n      const walletAccount = this.wallet.accounts.find(a => a.id === transaction.block.link_as_account);\n      if (!walletAccount) return; // Not for our wallet?\n    }\n  }\n\n  reloadAddressBook() {\n    this.wallet.accounts.forEach(account => {\n      account.addressBookName = this.addressBook.getAccountName(account.id);\n    });\n  }\n\n  getWalletAccount(accountID) {\n    return this.wallet.accounts.find(a => a.id === accountID);\n  }\n\n\n  async patchOldSavedData() {\n    // Look for saved accounts using an xrb_ prefix\n    const walletData = localStorage.getItem(this.storeKey);\n    if (!walletData) return;\n\n    const walletJson = JSON.parse(walletData);\n\n    if (walletJson.accounts) {\n      const newAccounts = walletJson.accounts.map(account => {\n        if (account.id.indexOf('xrb_') !== -1) {\n          account.id = account.id.replace('xrb_', 'nano_');\n        }\n        return account;\n      });\n\n      walletJson.accounts = newAccounts;\n    }\n\n    localStorage.setItem(this.storeKey, JSON.stringify(walletJson));\n\n    return;\n  }\n\n  async loadStoredWallet() {\n    this.resetWallet();\n\n    const walletData = localStorage.getItem(this.storeKey);\n    if (!walletData) return this.wallet;\n\n    const walletJson = JSON.parse(walletData);\n    const walletType = walletJson.type || 'seed';\n    this.wallet.type = walletType;\n    if (walletType === 'seed' || walletType === 'privateKey' || walletType === 'expandedKey') {\n      this.wallet.seed = walletJson.seed;\n      this.wallet.seedBytes = this.util.hex.toUint8(walletJson.seed);\n      this.wallet.locked = true;\n      this.wallet.locked$.next(true);\n    }\n    if (walletType === 'ledger') {\n      // Check ledger status?\n    }\n\n    if (walletJson.accounts && walletJson.accounts.length) {\n      walletJson.accounts.forEach(account => this.loadWalletAccount(account.index, account.id));\n    }\n\n    this.wallet.selectedAccountId = walletJson.selectedAccountId || null;\n\n    return this.wallet;\n  }\n\n  // Using full list of indexes is the latest standard with back compatability with accountsIndex\n  async loadImportedWallet(seed: string, password: string, accountsIndex: number, indexes: Array<number>, walletType: WalletType) {\n    this.resetWallet();\n\n    this.wallet.seed = seed;\n    this.wallet.seedBytes = this.util.hex.toUint8(seed);\n    this.wallet.password = password;\n    this.wallet.type = walletType;\n\n    if (walletType === 'seed') {\n      // Old method\n      if (accountsIndex > 0) {\n        for (let i = 0; i < accountsIndex; i++) {\n          await this.addWalletAccount(i, false);\n        }\n      } else if (indexes) {\n        // New method (the promise ensures all wallets have been added before moving on)\n        await Promise.all(indexes.map(async (i) => {\n          await this.addWalletAccount(i, false);\n        }));\n      } else return false;\n    } else if (walletType === 'privateKey' || walletType === 'expandedKey') {\n      this.wallet.accounts.push(this.createSingleKeyAccount(walletType === 'expandedKey'));\n    } else { // invalid wallet type\n      return false;\n    }\n\n    await this.reloadBalances();\n\n    if (this.wallet.accounts.length) {\n      this.websocket.subscribeAccounts(this.wallet.accounts.map(a => a.id));\n    }\n\n    return true;\n  }\n\n  generateExportData() {\n    const exportData: any = {\n      indexes: this.wallet.accounts.map(a => a.index),\n    };\n    let secret = '';\n    if (this.wallet.locked) {\n      secret = this.wallet.seed;\n    } else {\n      secret = CryptoJS.AES.encrypt(this.wallet.seed, this.wallet.password).toString();\n    }\n\n    if (this.wallet.type === 'seed') {\n      exportData.seed = secret;\n    } else if (this.wallet.type === 'privateKey') {\n      exportData.privateKey = secret;\n    } else if (this.wallet.type === 'expandedKey') {\n      exportData.expandedKey = secret;\n    }\n\n    return exportData;\n  }\n\n  generateExportUrl() {\n    const exportData = this.generateExportData();\n    const base64Data = btoa(JSON.stringify(exportData));\n\n    return `https://nault.pro/import-wallet#${base64Data}`;\n    // return `https://nault.cc/import-wallet#${base64Data}`;\n  }\n\n  lockWallet() {\n    if (!this.wallet.seed || !this.wallet.password) return; // Nothing to lock, password not set\n    const encryptedSeed = CryptoJS.AES.encrypt(this.wallet.seed, this.wallet.password);\n\n    // Update the seed\n    this.wallet.seed = encryptedSeed.toString();\n    this.wallet.seedBytes = null;\n\n    // Remove secrets from accounts\n    this.wallet.accounts.forEach(a => {\n      a.keyPair = null;\n      a.secret = null;\n    });\n\n    this.wallet.locked = true;\n    this.wallet.locked$.next(true);\n    this.wallet.password = '';\n\n    this.saveWalletExport(); // Save so that a refresh gives you a locked wallet\n\n    return true;\n  }\n  unlockWallet(password: string) {\n    try {\n      const decryptedBytes = CryptoJS.AES.decrypt(this.wallet.seed, password);\n      const decryptedSeed = decryptedBytes.toString(CryptoJS.enc.Utf8);\n      if (!decryptedSeed || decryptedSeed.length !== 64) return false;\n\n      this.wallet.seed = decryptedSeed;\n      this.wallet.seedBytes = this.util.hex.toUint8(this.wallet.seed);\n      this.wallet.accounts.forEach(a => {\n        if (this.wallet.type === 'seed') {\n          a.secret = this.util.account.generateAccountSecretKeyBytes(this.wallet.seedBytes, a.index);\n        } else {\n          a.secret = this.wallet.seedBytes;\n        }\n        a.keyPair = this.util.account.generateAccountKeyPair(a.secret, this.wallet.type === 'expandedKey');\n      });\n\n      this.wallet.locked = false;\n      this.wallet.locked$.next(false);\n      this.wallet.password = password;\n\n      this.notifications.removeNotification('pending-locked'); // If there is a notification to unlock, remove it\n\n      // Process any pending blocks\n      this.processPendingBlocks();\n\n      this.saveWalletExport(); // Save so a refresh also gives you your unlocked wallet?\n\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  async createWalletFromSeed(seed: string) {\n    this.resetWallet();\n\n    this.wallet.seed = seed;\n    this.wallet.seedBytes = this.util.hex.toUint8(seed);\n\n    await this.scanAccounts();\n  }\n\n  async scanAccounts() {\n    const usedIndices = [];\n\n    const NAULT_ACCOUNTS_LIMIT = 20;\n    const ACCOUNTS_PER_API_REQUEST = 10;\n\n    const batchesCount = NAULT_ACCOUNTS_LIMIT / ACCOUNTS_PER_API_REQUEST;\n\n    // Getting accounts...\n    for (let batchIdx = 0; batchIdx < batchesCount; batchIdx++) {\n      const batchAccounts = {};\n      const batchAccountsArray = [];\n      for (let i = 0; i < ACCOUNTS_PER_API_REQUEST; i++) {\n        const index = batchIdx * ACCOUNTS_PER_API_REQUEST + i;\n\n        let accountAddress = '';\n        let accountPublicKey = '';\n\n        if (this.wallet.type === 'seed') {\n          const accountBytes = this.util.account.generateAccountSecretKeyBytes(this.wallet.seedBytes, index);\n          const accountKeyPair = this.util.account.generateAccountKeyPair(accountBytes);\n          accountPublicKey = this.util.uint8.toHex(accountKeyPair.publicKey).toUpperCase();\n          accountAddress = this.util.account.getPublicAccountID(accountKeyPair.publicKey);\n\n        } else if (this.wallet.type === 'ledger') {\n          const account: any = await this.ledgerService.getLedgerAccount(index);\n          accountAddress = account.address.replace('xrb_', 'nano_');\n          accountPublicKey = account.publicKey.toUpperCase();\n\n        } else {\n          return false;\n        }\n\n        batchAccounts[accountAddress] = {\n          index: index,\n          publicKey: accountPublicKey,\n        };\n        batchAccountsArray.push(accountAddress);\n      }\n\n      // Checking frontiers...\n      const batchResponse = await this.api.accountsFrontiers(batchAccountsArray);\n      if (batchResponse) {\n        for (const accountID in batchResponse.frontiers) {\n          if (batchResponse.frontiers.hasOwnProperty(accountID)) {\n            const frontier = batchResponse.frontiers[accountID];\n            const frontierIsValidHash = this.util.nano.isValidHash(frontier);\n\n            if (frontierIsValidHash === true) {\n              if (frontier !== batchAccounts[accountID].publicKey) {\n                usedIndices.push(batchAccounts[accountID].index);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Add accounts\n    if (usedIndices.length > 0) {\n      for (const index of usedIndices) {\n        await this.addWalletAccount(index, false);\n      }\n    } else {\n      await this.addWalletAccount(0, false);\n    }\n\n    // Reload balances for all accounts\n    this.reloadBalances();\n  }\n\n  createNewWallet(seed: string) {\n    this.resetWallet();\n\n    this.wallet.seedBytes = this.util.hex.toUint8(seed);\n    this.wallet.seed = seed;\n\n    this.addWalletAccount();\n\n    return this.wallet.seed;\n  }\n\n  async createLedgerWallet() {\n    // this.resetWallet(); Now done earlier to ensure user not sending to wrong account\n\n    this.wallet.type = 'ledger';\n\n    await this.scanAccounts();\n\n    return this.wallet;\n  }\n\n  async createWalletFromSingleKey(key: string, expanded: boolean) {\n    this.resetWallet();\n\n    this.wallet.type = expanded ? 'expandedKey' : 'privateKey';\n    this.wallet.seed = key;\n    this.wallet.seedBytes = this.util.hex.toUint8(key);\n\n    this.wallet.accounts.push(this.createSingleKeyAccount(expanded));\n    await this.reloadBalances();\n    this.saveWalletExport();\n  }\n\n  async createLedgerAccount(index) {\n    const account: any = await this.ledgerService.getLedgerAccount(index);\n\n    const accountID = account.address;\n    const nanoAccountID = accountID.replace('xrb_', 'nano_');\n    const addressBookName = this.addressBook.getAccountName(nanoAccountID);\n\n    const newAccount: WalletAccount = {\n      id: nanoAccountID,\n      frontier: null,\n      secret: null,\n      keyPair: null,\n      balance: new BigNumber(0),\n      pending: new BigNumber(0),\n      balanceRaw: new BigNumber(0),\n      pendingRaw: new BigNumber(0),\n      balanceFiat: 0,\n      pendingFiat: 0,\n      index: index,\n      addressBookName,\n      receivePow: false,\n    };\n\n    return newAccount;\n  }\n\n  createKeyedAccount(index, accountBytes, accountKeyPair) {\n    const accountName = this.util.account.getPublicAccountID(accountKeyPair.publicKey);\n    const addressBookName = this.addressBook.getAccountName(accountName);\n\n    const newAccount: WalletAccount = {\n      id: accountName,\n      frontier: null,\n      secret: accountBytes,\n      keyPair: accountKeyPair,\n      balance: new BigNumber(0),\n      pending: new BigNumber(0),\n      balanceRaw: new BigNumber(0),\n      pendingRaw: new BigNumber(0),\n      balanceFiat: 0,\n      pendingFiat: 0,\n      index: index,\n      addressBookName,\n      receivePow: false,\n    };\n\n    return newAccount;\n  }\n\n  async createSeedAccount(index) {\n    const accountBytes = this.util.account.generateAccountSecretKeyBytes(this.wallet.seedBytes, index);\n    const accountKeyPair = this.util.account.generateAccountKeyPair(accountBytes);\n    return this.createKeyedAccount(index, accountBytes, accountKeyPair);\n  }\n\n  createSingleKeyAccount(expanded: boolean) {\n    const accountBytes = this.wallet.seedBytes;\n    const accountKeyPair = this.util.account.generateAccountKeyPair(accountBytes, expanded);\n    return this.createKeyedAccount(0, accountBytes, accountKeyPair);\n  }\n\n  /**\n   * Reset wallet to a base state, without changing reference to the main object\n   */\n  resetWallet() {\n    if (this.wallet.accounts.length) {\n      this.websocket.unsubscribeAccounts(this.wallet.accounts.map(a => a.id)); // Unsubscribe from old accounts\n    }\n    this.wallet.type = 'seed';\n    this.wallet.password = '';\n    this.wallet.locked = false;\n    this.wallet.locked$.next(false);\n    this.wallet.seed = '';\n    this.wallet.seedBytes = null;\n    this.wallet.accounts = [];\n    this.wallet.balance = new BigNumber(0);\n    this.wallet.pending = new BigNumber(0);\n    this.wallet.balanceRaw = new BigNumber(0);\n    this.wallet.pendingRaw = new BigNumber(0);\n    this.wallet.balanceFiat = 0;\n    this.wallet.pendingFiat = 0;\n    this.wallet.hasPending = false;\n    this.wallet.selectedAccountId = null;\n    this.wallet.selectedAccount = null;\n    this.wallet.selectedAccount$.next(null);\n    this.wallet.pendingBlocks = [];\n  }\n\n  isConfigured() {\n    switch (this.wallet.type) {\n      case 'privateKey':\n      case 'expandedKey':\n      case 'seed': return !!this.wallet.seed;\n      case 'ledger': return true;\n    }\n  }\n\n  isLocked() {\n    switch (this.wallet.type) {\n      case 'privateKey':\n      case 'expandedKey':\n      case 'seed': return this.wallet.locked;\n      case 'ledger': return false;\n    }\n  }\n\n  isLedgerWallet() {\n    return this.wallet.type === 'ledger';\n  }\n\n  isSingleKeyWallet() {\n    return (this.wallet.type === 'privateKey' || this.wallet.type === 'expandedKey');\n  }\n\n  hasPendingTransactions() {\n    return this.wallet.hasPending;\n    // if (this.appSettings.settings.minimumReceive) {\n    //   return this.wallet.hasPending;\n    // } else {\n    //   return this.wallet.pendingRaw.gt(0);\n    // }\n  }\n\n  reloadFiatBalances() {\n    const fiatPrice = this.price.price.lastPrice;\n\n    this.wallet.accounts.forEach(account => {\n      account.balanceFiat = this.util.nano.rawToMnano(account.balance).times(fiatPrice).toNumber();\n      account.pendingFiat = this.util.nano.rawToMnano(account.pending).times(fiatPrice).toNumber();\n    });\n\n    this.wallet.balanceFiat = this.util.nano.rawToMnano(this.wallet.balance).times(fiatPrice).toNumber();\n    this.wallet.pendingFiat = this.util.nano.rawToMnano(this.wallet.pending).times(fiatPrice).toNumber();\n  }\n\n  resetBalances() {\n    this.wallet.balance = new BigNumber(0);\n    this.wallet.pending = new BigNumber(0);\n    this.wallet.balanceRaw = new BigNumber(0);\n    this.wallet.pendingRaw = new BigNumber(0);\n    this.wallet.balanceFiat = 0;\n    this.wallet.pendingFiat = 0;\n    this.wallet.hasPending = false;\n  }\n\n  async reloadBalances() {\n    // to block two reloads to happen at the same time (websocket)\n    if (this.wallet.updatingBalance) return;\n\n    this.wallet.updatingBalance = true;\n    const fiatPrice = this.price.price.lastPrice;\n\n    const accountIDs = this.wallet.accounts.map(a => a.id);\n    const accounts = await this.api.accountsBalances(accountIDs);\n    const frontiers = await this.api.accountsFrontiers(accountIDs);\n    // const allFrontiers = [];\n    // for (const account in frontiers.frontiers) {\n    //   allFrontiers.push({ account, frontier: frontiers.frontiers[account] });\n    // }\n    // const frontierBlocks = await this.api.blocksInfo(allFrontiers.map(f => f.frontier));\n\n    let walletBalance = new BigNumber(0);\n    let walletPendingInclUnconfirmed = new BigNumber(0);\n    let walletPendingAboveThresholdConfirmed = new BigNumber(0);\n\n    if (!accounts) {\n      this.resetBalances();\n      this.wallet.updatingBalance = false;\n      this.wallet.balanceInitialized = true;\n      return;\n    }\n\n    this.clearPendingBlocks();\n\n    for (const accountID in accounts.balances) {\n      if (!accounts.balances.hasOwnProperty(accountID)) continue;\n\n      const walletAccount = this.wallet.accounts.find(a => a.id === accountID);\n\n      if (!walletAccount) continue;\n\n      walletAccount.balance = new BigNumber(accounts.balances[accountID].balance);\n      const accountBalancePendingInclUnconfirmed = new BigNumber(accounts.balances[accountID].pending);\n\n      walletAccount.balanceRaw = new BigNumber(walletAccount.balance).mod(this.nano);\n\n      walletAccount.balanceFiat = this.util.nano.rawToMnano(walletAccount.balance).times(fiatPrice).toNumber();\n\n      const walletAccountFrontier = frontiers.frontiers?.[accountID];\n      const walletAccountFrontierIsValidHash = this.util.nano.isValidHash(walletAccountFrontier);\n\n      walletAccount.frontier = (\n          (walletAccountFrontierIsValidHash === true)\n        ? walletAccountFrontier\n        : null\n      );\n\n      walletBalance = walletBalance.plus(walletAccount.balance);\n      walletPendingInclUnconfirmed = walletPendingInclUnconfirmed.plus(accountBalancePendingInclUnconfirmed);\n    }\n\n    if (walletPendingInclUnconfirmed.gt(0)) {\n      let pending;\n\n      if (this.appSettings.settings.minimumReceive) {\n        const minAmount = this.util.nano.mnanoToRaw(this.appSettings.settings.minimumReceive);\n        pending = await this.api.accountsPendingLimitSorted(this.wallet.accounts.map(a => a.id), minAmount.toString(10));\n      } else {\n        pending = await this.api.accountsPendingSorted(this.wallet.accounts.map(a => a.id));\n      }\n\n      if (pending && pending.blocks) {\n        for (const block in pending.blocks) {\n          if (!pending.blocks.hasOwnProperty(block)) {\n            continue;\n          }\n\n          const walletAccount = this.wallet.accounts.find(a => a.id === block);\n\n          if (pending.blocks[block]) {\n            let accountPending = new BigNumber(0);\n\n            for (const hash in pending.blocks[block]) {\n              if (!pending.blocks[block].hasOwnProperty(hash)) {\n                continue;\n              }\n\n              const isNewBlock =\n                this.addPendingBlock(\n                  walletAccount.id,\n                  hash,\n                  pending.blocks[block][hash].amount,\n                  pending.blocks[block][hash].source\n                );\n\n              if (isNewBlock === true) {\n                accountPending = accountPending.plus(pending.blocks[block][hash].amount);\n                walletPendingAboveThresholdConfirmed = walletPendingAboveThresholdConfirmed.plus(pending.blocks[block][hash].amount);\n              }\n            }\n\n            walletAccount.pending = accountPending;\n            walletAccount.pendingRaw = accountPending.mod(this.nano);\n            walletAccount.pendingFiat = this.util.nano.rawToMnano(accountPending).times(fiatPrice).toNumber();\n\n            // If there is a pending, it means we want to add to work cache as receive-threshold\n            if (walletAccount.pending.gt(0)) {\n              console.log('Adding single pending account within limit to work cache');\n              // Use frontier or public key if open block\n              const hash = walletAccount.frontier || this.util.account.getAccountPublicKey(walletAccount.id);\n              // Technically should be 1/64 multiplier here but since we don't know if the pending will be received before\n              // a send or change block is made it's safer to use 1x PoW threshold to be sure the cache will work.\n              // On the other hand, it may be more efficient to use 1/64 and simply let the work cache rework\n              // in case a send is made instead. The typical user scenario would be to let the wallet auto receive first\n              this.workPool.addWorkToCache(hash, 1 / 64);\n              walletAccount.receivePow = true;\n            } else {\n              walletAccount.receivePow = false;\n            }\n          } else {\n            walletAccount.pending = new BigNumber(0);\n            walletAccount.pendingRaw = new BigNumber(0);\n            walletAccount.pendingFiat = 0;\n            walletAccount.receivePow = false;\n          }\n        }\n      }\n    } else {\n      // Not clearing those values to zero earlier to avoid zero values while blocks are being loaded\n      for (const accountID in accounts.balances) {\n        if (!accounts.balances.hasOwnProperty(accountID)) continue;\n        const walletAccount = this.wallet.accounts.find(a => a.id === accountID);\n        if (!walletAccount) continue;\n        walletAccount.pending = new BigNumber(0);\n        walletAccount.pendingRaw = new BigNumber(0);\n        walletAccount.pendingFiat = 0;\n        walletAccount.receivePow = false;\n      }\n    }\n\n    // Make sure any frontiers are in the work pool\n    // If they have no frontier, we want to use their pub key?\n    const hashes = this.wallet.accounts.filter(account => (account.receivePow === false)).\n      map(account => account.frontier || this.util.account.getAccountPublicKey(account.id));\n    console.log('Adding non-pending frontiers to work cache');\n    hashes.forEach(hash => this.workPool.addWorkToCache(hash, 1)); // use high pow here since we don't know what tx type will be next\n\n    this.wallet.balance = walletBalance;\n    this.wallet.pending = walletPendingAboveThresholdConfirmed;\n\n    this.wallet.balanceRaw = new BigNumber(walletBalance).mod(this.nano);\n    this.wallet.pendingRaw = new BigNumber(walletPendingAboveThresholdConfirmed).mod(this.nano);\n\n    this.wallet.balanceFiat = this.util.nano.rawToMnano(walletBalance).times(fiatPrice).toNumber();\n    this.wallet.pendingFiat = this.util.nano.rawToMnano(walletPendingAboveThresholdConfirmed).times(fiatPrice).toNumber();\n\n    // eslint-disable-next-line\n    this.wallet.hasPending = walletPendingAboveThresholdConfirmed.gt(0);\n\n    this.wallet.updatingBalance = false;\n    this.wallet.balanceInitialized = true;\n\n    if (this.wallet.pendingBlocks.length) {\n      await this.processPendingBlocks();\n    }\n    this.informBalanceRefresh();\n  }\n\n  async loadWalletAccount(accountIndex, accountID) {\n    const index = accountIndex;\n    const addressBookName = this.addressBook.getAccountName(accountID);\n\n    const newAccount: WalletAccount = {\n      id: accountID,\n      frontier: null,\n      secret: null,\n      keyPair: null,\n      balance: new BigNumber(0),\n      pending: new BigNumber(0),\n      balanceRaw: new BigNumber(0),\n      pendingRaw: new BigNumber(0),\n      balanceFiat: 0,\n      pendingFiat: 0,\n      index: index,\n      addressBookName,\n      receivePow: false,\n    };\n\n    this.wallet.accounts.push(newAccount);\n    this.websocket.subscribeAccounts([accountID]);\n\n    return newAccount;\n  }\n\n  async addWalletAccount(accountIndex: number|null = null, reloadBalances: boolean = true) {\n    // if (!this.wallet.seedBytes) return;\n    let index = accountIndex;\n    if (index === null) {\n      index = 0; // Use the existing number, then increment it\n\n      // Make sure the index is not being used (ie. if you delete acct 3/5, then press add twice, it goes 3, 6, 7)\n      while (this.wallet.accounts.find(a => a.index === index)) index++;\n    }\n\n    let newAccount: WalletAccount|null;\n\n    if (this.isSingleKeyWallet()) {\n      throw new Error(`Wallet consists of a single private key.`);\n    } else if (this.wallet.type === 'seed') {\n      newAccount = await this.createSeedAccount(index);\n    } else if (this.isLedgerWallet()) {\n      try {\n        newAccount = await this.createLedgerAccount(index);\n      } catch (err) {\n        // this.notifications.sendWarning(`Unable to load account from ledger.  Make sure it is connected`);\n        throw err;\n      }\n\n    }\n\n    this.wallet.accounts.push(newAccount);\n\n    if (reloadBalances) await this.reloadBalances();\n\n    this.websocket.subscribeAccounts([newAccount.id]);\n\n    this.saveWalletExport();\n\n    return newAccount;\n  }\n\n  async removeWalletAccount(accountID: string) {\n    const walletAccount = this.getWalletAccount(accountID);\n    if (!walletAccount) throw new Error(`Account is not in wallet`);\n\n    const walletAccountIndex = this.wallet.accounts.findIndex(a => a.id === accountID);\n    if (walletAccountIndex === -1) throw new Error(`Account is not in wallet`);\n\n    this.wallet.accounts.splice(walletAccountIndex, 1);\n\n    this.websocket.unsubscribeAccounts([accountID]);\n\n    // Reload the balances, save new wallet state\n    await this.reloadBalances();\n    this.saveWalletExport();\n\n    return true;\n  }\n\n  async trackAddress(address: string) {\n    this.websocket.subscribeAccounts([address]);\n    console.log('Tracking transactions on ' + address);\n  }\n\n  async untrackAddress(address: string) {\n    this.websocket.unsubscribeAccounts([address]);\n    console.log('Stopped tracking transactions on ' + address);\n  }\n\n  addPendingBlock(accountID, blockHash, amount, source) {\n    if (this.successfulBlocks.indexOf(blockHash) !== -1) return false; // Already successful with this block\n\n    const existingHash = this.wallet.pendingBlocks.find(b => b.hash === blockHash);\n\n    if (existingHash) return false; // Already added\n\n    this.wallet.pendingBlocks.push({ account: accountID, hash: blockHash, amount: amount, source: source });\n    this.wallet.pendingBlocksUpdate$.next({\n      account: accountID,\n      sourceHash: blockHash,\n      destinationHash: null,\n      hasBeenReceived: false,\n    });\n    this.wallet.pendingBlocksUpdate$.next(null);\n    return true;\n  }\n\n  // Remove a pending account from the pending list\n  async removePendingBlock(blockHash) {\n    const index = this.wallet.pendingBlocks.findIndex(b => b.hash === blockHash);\n    this.wallet.pendingBlocks.splice(index, 1);\n  }\n\n  // Clear the list of pending blocks\n  async clearPendingBlocks() {\n    this.wallet.pendingBlocks.splice(0, this.wallet.pendingBlocks.length);\n  }\n\n  sortByAmount(a, b) {\n    const x = new BigNumber(a.amount);\n    const y = new BigNumber(b.amount);\n    return y.comparedTo(x);\n  }\n\n  async processPendingBlocks() {\n    if (this.processingPending || this.wallet.locked || !this.wallet.pendingBlocks.length || this.appSettings.settings.pendingOption === 'manual') return;\n\n    // Sort pending by amount\n    if (this.appSettings.settings.pendingOption === 'amount') {\n      this.wallet.pendingBlocks.sort(this.sortByAmount);\n    }\n\n    this.processingPending = true;\n\n    const nextBlock = this.wallet.pendingBlocks[0];\n    if (this.successfulBlocks.find(b => b.hash === nextBlock.hash)) {\n      return setTimeout(() => this.processPendingBlocks(), 1500); // Block has already been processed\n    }\n    const walletAccount = this.getWalletAccount(nextBlock.account);\n    if (!walletAccount) {\n      this.processingPending = false;\n      return; // Dispose of the block, no matching account\n    }\n\n    const newHash = await this.nanoBlock.generateReceive(walletAccount, nextBlock.hash, this.isLedgerWallet());\n    if (newHash) {\n      if (this.successfulBlocks.length >= 15) this.successfulBlocks.shift();\n      this.successfulBlocks.push(nextBlock.hash);\n\n      const receiveAmount = this.util.nano.rawToMnano(nextBlock.amount);\n      this.notifications.removeNotification('success-receive');\n      this.notifications.sendSuccess(`Successfully received ${receiveAmount.isZero() ? '' : this.noZerosPipe.transform(receiveAmount.toFixed(6)) } XNO!`, { identifier: 'success-receive' });\n\n      // remove after processing\n      // list also updated with reloadBalances but not if called too fast\n      this.removePendingBlock(nextBlock.hash);\n      await this.reloadBalances();\n      this.wallet.pendingBlocksUpdate$.next({\n        account: nextBlock.account,\n        sourceHash: nextBlock.hash,\n        destinationHash: newHash,\n        hasBeenReceived: true,\n      });\n      this.wallet.pendingBlocksUpdate$.next(null);\n    } else {\n      if (this.isLedgerWallet()) {\n        this.processingPending = false;\n        return null; // Denied to receive, stop processing\n      }\n      this.processingPending = false;\n      // return this.notifications.sendError(`There was a problem receiving the transaction, try manually!`, {length: 10000});\n    }\n\n    this.processingPending = false;\n\n    setTimeout(() => this.processPendingBlocks(), 1500);\n  }\n\n  saveWalletExport() {\n    const exportData = this.generateWalletExport();\n\n    switch (this.appSettings.settings.walletStore) {\n      case 'none':\n        this.removeWalletData();\n        break;\n      default:\n      case 'localStorage':\n        localStorage.setItem(this.storeKey, JSON.stringify(exportData));\n        break;\n    }\n  }\n\n  removeWalletData() {\n    localStorage.removeItem(this.storeKey);\n  }\n\n  generateWalletExport() {\n    const data: any = {\n      type: this.wallet.type,\n      accounts: this.wallet.accounts.map(a => ({ id: a.id, index: a.index })),\n      selectedAccountId: this.wallet.selectedAccount ? this.wallet.selectedAccount.id : null,\n    };\n\n    if (this.wallet.type === 'ledger') {\n    } else {\n      // Forcefully encrypt the seed so an unlocked wallet is never saved\n      if (!this.wallet.locked) {\n        const encryptedSeed = CryptoJS.AES.encrypt(this.wallet.seed, this.wallet.password || '');\n        data.seed = encryptedSeed.toString();\n      } else {\n        data.seed = this.wallet.seed;\n      }\n      data.locked = true;\n    }\n\n    return data;\n  }\n\n  // Run an accountInfo call for each account in the wallet to get their representatives\n  async getAccountsDetails(): Promise<WalletApiAccount[]> {\n    return await Promise.all(\n      this.wallet.accounts.map(account =>\n        this.api.accountInfo(account.id)\n          .then(res => {\n            try {\n              res.id = account.id;\n              res.addressBookName = account.addressBookName;\n            } catch {return null; }\n\n            return res;\n          })\n      )\n    );\n  }\n\n  // Subscribable event when a new wallet is created\n  informNewWallet() {\n    this.wallet.newWallet$.next(true);\n    this.wallet.newWallet$.next(false);\n  }\n\n  // Subscribable event when balances has been refreshed\n  informBalanceRefresh() {\n    this.wallet.refresh$.next(true);\n    this.wallet.refresh$.next(false);\n  }\n\n  requestWalletUnlock() {\n    this.wallet.unlockModalRequested$.next(true);\n\n    return new Promise(\n      (resolve, reject) => {\n        let subscriptionForUnlock;\n        let subscriptionForCancel;\n\n        const removeSubscriptions = () => {\n          if (subscriptionForUnlock != null) {\n            subscriptionForUnlock.unsubscribe();\n          }\n\n          if (subscriptionForCancel != null) {\n            subscriptionForCancel.unsubscribe();\n          }\n        };\n\n        subscriptionForUnlock =\n          this.wallet.locked$.subscribe(async isLocked => {\n            if (isLocked === false) {\n              removeSubscriptions();\n\n              const wasUnlocked = true;\n              resolve(wasUnlocked);\n            }\n          });\n\n        subscriptionForCancel =\n          this.wallet.unlockModalRequested$.subscribe(async wasRequested => {\n            if (wasRequested === false) {\n              removeSubscriptions();\n\n              const wasUnlocked = false;\n              resolve(wasUnlocked);\n            }\n          });\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {AppSettingsService} from './app-settings.service';\n\n@Injectable()\nexport class WebsocketService {\n\n  queuedCommands = [];\n\n  keepaliveTimeout = 60 * 1000;\n  reconnectTimeout = 5 * 1000;\n\n  keepaliveSet = false;\n\n  socket = {\n    connected: false,\n    ws: null,\n  };\n\n  subscribedAccounts = [];\n\n  newTransactions$ = new BehaviorSubject(null);\n\n  constructor(private appSettings: AppSettingsService) { }\n\n  forceReconnect() {\n    console.log('Reconnecting Websocket...');\n    if (this.socket.connected && this.socket.ws) {\n      // Override the onclose event so it doesnt try to reconnect the old instance\n      this.socket.ws.onclose = event => {\n      };\n      this.socket.ws.close();\n      delete this.socket.ws;\n      this.socket.connected = false;\n    }\n\n    setTimeout(() => this.connect(), 250);\n  }\n\n  connect() {\n    if (this.socket.connected && this.socket.ws) {\n      // Already connected\n      return;\n    }\n    if (!this.appSettings.settings.serverWS) {\n      console.log('No Websocket server available.');\n      return;\n    }\n    delete this.socket.ws; // Maybe this will erase old connections\n\n    const wsUrl = this.appSettings.settings.serverWS;\n    const ws = new WebSocket(wsUrl);\n    this.socket.ws = ws;\n\n    ws.onopen = event => {\n      this.socket.connected = true;\n      this.queuedCommands.forEach(queueevent => ws.send(JSON.stringify(queueevent)));\n\n      // Resubscribe to accounts?\n      if (this.subscribedAccounts.length) {\n        this.subscribeAccounts(this.subscribedAccounts);\n      }\n\n      if (!this.keepaliveSet) {\n        this.keepalive(); // Start keepalives!\n      }\n    };\n    ws.onerror = event => {\n      // this.socket.connected = false;\n      console.log(`Socket error`, event);\n    };\n    ws.onclose = event => {\n      this.socket.connected = false;\n      console.log(`Socket close`, event);\n\n      // Start attempting to recconect\n      setTimeout(() => this.attemptReconnect(), this.reconnectTimeout);\n    };\n    ws.onmessage = event => {\n      try {\n        const newEvent = JSON.parse(event.data);\n        console.log('WS', newEvent);\n\n        if (newEvent.topic === 'confirmation') {\n          this.newTransactions$.next(newEvent.message);\n        }\n      } catch (err) {\n        console.log(`Error parsing message`, err);\n      }\n    };\n  }\n\n  attemptReconnect() {\n    this.connect();\n    if (this.reconnectTimeout < 30 * 1000) {\n      this.reconnectTimeout += 5 * 1000; // Slowly increase the timeout up to 30 seconds\n    }\n  }\n\n  keepalive() {\n    this.keepaliveSet = true;\n    if (this.socket.connected) {\n      this.socket.ws.send(JSON.stringify({ action: 'ping' }));\n    }\n\n    setTimeout(() => {\n      this.keepalive();\n    }, this.keepaliveTimeout);\n  }\n\n\n\n  subscribeAccounts(accountIDs: string[]) {\n    const event = {\n      action: 'subscribe',\n      topic: 'confirmation',\n      options: {\n        accounts: accountIDs\n      }\n    };\n\n    accountIDs.forEach(account => {\n      if (this.subscribedAccounts.indexOf(account) === -1) {\n        this.subscribedAccounts.push(account); // Keep a unique list of subscriptions for reconnecting\n      }\n    });\n    if (!this.socket.connected) {\n      this.queuedCommands.push(event);\n      if (this.queuedCommands.length >= 3) {\n        this.queuedCommands.shift(); // Prune queued commands\n      }\n      return;\n    }\n    this.socket.ws.send(JSON.stringify(event));\n  }\n\n  unsubscribeAccounts(accountIDs: string[]) {\n    const event = {\n      action: 'unsubscribe',\n      topic: 'confirmation',\n      options: {\n        accounts: accountIDs\n      }\n    };\n\n    accountIDs.forEach(account => {\n      const existingIndex = this.subscribedAccounts.indexOf(account);\n      if (existingIndex !== -1) {\n        this.subscribedAccounts.splice(existingIndex, 1); // Remove from our internal subscription list\n      }\n    });\n    // If we aren't connected, we don't need to do anything.  On reconnect, it won't subscribe.\n    if (this.socket.connected) {\n      this.socket.ws.send(JSON.stringify(event));\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {PowService, baseThreshold, workState} from './pow.service';\nimport {NotificationService} from './notification.service';\nimport {UtilService} from './util.service';\n\n@Injectable()\nexport class WorkPoolService {\n  storeKey = `nanovault-workcache`;\n\n  cacheLength = 25;\n  workCache = [];\n\n  currentlyProcessingHashes = {};\n\n  constructor(private pow: PowService, private notifications: NotificationService, private util: UtilService) { }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  public workExists(hash) {\n    return !!this.workCache.find(p => p.hash === hash);\n  }\n\n  // A simple helper, which doesn't wait for a response (Used for pre-loading work)\n  public addWorkToCache(hash, multiplier = 1) {\n    this.getWork(hash, multiplier);\n  }\n\n  // Remove a hash from from the cache\n  public removeFromCache(hash) {\n    const cachedIndex = this.workCache.findIndex(p => p.hash === hash);\n    if (cachedIndex === -1) return;\n\n    this.workCache.splice(cachedIndex, 1);\n    this.saveWorkCache();\n  }\n\n  public clearCache() {\n    this.workCache = [];\n    this.saveWorkCache();\n\n    return true;\n  }\n\n  public deleteCache() {\n    this.workCache = [];\n    localStorage.removeItem(this.storeKey);\n  }\n\n  // Get work for a hash.  Uses the cache, or the current setting for generating it.\n  public async getWork(hash, multiplier = 1) {\n    this.pow.shouldContinueQueue = true; // new pow should never be blocked\n    // additional pow for the same hash will have to wait\n    while ( this.currentlyProcessingHashes[hash] === true ) {\n      await this.sleep(100);\n    }\n\n    // cancel any additional work that's coming from the wait loop above if user aborted during that loop\n    if (!this.pow.shouldContinueQueue) return null;\n\n    const cached = this.workCache.find(p => p.hash === hash);\n\n    try {\n      if (cached && cached.work &&\n          this.util.nano.validateWork(hash, this.util.nano.difficultyFromMultiplier(multiplier, baseThreshold), cached.work)) {\n        console.log('Using cached work: ' + cached.work);\n        return cached.work;\n      }\n    } catch (err) {\n      console.log('Error validating cached work. ' + err);\n    }\n\n    this.currentlyProcessingHashes[hash] = true;\n\n    let work;\n    try {\n      work = await this.pow.getPow(hash, multiplier);\n    } catch (workState) {\n      work = workState;\n    }\n\n    if (work.state === workState.error || work.state === workState.cancelled) {\n      // Only display notification on error\n      if (work.state === workState.error) {\n        this.notifications.sendWarning(\n          `Failed to retrieve proof of work for ${hash}. Try a different PoW method from the app settings.`, {length: 5000}\n          );\n      }\n      delete this.currentlyProcessingHashes[hash];\n      return null;\n    }\n\n    console.log('Work found: ' + work.work);\n\n    // remove duplicates\n    this.workCache = this.workCache.filter(entry => (entry.hash !== hash));\n\n    this.workCache.push({ hash, work: work.work });\n    delete this.currentlyProcessingHashes[hash];\n\n    if (this.workCache.length >= this.cacheLength) this.workCache.shift(); // Prune if we are at max length\n    this.saveWorkCache();\n\n    return work.work;\n  }\n\n  /**\n   * Save the work cache to localStorage\n   */\n  private saveWorkCache() {\n    // Remove duplicates by keeping the last updated work\n    this.workCache = this.uniqByKeepLast(this.workCache, it => it.hash);\n\n    localStorage.setItem(this.storeKey, JSON.stringify(this.workCache));\n  }\n\n  /**\n   * Load the work cache from localStorage\n   */\n  public loadWorkCache() {\n    let workCache = [];\n    const workCacheStore = localStorage.getItem(this.storeKey);\n    if (workCacheStore) {\n      workCache = JSON.parse(workCacheStore);\n    }\n    this.workCache = workCache;\n\n    return this.workCache;\n  }\n\n  /**\n   * Remove duplicates but keep the last one\n   * @param a array\n   * @param key it => it.hash\n   */\n  private uniqByKeepLast(a, key) {\n    return [\n        ...new Map(\n            a.map(x => [key(x), x])\n        ).values()\n    ];\n  }\n}\n","import {\n  TRANSLOCO_LOADER,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor() {}\n\n  getTranslation(lang: string) {\n    return import(/* webpackChunkName: \"translation\" */ `../../assets/i18n/${lang}.json`).then(res => res.default);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: [\n          { id: 'en', label: 'English' },\n          { id: 'es', label: 'Español' },\n        ],\n        defaultLang: 'en',\n        fallbackLang: 'en',\n        missingHandler: {\n          // It will use the first language set in the `fallbackLang` property\n          useFallbackTranslation: true\n        },\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport {WalletService} from '../services/wallet.service';\nimport {AppSettingsService} from '../services/app-settings.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  donationAccount = environment.donationAddress;\n\n  wallet = this.walletService.wallet;\n  isConfigured = this.walletService.isConfigured;\n\n  constructor(private walletService: WalletService, public settingsService: AppSettingsService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div uk-grid>\n  <div class=\"uk-width-1-1 uk-animation-slide-left-small\">\n    <div uk-grid class=\"uk-text-center\" style=\"margin-bottom: 70px;\">\n      <div class=\"uk-width-1-1\" style=\"margin-top: 45px;\">\n        <img [src]=\"( settingsService.settings.lightModeEnabled ? 'assets/img/nault-logo.svg' : 'assets/img/nault-logo-night-mode.svg' )\" width=\"250px\" style=\"display: block; margin: 0 auto 20px auto;\" alt=\"Logo\"/>\n        <span class=\"uk-text-lead\" style=\"display: block\">{{ 'welcome.a-secure-open-source-wallet-for-nano' | transloco }}</span><br>\n      </div>\n\n      <div class=\"uk-width-1-1\" *ngIf=\"!isConfigured()\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1\">\n            <a routerLink=\"/configure-wallet\" class=\"uk-button uk-button-primary uk-width-1-1 uk-button-large\">{{ 'welcome.configure-wallet' | transloco }}</a>\n          </div>\n        </div>\n      </div>\n      <div class=\"uk-width-1-1\" *ngIf=\"isConfigured()\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1\" style=\"margin-top: 10px;\">\n            <span>{{ 'welcome.welcome-back-it-looks-like-your-wallet-is-already-configured' | transloco }}</span>\n          </div>\n          <div class=\"uk-width-1-1@m\">\n            <a routerLink=\"/accounts\" class=\"uk-button uk-button-primary uk-width-1-1 uk-button-large\">{{ 'welcome.view-my-accounts' | transloco }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"welcome-features-container uk-margin-top\">\n\n      <div class=\"feature uk-card-body uk-card-default\">\n        <div class=\"icon\">\n          <svg width=\"160mm\" height=\"160mm\" version=\"1.1\" viewBox=\"0 0 160 160\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"m80.448 11.936-53.936 16.765s-4.4379 41.913 12.289 79.452c11.193 25.119 41.57 40.779 41.647 40.819 0.07333-0.0395 30.452-15.698 41.646-40.817 16.729-37.538 12.294-79.45 12.294-79.45l-53.935-16.768z\" fill=\"none\" stroke=\"#000\" stroke-width=\"2\"/>\n          </svg>\n        </div>\n        <h2>{{ 'welcome.your-keys-your-coins.title' | transloco }}</h2>\n        <p>{{ 'welcome.your-keys-your-coins.1' | transloco }}</p>\n        <p>{{ 'welcome.your-keys-your-coins.2' | transloco }}</p>\n        <p>{{ 'welcome.your-keys-your-coins.3' | transloco }}</p>\n        <p><a href=\"https://docs.nault.cc/2020/08/05/security-of-nano.html\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'welcome.learn-more' | transloco }}</a></p>\n      </div>\n\n      <div class=\"feature uk-card-body uk-card-default\">\n        <div class=\"icon\">\n          <svg width=\"160mm\" height=\"160mm\" version=\"1.1\" viewBox=\"0 0 160 160\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g fill=\"none\" stroke=\"#000\">\n              <rect x=\"115.54\" y=\"95.843\" width=\"29.491\" height=\"48.734\" rx=\"3.5764\" ry=\"3.663\" stop-color=\"#000000\" stroke-width=\"2\"/>\n              <rect x=\"119.21\" y=\"103.72\" width=\"22.139\" height=\"32.555\" rx=\"2.1542\" ry=\"2.1886\" stop-color=\"#000000\" stroke-width=\"1.5\"/>\n              <g stroke-linejoin=\"round\">\n                <path d=\"m122.27 100.16h16.027z\" stop-color=\"#000000\" stroke-width=\"1.5\"/>\n                <rect x=\"13.801\" y=\"75.375\" width=\"72.965\" height=\"53.721\" rx=\"3.5236\" ry=\"3.6275\" stop-color=\"#000000\" stroke-width=\"2\"/>\n                <rect x=\"22.888\" y=\"82.858\" width=\"54.79\" height=\"38.754\" rx=\"1.8512\" ry=\"1.8534\" stop-color=\"#000000\" stroke-width=\"1.5\"/>\n                <path d=\"m130.27 140.01h-0.0717z\" stop-color=\"#000000\" stroke-width=\"2\"/>\n                <path d=\"m18.602 102.2h-0.3z\" stop-color=\"#000000\" stroke-width=\"3\"/>\n                <path d=\"m110.62 99.71h-4.1059l-0.0641-14.418 33.454-0.20205c2.579 0 4.6555-2.005 4.6555-4.4953v-57.582c0-2.4904-2.0765-4.4948-4.6555-4.4948h-87.089c-2.579 0-4.655 2.0044-4.655 4.4948v47.612m43.397 34.447h19.063\" stop-color=\"#000000\" stroke-width=\"2\"/>\n                <path d=\"m53.359 70.585v-40.657c0-1.3926 1.2958-2.5136 2.9055-2.5136h80.184c1.6096 0 2.9055 1.1211 2.9055 2.5136v47.533c0 1.3926-1.2958 2.5136-2.9055 2.5136h-44.852\" stop-color=\"#000000\" stroke-width=\"1.5\"/>\n                <path d=\"m96.317 23.362h-0.3z\" stop-color=\"#000000\" stroke-width=\"3\"/>\n              </g>\n            </g>\n          </svg>\n        </div>\n        <h2>{{ 'welcome.any-device-anywhere.title' | transloco }}</h2>\n        <p>{{ 'welcome.any-device-anywhere.1' | transloco }}</p>\n        <p>{{ 'welcome.any-device-anywhere.2.1' | transloco }} <a href=\"https://github.com/Nault/Nault/releases\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'welcome.any-device-anywhere.2.2-link-github-releases' | transloco }}</a>{{ 'welcome.any-device-anywhere.2.3' | transloco }}</p>\n        <p>{{ 'welcome.any-device-anywhere.3.1' | transloco }} <a href=\"https://github.com/Nault/Nault\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'welcome.any-device-anywhere.3.2-link-github' | transloco }}</a>{{ 'welcome.any-device-anywhere.3.3' | transloco }}</p>\n      </div>\n\n      <div class=\"feature uk-card-body uk-card-default\">\n        <div class=\"icon\">\n          <svg width=\"160mm\" height=\"160mm\" version=\"1.1\" viewBox=\"0 0 160 160\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g fill=\"none\" stroke=\"#000\" stroke-width=\"2\">\n              <g>\n                <path d=\"m16.735 14.651 36.256-1.82e-4v9.96h-40.121l-0.09402-6.5747c-0.02682-1.8752 1.7656-3.4012 3.9587-3.3851z\" stop-color=\"#000000\"/>\n                <path d=\"m52.992 29.432v10.091h-40.121v-10.091z\" stop-color=\"#000000\"/>\n                <path d=\"m49.033 54.436-36.256 4.26e-4v-9.961h40.215v6.5755c0 1.8754-1.7654 3.4012-3.9584 3.3851z\" stop-color=\"#000000\"/>\n                <path d=\"m111.53 35.973 36.256 0.0402v9.92h-40.121l-0.094-6.5752c-0.0268-1.8752 1.7656-3.4012 3.9587-3.3851z\" stop-color=\"#000000\"/>\n                <path d=\"m147.79 50.754v10.09h-40.121v-10.09z\" stop-color=\"#000000\"/>\n                <path d=\"m143.83 75.757-36.256-7.8e-5v-9.96h40.168l0.0472 6.575c0.0135 1.8753-1.7661 3.4012-3.9591 3.3851z\" stop-color=\"#000000\"/>\n                <path d=\"m42.9 105.79 36.256 4.2e-4v9.96h-40.121l-0.094-6.5754c-0.02681-1.8752 1.7656-3.4012 3.9587-3.3851z\" stop-color=\"#000000\"/>\n                <path d=\"m79.156 120.57v10.09h-40.121v-10.09z\" stop-color=\"#000000\"/>\n                <path d=\"m75.197 145.57-36.256 3e-5v-9.96h40.215v6.5749c0 1.8754-1.7659 3.4012-3.9589 3.3851z\" stop-color=\"#000000\"/>\n              </g>\n              <g>\n                <path d=\"m62.29 30.725 36.616 15.234\" stroke-dasharray=\"2, 6\"/>\n                <path d=\"m89.282 120.28 35.28-38.487\" stroke-dasharray=\"2, 6.00001\"/>\n                <rect x=\"110.61\" y=\"105.54\" width=\"14.798\" height=\"14.798\" rx=\"7.2501\" ry=\"7.2501\" stop-color=\"#000000\"/>\n              </g>\n              <path d=\"m76.697 24.637 13.493-9.3469 2.7567 16.21z\"/>\n            </g>\n          </svg>\n        </div>\n        <h2>{{ 'welcome.any-node-always-available.title' | transloco }}</h2>\n        <p>{{ 'welcome.any-node-always-available.1.1' | transloco }} <a href=\"https://nault.cc\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'welcome.any-node-always-available.1.2-link-nault' | transloco }}</a> {{ 'welcome.any-node-always-available.1.3' | transloco }} <a href=\"https://github.com/Nault/Nault/releases\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'welcome.any-node-always-available.1.4-link-github-releases' | transloco }}</a> {{ 'welcome.any-node-always-available.1.5' | transloco }} <a href=\"https://github.com/Nault/Nault#web-app\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'welcome.any-node-always-available.1.6-link-github-web-app' | transloco }}</a>{{ 'welcome.any-node-always-available.1.7' | transloco }}</p>\n        <p>{{ 'welcome.any-node-always-available.2.1' | transloco }} <a href=\"https://docs.nano.org/running-a-node/overview/\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'welcome.any-node-always-available.2.2-link-nano-node' | transloco }}</a> {{ 'welcome.any-node-always-available.2.3' | transloco }}</p>\n      </div>\n\n      <div class=\"feature uk-card-body uk-card-default\">\n        <div class=\"icon\">\n          <svg width=\"160mm\" height=\"160mm\" version=\"1.1\" viewBox=\"0 0 160 160\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g fill=\"none\" stroke=\"#000\">\n              <g>\n                <g>\n                  <path transform=\"matrix(1.4835 0 0 1.4781 -13.178 -69.759)\" d=\"m62.808 53.721c-9.889-0.26727-8.957 4.4916-8.8199 13.631 0.10686 7.1237 3.7525 7.4728 3.7525 7.4728v1.6358s-14.326-0.04302-13.107 16.303c0.51501 6.9035 1.3476 11.718 8.8468 11.945 8.8199 0.26727 10.199 0.0107 10.199 0.0107m-0.87165-50.999c9.889-0.26727 8.957 4.4916 8.8199 13.631-0.10686 7.1237-3.7525 7.4728-3.7525 7.4728v1.6358s14.326-0.04302 13.107 16.303c-0.51501 6.9035-1.3476 11.718-8.8468 11.945-8.8199 0.26727-10.199 0.0107-10.199 0.0107\" stroke-width=\"1.3506\"/>\n                  <path d=\"m46.276 21.814c-10.482-0.28412-9.4945 4.7748-9.3492 14.49 0.11328 7.5729 3.9777 7.944 3.9777 7.944v1.739s-15.186-0.04573-13.893 17.331c0.54592 7.3387 1.4285 20.471 9.3776 20.712 9.3492 0.28412 10.811 0.0114 10.811 0.0114m-0.92395-62.228c10.482-0.28412 9.4945 4.7748 9.3492 14.49-0.11328 7.5729-3.9777 7.944-3.9777 7.944v1.739s2.3541-0.0061 3.8668 0.99653m-3.6921 36.315c-5.1826 1.1853-6.4702 0.74313-6.4702 0.74313\" stroke-width=\"2\"/>\n                  <path d=\"m113.78 21.816c10.482-0.28412 9.4945 4.7748 9.3492 14.49-0.11326 7.5729-3.9777 7.944-3.9777 7.944v1.739s15.186-0.04573 13.893 17.331c-0.54592 7.3387-1.4285 20.471-9.3776 20.712-9.3492 0.28412-10.811 0.01139-10.811 0.01139m0.92397-62.228c-10.482-0.28412-9.4945 4.7748-9.3492 14.49 0.11326 7.5729 3.9777 7.944 3.9777 7.944v1.739s-2.3541-0.0061-3.8668 0.99653m3.6921 36.315c5.1826 1.1853 6.4702 0.74313 6.4702 0.74313\" stroke-width=\"2\"/>\n                </g>\n                <path transform=\"matrix(1.2392 0 0 1.2387 -6.7442 -30.298)\" d=\"m22.538 100.54h47.462 47.462c2.77 0 2.9737 0.90258 2.8833 3.9417-0.0903 3.0391-6.8792 2.8321-6.8792 2.8321v33.961c0 2.77-2.23 5-5 5h-76.932c-2.77 0-5-2.23-5-5v-33.961s-6.7888 0.20694-6.8792-2.8321c-0.09033-3.0391 0.11333-3.9417 2.8833-3.9417z\" stop-color=\"#000000\" stroke-width=\"1.6143\"/>\n              </g>\n              <path d=\"m40.587 123.36h78.826\" stroke-linejoin=\"round\" stroke-width=\"2\"/>\n            </g>\n          </svg>\n        </div>\n        <h2>{{ 'welcome.secure-the-nano-network.title' | transloco }}</h2>\n        <p>{{ 'welcome.secure-the-nano-network.1.1' | transloco }} <a href=\"https://docs.nano.org/protocol-design/orv-consensus/\" target=\"_blank\" rel=\"noopener noreferrer\">{{ 'welcome.secure-the-nano-network.1.2-link-orv' | transloco }}</a>{{ 'welcome.secure-the-nano-network.1.3' | transloco }}</p>\n        <p>{{ 'welcome.secure-the-nano-network.2' | transloco }}</p>\n      </div>\n\n      <div class=\"feature uk-card-body uk-card-default\">\n        <div class=\"icon\">\n          <svg width=\"160mm\" height=\"160mm\" version=\"1.1\" viewBox=\"0 0 160 160\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g fill=\"none\" stroke=\"#000\">\n              <rect x=\"17.148\" y=\"14.529\" width=\"125.7\" height=\"130.94\" rx=\"5.6483\" ry=\"5.647\" stop-color=\"#000000\" stroke-width=\"2\"/>\n              <g>\n                <path transform=\"matrix(1.0535 0 0 1.0601 -33.258 .94343)\" d=\"m94.538 62.675c-4.0507 0.05061-7.4515 1.9242-7.4443 6.7542 0.0085 5.7713 3.4806 7.0204 3.4806 7.0204v9.9389h3.7794m-0.874-23.713c4.0507 0.05061 7.4515 1.9242 7.4443 6.7542-8e-3 5.7713-3.4806 7.0204-3.4806 7.0204v9.9389h-3.7794\" stroke-width=\"2\"/>\n                <ellipse cx=\"110.43\" cy=\"80.149\" rx=\"15.549\" ry=\"15.545\" stop-color=\"#000000\" stroke-width=\"2\"/>\n                <ellipse cx=\"110.43\" cy=\"80.149\" rx=\"8.2677\" ry=\"8.2659\" stop-color=\"#000000\" stroke-width=\"1.5\"/>\n                <path d=\"m125.57 80.02h-7.2778\" stroke-width=\"2\"/>\n                <rect x=\"23.43\" y=\"20.81\" width=\"113.14\" height=\"118.38\" rx=\"3.3245\" ry=\"3.3386\" stop-color=\"#000000\" stroke-width=\"1.5\"/>\n                <path transform=\"matrix(1.0535 0 0 1.0601 -57.07 .94343)\" d=\"m94.538 62.675c-4.0507 0.05061-7.4515 1.9242-7.4443 6.7542 0.0085 5.7713 3.4806 7.0204 3.4806 7.0204v9.9389h3.7794m-0.874-23.713c4.0507 0.05061 7.4515 1.9242 7.4443 6.7542-8e-3 5.7713-3.4806 7.0204-3.4806 7.0204v9.9389h-3.7794\" stroke-width=\"2\"/>\n                <path d=\"m125.57 80.02h-7.2778\" stroke-width=\"1.5\"/>\n              </g>\n            </g>\n          </svg>\n        </div>\n        <h2>{{ 'welcome.advanced-security-features.title' | transloco }}</h2>\n        <p>{{ 'welcome.advanced-security-features.nault-includes' | transloco }}</p>\n        <ul>\n          <li>{{ 'welcome.advanced-security-features.1' | transloco }}</li>\n          <li>{{ 'welcome.advanced-security-features.2' | transloco }}</li>\n          <li>{{ 'welcome.advanced-security-features.3' | transloco }}</li>\n        </ul>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  desktop: false,\n  donationAddress: 'nano_3niceeeyiaa86k58zhaeygxfkuzgffjtwju9ep33z9c8qekmr3iuc95jbqc8',\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});const colorCombinations=[[{h:\"293\",s:\"56.88%\",l:\"68.43%\"},{h:\"20\",s:\"52.27%\",l:\"93.42%\"},{h:\"290\",s:\"52.18%\",l:\"54.90%\"}],[{h:\"357\",s:\"61.06%\",l:\"5.09%\"},{h:\"92\",s:\"66.32%\",l:\"71.57%\"},{h:\"327\",s:\"89.20%\",l:\"47.46%\"}],[{h:\"136\",s:\"5.54%\",l:\"36.09%\"},{h:\"235\",s:\"46.16%\",l:\"98.50%\"},{h:\"176\",s:\"72.00%\",l:\"45.73%\"}],[{h:\"206\",s:\"85.83%\",l:\"47.93%\"},{h:\"260\",s:\"0.08%\",l:\"97.08%\"},{h:\"330\",s:\"80.33%\",l:\"73.40%\"}],[{h:\"112\",s:\"34.52%\",l:\"20.64%\"},{h:\"179\",s:\"32.10%\",l:\"94.78%\"},{h:\"126\",s:\"30.05%\",l:\"61.88%\"}],[{h:\"295\",s:\"17.54%\",l:\"38.74%\"},{h:\"143\",s:\"11.94%\",l:\"97.16%\"},{h:\"9\",s:\"99.63%\",l:\"61.17%\"}],[{h:\"217\",s:\"25.92%\",l:\"25.10%\"},{h:\"41\",s:\"32.69%\",l:\"82.43%\"},{h:\"191\",s:\"57.07%\",l:\"69.02%\"}],[{h:\"208\",s:\"98.24%\",l:\"26.32%\"},{h:\"355\",s:\"10.39%\",l:\"92.30%\"},{h:\"94\",s:\"35.42%\",l:\"61.46%\"}],[{h:\"336\",s:\"43.37%\",l:\"21.33%\"},{h:\"30\",s:\"77.79%\",l:\"55.11%\"},{h:\"116\",s:\"38.70%\",l:\"40.72%\"}],[{h:\"231\",s:\"37.90%\",l:\"18.17%\"},{h:\"111\",s:\"67.21%\",l:\"99.95%\"},{h:\"355\",s:\"72.15%\",l:\"48.68%\"}],[{h:\"232\",s:\"88.14%\",l:\"11.97%\"},{h:\"63\",s:\"88.22%\",l:\"88.52%\"},{h:\"62\",s:\"6.59%\",l:\"35.97%\"}],[{h:\"349\",s:\"37.88%\",l:\"40.00%\"},{h:\"109\",s:\"59.25%\",l:\"86.61%\"},{h:\"149\",s:\"40.54%\",l:\"56.22%\"}],[{h:\"281\",s:\"56.96%\",l:\"22.47%\"},{h:\"27\",s:\"60.89%\",l:\"56.55%\"},{h:\"333\",s:\"51.47%\",l:\"98.14%\"}],[{h:\"95\",s:\"97.79%\",l:\"92.99%\"},{h:\"8\",s:\"51.28%\",l:\"65.84%\"},{h:\"38\",s:\"1.60%\",l:\"69.01%\"}],[{h:\"285\",s:\"34.70%\",l:\"48.27%\"},{h:\"281\",s:\"23.55%\",l:\"83.58%\"},{h:\"50\",s:\"81.36%\",l:\"54.87%\"}],[{h:\"358\",s:\"21.25%\",l:\"4.41%\"},{h:\"166\",s:\"74.86%\",l:\"25.15%\"},{h:\"160\",s:\"85.00%\",l:\"57.47%\"}],[{h:\"257\",s:\"49.42%\",l:\"41.85%\"},{h:\"269\",s:\"84.65%\",l:\"69.46%\"},{h:\"8\",s:\"44.15%\",l:\"98.58%\"}],[{h:\"140\",s:\"50.36%\",l:\"24.81%\"},{h:\"34\",s:\"56.82%\",l:\"74.08%\"},{h:\"198\",s:\"19.62%\",l:\"97.48%\"}],[{h:\"206\",s:\"33.36%\",l:\"50.83%\"},{h:\"321\",s:\"11.66%\",l:\"98.55%\"},{h:\"197\",s:\"43.52%\",l:\"70.31%\"}],[{h:\"286\",s:\"5.32%\",l:\"52.81%\"},{h:\"270\",s:\"16.50%\",l:\"82.58%\"},{h:\"30\",s:\"77.63%\",l:\"90.61%\"}],[{h:\"261\",s:\"39.33%\",l:\"25.79%\"},{h:\"200\",s:\"0.02%\",l:\"93.64%\"},{h:\"206\",s:\"21.84%\",l:\"42.32%\"}],[{h:\"296\",s:\"31.54%\",l:\"40.18%\"},{h:\"25\",s:\"85.23%\",l:\"58.09%\"},{h:\"40\",s:\"71.91%\",l:\"94.19%\"}],[{h:\"183\",s:\"0.08%\",l:\"8.87%\"},{h:\"65\",s:\"0.29%\",l:\"45.14%\"},{h:\"22\",s:\"70.06%\",l:\"66.84%\"}],[{h:\"29\",s:\"28.68%\",l:\"15.36%\"},{h:\"118\",s:\"29.02%\",l:\"68.63%\"},{h:\"38\",s:\"50.32%\",l:\"66.63%\"}],[{h:\"232\",s:\"23.04%\",l:\"3.62%\"},{h:\"207\",s:\"80.36%\",l:\"92.63%\"},{h:\"303\",s:\"49.82%\",l:\"52.93%\"}],[{h:\"202\",s:\"61.92%\",l:\"55.77%\"},{h:\"155\",s:\"29.20%\",l:\"92.19%\"},{h:\"116\",s:\"51.02%\",l:\"77.45%\"}],[{h:\"36\",s:\"2.16%\",l:\"12.19%\"},{h:\"282\",s:\"76.94%\",l:\"96.90%\"},{h:\"198\",s:\"60.11%\",l:\"46.30%\"}],[{h:\"132\",s:\"99.88%\",l:\"1.08%\"},{h:\"222\",s:\"58.26%\",l:\"88.83%\"},{h:\"306\",s:\"53.61%\",l:\"76.63%\"}],[{h:\"163\",s:\"20.01%\",l:\"11.57%\"},{h:\"180\",s:\"54.94%\",l:\"58.73%\"},{h:\"148\",s:\"72.80%\",l:\"93.28%\"}],[{h:\"151\",s:\"63.21%\",l:\"97.43%\"},{h:\"170\",s:\"42.36%\",l:\"71.48%\"},{h:\"292\",s:\"64.41%\",l:\"29.62%\"}],[{h:\"135\",s:\"13.68%\",l:\"51.81%\"},{h:\"203\",s:\"35.15%\",l:\"27.25%\"},{h:\"42\",s:\"88.60%\",l:\"58.23%\"}],[{h:\"310\",s:\"54.72%\",l:\"10.78%\"},{h:\"194\",s:\"39.31%\",l:\"33.73%\"},{h:\"338\",s:\"94.23%\",l:\"42.09%\"}],[{h:\"239\",s:\"28.70%\",l:\"23.24%\"},{h:\"43\",s:\"76.16%\",l:\"64.36%\"},{h:\"188\",s:\"49.90%\",l:\"97.48%\"}],[{h:\"209\",s:\"50.08%\",l:\"62.04%\"},{h:\"343\",s:\"4.04%\",l:\"88.19%\"},{h:\"350\",s:\"48.79%\",l:\"76.47%\"}],[{h:\"286\",s:\"23.64%\",l:\"1.49%\"},{h:\"197\",s:\"42.18%\",l:\"44.41%\"},{h:\"20\",s:\"50.19%\",l:\"93.78%\"}],[{h:\"330\",s:\"62.87%\",l:\"39.77%\"},{h:\"52\",s:\"11.06%\",l:\"83.95%\"},{h:\"68\",s:\"64.45%\",l:\"75.72%\"}],[{h:\"340\",s:\"6.07%\",l:\"17.10%\"},{h:\"113\",s:\"9.04%\",l:\"49.90%\"},{h:\"168\",s:\"12.58%\",l:\"97.02%\"}],[{h:\"261\",s:\"17.91%\",l:\"28.25%\"},{h:\"147\",s:\"48.92%\",l:\"59.12%\"},{h:\"105\",s:\"53.01%\",l:\"88.41%\"}],[{h:\"251\",s:\"8.58%\",l:\"48.20%\"},{h:\"19\",s:\"60.39%\",l:\"68.91%\"},{h:\"42\",s:\"60.09%\",l:\"87.58%\"}],[{h:\"209\",s:\"73.97%\",l:\"46.18%\"},{h:\"58\",s:\"63.55%\",l:\"78.69%\"},{h:\"207\",s:\"84.48%\",l:\"91.34%\"}],[{h:\"25\",s:\"3.18%\",l:\"49.89%\"},{h:\"69\",s:\"34.98%\",l:\"65.27%\"},{h:\"341\",s:\"94.07%\",l:\"85.52%\"}],[{h:\"146\",s:\"7.04%\",l:\"13.15%\"},{h:\"106\",s:\"61.49%\",l:\"71.19%\"},{h:\"16\",s:\"67.16%\",l:\"52.32%\"}],[{h:\"259\",s:\"27.31%\",l:\"44.03%\"},{h:\"38\",s:\"4.32%\",l:\"88.14%\"},{h:\"312\",s:\"79.85%\",l:\"66.12%\"}],[{h:\"148\",s:\"1.81%\",l:\"22.39%\"},{h:\"282\",s:\"1.47%\",l:\"91.73%\"},{h:\"161\",s:\"50.13%\",l:\"60.60%\"}],[{h:\"254\",s:\"26.20%\",l:\"23.02%\"},{h:\"56\",s:\"1.00%\",l:\"83.39%\"},{h:\"150\",s:\"88.74%\",l:\"55.71%\"}],[{h:\"319\",s:\"24.52%\",l:\"26.09%\"},{h:\"30\",s:\"66.03%\",l:\"72.39%\"},{h:\"205\",s:\"67.90%\",l:\"36.92%\"}],[{h:\"204\",s:\"24.27%\",l:\"17.12%\"},{h:\"323\",s:\"41.65%\",l:\"54.33%\"},{h:\"68\",s:\"43.76%\",l:\"90.98%\"}],[{h:\"270\",s:\"27.59%\",l:\"10.67%\"},{h:\"225\",s:\"5.98%\",l:\"57.87%\"},{h:\"33\",s:\"95.21%\",l:\"57.20%\"}],[{h:\"24\",s:\"50.65%\",l:\"10.18%\"},{h:\"159\",s:\"36.51%\",l:\"38.82%\"},{h:\"329\",s:\"71.49%\",l:\"68.21%\"}],[{h:\"267\",s:\"10.11%\",l:\"95.87%\"},{h:\"84\",s:\"34.01%\",l:\"58.12%\"},{h:\"351\",s:\"10.53%\",l:\"19.58%\"}],[{h:\"259\",s:\"84.78%\",l:\"23.48%\"},{h:\"174\",s:\"94.42%\",l:\"46.56%\"},{h:\"210\",s:\"76.99%\",l:\"39.86%\"}],[{h:\"213\",s:\"8.60%\",l:\"98.67%\"},{h:\"249\",s:\"90.77%\",l:\"82.45%\"},{h:\"323\",s:\"55.43%\",l:\"60.94%\"}],[{h:\"350\",s:\"82.21%\",l:\"5.00%\"},{h:\"9\",s:\"23.93%\",l:\"64.17%\"},{h:\"350\",s:\"68.13%\",l:\"50.11%\"}],[{h:\"314\",s:\"49.80%\",l:\"25.80%\"},{h:\"131\",s:\"55.89%\",l:\"86.01%\"},{h:\"278\",s:\"96.30%\",l:\"89.14%\"}],[{h:\"262\",s:\"36.47%\",l:\"45.38%\"},{h:\"271\",s:\"8.22%\",l:\"70.20%\"},{h:\"154\",s:\"92.27%\",l:\"71.97%\"}],[{h:\"299\",s:\"32.84%\",l:\"33.65%\"},{h:\"146\",s:\"18.96%\",l:\"97.15%\"},{h:\"139\",s:\"71.57%\",l:\"75.14%\"}],[{h:\"250\",s:\"86.96%\",l:\"6.32%\"},{h:\"208\",s:\"29.68%\",l:\"42.24%\"},{h:\"344\",s:\"71.58%\",l:\"75.27%\"}],[{h:\"37\",s:\"8.93%\",l:\"33.33%\"},{h:\"3\",s:\"45.94%\",l:\"68.96%\"},{h:\"109\",s:\"48.32%\",l:\"79.75%\"}],[{h:\"73\",s:\"85.65%\",l:\"5.60%\"},{h:\"201\",s:\"74.18%\",l:\"28.88%\"},{h:\"312\",s:\"61.53%\",l:\"90.78%\"}],[{h:\"23\",s:\"68.02%\",l:\"27.21%\"},{h:\"164\",s:\"73.27%\",l:\"92.62%\"},{h:\"25\",s:\"63.00%\",l:\"56.77%\"}],[{h:\"70\",s:\"44.96%\",l:\"97.07%\"},{h:\"333\",s:\"75.20%\",l:\"41.68%\"},{h:\"215\",s:\"72.86%\",l:\"34.42%\"}],[{h:\"160\",s:\"20.70%\",l:\"8.97%\"},{h:\"140\",s:\"55.13%\",l:\"70.05%\"},{h:\"332\",s:\"90.86%\",l:\"61.88%\"}],[{h:\"236\",s:\"51.36%\",l:\"64.59%\"},{h:\"147\",s:\"41.08%\",l:\"93.96%\"},{h:\"190\",s:\"44.54%\",l:\"70.94%\"}],[{h:\"285\",s:\"72.68%\",l:\"29.57%\"},{h:\"214\",s:\"18.64%\",l:\"92.87%\"},{h:\"313\",s:\"67.82%\",l:\"73.67%\"}],[{h:\"323\",s:\"8.82%\",l:\"10.49%\"},{h:\"310\",s:\"19.27%\",l:\"55.77%\"},{h:\"166\",s:\"75.38%\",l:\"34.51%\"}],[{h:\"239\",s:\"59.44%\",l:\"63.63%\"},{h:\"178\",s:\"82.74%\",l:\"96.39%\"},{h:\"250\",s:\"98.70%\",l:\"37.09%\"}],[{h:\"210\",s:\"18.27%\",l:\"6.83%\"},{h:\"86\",s:\"61.34%\",l:\"62.07%\"},{h:\"218\",s:\"66.39%\",l:\"48.14%\"}],[{h:\"78\",s:\"37.30%\",l:\"4.18%\"},{h:\"193\",s:\"97.65%\",l:\"63.52%\"},{h:\"313\",s:\"49.33%\",l:\"66.30%\"}],[{h:\"219\",s:\"74.05%\",l:\"27.22%\"},{h:\"321\",s:\"73.99%\",l:\"47.07%\"},{h:\"238\",s:\"82.56%\",l:\"80.04%\"}],[{h:\"194\",s:\"83.65%\",l:\"52.86%\"},{h:\"62\",s:\"94.04%\",l:\"94.73%\"},{h:\"324\",s:\"54.69%\",l:\"49.45%\"}],[{h:\"297\",s:\"22.36%\",l:\"38.75%\"},{h:\"28\",s:\"86.56%\",l:\"91.26%\"},{h:\"349\",s:\"64.30%\",l:\"79.35%\"}],[{h:\"274\",s:\"6.48%\",l:\"23.48%\"},{h:\"8\",s:\"15.47%\",l:\"52.72%\"},{h:\"140\",s:\"37.01%\",l:\"65.82%\"}],[{h:\"38\",s:\"91.65%\",l:\"93.86%\"},{h:\"176\",s:\"12.61%\",l:\"23.49%\"},{h:\"342\",s:\"58.62%\",l:\"51.37%\"}],[{h:\"22\",s:\"5.28%\",l:\"95.34%\"},{h:\"167\",s:\"49.16%\",l:\"40.97%\"},{h:\"10\",s:\"92.40%\",l:\"45.33%\"}],[{h:\"246\",s:\"51.19%\",l:\"28.27%\"},{h:\"164\",s:\"4.64%\",l:\"93.54%\"},{h:\"170\",s:\"42.70%\",l:\"62.42%\"}],[{h:\"1\",s:\"49.46%\",l:\"53.39%\"},{h:\"247\",s:\"49.83%\",l:\"98.74%\"},{h:\"14\",s:\"72.41%\",l:\"74.35%\"}],[{h:\"259\",s:\"67.18%\",l:\"42.47%\"},{h:\"223\",s:\"45.31%\",l:\"95.98%\"},{h:\"298\",s:\"74.43%\",l:\"79.11%\"}],[{h:\"287\",s:\"1.82%\",l:\"50.46%\"},{h:\"3\",s:\"9.98%\",l:\"80.03%\"},{h:\"44\",s:\"96.39%\",l:\"57.09%\"}],[{h:\"254\",s:\"35.47%\",l:\"31.58%\"},{h:\"352\",s:\"68.89%\",l:\"61.09%\"},{h:\"158\",s:\"61.84%\",l:\"91.37%\"}],[{h:\"340\",s:\"17.55%\",l:\"44.11%\"},{h:\"193\",s:\"49.08%\",l:\"84.19%\"},{h:\"2\",s:\"11.01%\",l:\"74.07%\"}],[{h:\"320\",s:\"80.33%\",l:\"34.58%\"},{h:\"43\",s:\"66.52%\",l:\"53.05%\"},{h:\"207\",s:\"36.10%\",l:\"61.37%\"}],[{h:\"1\",s:\"90.25%\",l:\"17.42%\"},{h:\"170\",s:\"45.16%\",l:\"94.55%\"},{h:\"42\",s:\"94.85%\",l:\"38.49%\"}],[{h:\"242\",s:\"44.97%\",l:\"29.33%\"},{h:\"64\",s:\"93.79%\",l:\"45.54%\"},{h:\"203\",s:\"83.08%\",l:\"97.04%\"}],[{h:\"48\",s:\"4.62%\",l:\"52.37%\"},{h:\"343\",s:\"43.38%\",l:\"97.17%\"},{h:\"21\",s:\"73.28%\",l:\"69.41%\"}],[{h:\"313\",s:\"38.43%\",l:\"23.73%\"},{h:\"329\",s:\"16.23%\",l:\"64.61%\"},{h:\"195\",s:\"91.65%\",l:\"58.31%\"}],[{h:\"343\",s:\"31.40%\",l:\"17.11%\"},{h:\"157\",s:\"35.64%\",l:\"91.64%\"},{h:\"206\",s:\"83.44%\",l:\"57.36%\"}],[{h:\"202\",s:\"88.44%\",l:\"16.63%\"},{h:\"348\",s:\"68.72%\",l:\"96.72%\"},{h:\"100\",s:\"34.85%\",l:\"39.69%\"}],[{h:\"238\",s:\"13.66%\",l:\"60.06%\"},{h:\"173\",s:\"93.69%\",l:\"94.52%\"},{h:\"151\",s:\"93.93%\",l:\"79.73%\"}],[{h:\"292\",s:\"47.22%\",l:\"2.54%\"},{h:\"299\",s:\"16.52%\",l:\"54.61%\"},{h:\"189\",s:\"73.81%\",l:\"80.34%\"}],[{h:\"20\",s:\"69.03%\",l:\"20.86%\"},{h:\"223\",s:\"4.00%\",l:\"93.85%\"},{h:\"39\",s:\"26.80%\",l:\"41.13%\"}],[{h:\"295\",s:\"38.27%\",l:\"40.68%\"},{h:\"37\",s:\"69.27%\",l:\"90.73%\"},{h:\"147\",s:\"63.80%\",l:\"72.72%\"}],[{h:\"219\",s:\"42.78%\",l:\"13.56%\"},{h:\"66\",s:\"88.39%\",l:\"50.61%\"},{h:\"318\",s:\"73.04%\",l:\"48.02%\"}],[{h:\"121\",s:\"22.39%\",l:\"18.95%\"},{h:\"190\",s:\"37.38%\",l:\"96.55%\"},{h:\"328\",s:\"67.24%\",l:\"49.09%\"}],[{h:\"297\",s:\"61.76%\",l:\"17.84%\"},{h:\"299\",s:\"59.87%\",l:\"83.51%\"},{h:\"127\",s:\"37.06%\",l:\"78.79%\"}],[{h:\"183\",s:\"40.23%\",l:\"29.28%\"},{h:\"349\",s:\"72.19%\",l:\"98.89%\"},{h:\"354\",s:\"61.90%\",l:\"49.68%\"}],[{h:\"265\",s:\"1.45%\",l:\"21.59%\"},{h:\"46\",s:\"71.61%\",l:\"99.33%\"},{h:\"318\",s:\"32.37%\",l:\"37.60%\"}],[{h:\"9\",s:\"70.49%\",l:\"0.17%\"},{h:\"169\",s:\"0.58%\",l:\"97.23%\"},{h:\"209\",s:\"60.57%\",l:\"53.08%\"}],[{h:\"0\",s:\"14.66%\",l:\"46.50%\"},{h:\"53\",s:\"83.23%\",l:\"70.39%\"},{h:\"353\",s:\"80.67%\",l:\"72.63%\"}],[{h:\"335\",s:\"47.32%\",l:\"25.88%\"},{h:\"156\",s:\"38.62%\",l:\"81.18%\"},{h:\"198\",s:\"76.69%\",l:\"48.94%\"}],[{h:\"221\",s:\"61.95%\",l:\"39.71%\"},{h:\"74\",s:\"84.45%\",l:\"91.46%\"},{h:\"71\",s:\"14.20%\",l:\"58.10%\"}],[{h:\"210\",s:\"36.64%\",l:\"55.66%\"},{h:\"170\",s:\"55.42%\",l:\"69.35%\"},{h:\"24\",s:\"73.10%\",l:\"80.49%\"}],[{h:\"260\",s:\"7.60%\",l:\"17.18%\"},{h:\"42\",s:\"1.34%\",l:\"37.43%\"},{h:\"114\",s:\"59.67%\",l:\"88.92%\"}],[{h:\"223\",s:\"54.64%\",l:\"69.21%\"},{h:\"57\",s:\"67.73%\",l:\"97.46%\"},{h:\"306\",s:\"53.56%\",l:\"87.10%\"}],[{h:\"221\",s:\"91.95%\",l:\"79.70%\"},{h:\"212\",s:\"77.68%\",l:\"99.23%\"},{h:\"166\",s:\"96.56%\",l:\"88.56%\"}],[{h:\"266\",s:\"40.04%\",l:\"58.13%\"},{h:\"200\",s:\"65.97%\",l:\"84.62%\"},{h:\"47\",s:\"66.27%\",l:\"99.08%\"}],[{h:\"213\",s:\"83.72%\",l:\"58.56%\"},{h:\"177\",s:\"70.10%\",l:\"91.40%\"},{h:\"316\",s:\"86.05%\",l:\"15.03%\"}],[{h:\"232\",s:\"16.90%\",l:\"47.03%\"},{h:\"357\",s:\"66.37%\",l:\"70.00%\"},{h:\"54\",s:\"79.99%\",l:\"66.03%\"}],[{h:\"255\",s:\"97.12%\",l:\"14.87%\"},{h:\"274\",s:\"93.89%\",l:\"95.64%\"},{h:\"230\",s:\"31.31%\",l:\"42.07%\"}],[{h:\"153\",s:\"0.50%\",l:\"17.63%\"},{h:\"205\",s:\"84.98%\",l:\"59.41%\"},{h:\"154\",s:\"78.57%\",l:\"49.10%\"}],[{h:\"272\",s:\"30.36%\",l:\"64.48%\"},{h:\"241\",s:\"96.64%\",l:\"99.32%\"},{h:\"276\",s:\"95.20%\",l:\"86.47%\"}],[{h:\"203\",s:\"84.44%\",l:\"23.90%\"},{h:\"8\",s:\"69.93%\",l:\"96.73%\"},{h:\"124\",s:\"46.11%\",l:\"84.37%\"}],[{h:\"222\",s:\"35.42%\",l:\"45.77%\"},{h:\"204\",s:\"22.57%\",l:\"76.80%\"},{h:\"81\",s:\"94.53%\",l:\"94.67%\"}],[{h:\"272\",s:\"32.75%\",l:\"19.19%\"},{h:\"52\",s:\"36.34%\",l:\"75.10%\"},{h:\"7\",s:\"70.34%\",l:\"76.30%\"}],[{h:\"338\",s:\"38.82%\",l:\"31.91%\"},{h:\"13\",s:\"49.06%\",l:\"96.37%\"},{h:\"66\",s:\"11.93%\",l:\"66.43%\"}],[{h:\"252\",s:\"33.28%\",l:\"51.78%\"},{h:\"326\",s:\"98.11%\",l:\"79.06%\"},{h:\"61\",s:\"63.46%\",l:\"87.58%\"}],[{h:\"122\",s:\"14.04%\",l:\"90.17%\"},{h:\"179\",s:\"10.48%\",l:\"60.80%\"},{h:\"355\",s:\"13.75%\",l:\"54.35%\"}],[{h:\"333\",s:\"12.65%\",l:\"45.92%\"},{h:\"70\",s:\"22.53%\",l:\"77.46%\"},{h:\"270\",s:\"37.22%\",l:\"80.51%\"}],[{h:\"217\",s:\"3.80%\",l:\"21.77%\"},{h:\"157\",s:\"99.71%\",l:\"80.04%\"},{h:\"343\",s:\"43.20%\",l:\"56.91%\"}],[{h:\"236\",s:\"28.03%\",l:\"39.52%\"},{h:\"215\",s:\"53.88%\",l:\"87.13%\"},{h:\"20\",s:\"99.01%\",l:\"93.62%\"}],[{h:\"230\",s:\"68.65%\",l:\"98.58%\"},{h:\"294\",s:\"16.68%\",l:\"51.87%\"},{h:\"232\",s:\"23.80%\",l:\"44.97%\"}],[{h:\"282\",s:\"10.67%\",l:\"92.34%\"},{h:\"353\",s:\"9.09%\",l:\"48.11%\"},{h:\"126\",s:\"30.34%\",l:\"46.73%\"}],[{h:\"209\",s:\"53.05%\",l:\"30.53%\"},{h:\"141\",s:\"9.19%\",l:\"92.34%\"},{h:\"167\",s:\"66.82%\",l:\"51.96%\"}],[{h:\"237\",s:\"2.78%\",l:\"92.74%\"},{h:\"270\",s:\"93.45%\",l:\"10.47%\"},{h:\"147\",s:\"27.55%\",l:\"53.96%\"}],[{h:\"69\",s:\"50.72%\",l:\"92.03%\"},{h:\"197\",s:\"62.77%\",l:\"56.30%\"},{h:\"303\",s:\"64.08%\",l:\"39.89%\"}],[{h:\"243\",s:\"12.26%\",l:\"45.33%\"},{h:\"237\",s:\"22.70%\",l:\"99.07%\"},{h:\"356\",s:\"49.87%\",l:\"61.52%\"}],[{h:\"336\",s:\"66.83%\",l:\"57.47%\"},{h:\"68\",s:\"97.08%\",l:\"97.98%\"},{h:\"201\",s:\"86.17%\",l:\"22.36%\"}],[{h:\"219\",s:\"4.61%\",l:\"96.05%\"},{h:\"337\",s:\"85.74%\",l:\"64.37%\"},{h:\"193\",s:\"99.17%\",l:\"23.83%\"}],[{h:\"217\",s:\"49.85%\",l:\"10.70%\"},{h:\"212\",s:\"92.54%\",l:\"38.31%\"},{h:\"219\",s:\"71.11%\",l:\"87.67%\"}],[{h:\"311\",s:\"88.18%\",l:\"15.84%\"},{h:\"319\",s:\"55.05%\",l:\"42.84%\"},{h:\"27\",s:\"89.45%\",l:\"91.03%\"}],[{h:\"4\",s:\"61.21%\",l:\"65.59%\"},{h:\"303\",s:\"20.30%\",l:\"99.37%\"},{h:\"205\",s:\"35.57%\",l:\"23.66%\"}],[{h:\"325\",s:\"99.89%\",l:\"32.00%\"},{h:\"238\",s:\"32.03%\",l:\"89.32%\"},{h:\"57\",s:\"62.22%\",l:\"86.07%\"}],[{h:\"254\",s:\"22.24%\",l:\"37.49%\"},{h:\"293\",s:\"31.24%\",l:\"99.70%\"},{h:\"189\",s:\"90.88%\",l:\"52.39%\"}],[{h:\"336\",s:\"1.64%\",l:\"93.88%\"},{h:\"219\",s:\"12.69%\",l:\"33.11%\"},{h:\"28\",s:\"25.72%\",l:\"47.17%\"}],[{h:\"49\",s:\"84.82%\",l:\"5.96%\"},{h:\"261\",s:\"72.09%\",l:\"72.27%\"},{h:\"236\",s:\"19.03%\",l:\"94.21%\"}],[{h:\"161\",s:\"15.65%\",l:\"89.55%\"},{h:\"326\",s:\"15.66%\",l:\"57.18%\"},{h:\"174\",s:\"20.45%\",l:\"62.53%\"}],[{h:\"261\",s:\"96.93%\",l:\"14.53%\"},{h:\"61\",s:\"90.28%\",l:\"96.79%\"},{h:\"241\",s:\"68.52%\",l:\"67.61%\"}],[{h:\"56\",s:\"77.37%\",l:\"95.15%\"},{h:\"255\",s:\"45.65%\",l:\"21.83%\"},{h:\"173\",s:\"82.75%\",l:\"35.73%\"}],[{h:\"101\",s:\"49.15%\",l:\"4.81%\"},{h:\"344\",s:\"24.51%\",l:\"93.48%\"},{h:\"218\",s:\"37.22%\",l:\"47.38%\"}],[{h:\"233\",s:\"65.28%\",l:\"14.54%\"},{h:\"277\",s:\"68.48%\",l:\"97.95%\"},{h:\"344\",s:\"68.70%\",l:\"44.53%\"}],[{h:\"325\",s:\"53.05%\",l:\"8.56%\"},{h:\"170\",s:\"73.12%\",l:\"33.85%\"},{h:\"352\",s:\"73.09%\",l:\"44.93%\"}],[{h:\"219\",s:\"63.86%\",l:\"5.59%\"},{h:\"251\",s:\"43.88%\",l:\"99.63%\"},{h:\"190\",s:\"87.07%\",l:\"43.25%\"}],[{h:\"260\",s:\"95.11%\",l:\"9.74%\"},{h:\"286\",s:\"32.52%\",l:\"68.05%\"},{h:\"76\",s:\"62.29%\",l:\"83.55%\"}],[{h:\"347\",s:\"7.94%\",l:\"31.18%\"},{h:\"229\",s:\"40.05%\",l:\"86.28%\"},{h:\"24\",s:\"97.33%\",l:\"73.98%\"}],[{h:\"201\",s:\"13.78%\",l:\"77.56%\"},{h:\"293\",s:\"19.37%\",l:\"34.00%\"},{h:\"346\",s:\"49.71%\",l:\"97.11%\"}],[{h:\"305\",s:\"68.08%\",l:\"35.13%\"},{h:\"270\",s:\"1.30%\",l:\"90.24%\"},{h:\"79\",s:\"76.79%\",l:\"45.77%\"}],[{h:\"189\",s:\"76.49%\",l:\"96.12%\"},{h:\"287\",s:\"13.71%\",l:\"41.15%\"},{h:\"315\",s:\"34.76%\",l:\"68.24%\"}],[{h:\"154\",s:\"98.09%\",l:\"33.62%\"},{h:\"87\",s:\"89.31%\",l:\"97.64%\"},{h:\"59\",s:\"18.62%\",l:\"19.71%\"}],[{h:\"10\",s:\"39.04%\",l:\"40.99%\"},{h:\"24\",s:\"49.33%\",l:\"58.95%\"},{h:\"207\",s:\"86.74%\",l:\"97.04%\"}],[{h:\"234\",s:\"23.99%\",l:\"40.47%\"},{h:\"270\",s:\"28.94%\",l:\"77.40%\"},{h:\"98\",s:\"39.39%\",l:\"69.31%\"}],[{h:\"265\",s:\"45.68%\",l:\"42.87%\"},{h:\"150\",s:\"97.41%\",l:\"95.73%\"},{h:\"190\",s:\"50.82%\",l:\"50.68%\"}],[{h:\"276\",s:\"64.74%\",l:\"19.98%\"},{h:\"164\",s:\"25.79%\",l:\"93.53%\"},{h:\"41\",s:\"90.91%\",l:\"57.72%\"}],[{h:\"223\",s:\"32.98%\",l:\"53.50%\"},{h:\"208\",s:\"6.45%\",l:\"88.52%\"},{h:\"1\",s:\"50.29%\",l:\"72.21%\"}],[{h:\"50\",s:\"73.13%\",l:\"72.86%\"},{h:\"300\",s:\"78.75%\",l:\"22.81%\"},{h:\"237\",s:\"39.96%\",l:\"44.44%\"}],[{h:\"10\",s:\"2.49%\",l:\"31.28%\"},{h:\"325\",s:\"10.55%\",l:\"92.59%\"},{h:\"63\",s:\"46.83%\",l:\"49.37%\"}],[{h:\"159\",s:\"64.01%\",l:\"93.87%\"},{h:\"112\",s:\"6.35%\",l:\"43.39%\"},{h:\"354\",s:\"41.99%\",l:\"45.12%\"}],[{h:\"320\",s:\"66.84%\",l:\"20.93%\"},{h:\"22\",s:\"55.90%\",l:\"77.99%\"},{h:\"110\",s:\"64.62%\",l:\"81.00%\"}],[{h:\"268\",s:\"88.43%\",l:\"94.35%\"},{h:\"352\",s:\"30.31%\",l:\"28.41%\"},{h:\"349\",s:\"40.27%\",l:\"52.45%\"}],[{h:\"174\",s:\"79.20%\",l:\"5.30%\"},{h:\"163\",s:\"69.13%\",l:\"48.57%\"},{h:\"343\",s:\"88.88%\",l:\"41.36%\"}],[{h:\"254\",s:\"48.04%\",l:\"3.37%\"},{h:\"80\",s:\"53.59%\",l:\"90.85%\"},{h:\"17\",s:\"36.85%\",l:\"63.57%\"}],[{h:\"261\",s:\"13.47%\",l:\"6.49%\"},{h:\"43\",s:\"79.13%\",l:\"88.34%\"},{h:\"61\",s:\"5.40%\",l:\"36.13%\"}],[{h:\"141\",s:\"7.90%\",l:\"31.03%\"},{h:\"62\",s:\"90.59%\",l:\"82.21%\"},{h:\"339\",s:\"99.00%\",l:\"64.35%\"}],[{h:\"200\",s:\"15.57%\",l:\"23.54%\"},{h:\"355\",s:\"2.72%\",l:\"90.70%\"},{h:\"295\",s:\"52.74%\",l:\"74.84%\"}],[{h:\"296\",s:\"49.86%\",l:\"13.06%\"},{h:\"58\",s:\"28.11%\",l:\"80.36%\"},{h:\"153\",s:\"46.88%\",l:\"34.99%\"}],[{h:\"321\",s:\"64.70%\",l:\"31.49%\"},{h:\"36\",s:\"67.28%\",l:\"98.19%\"},{h:\"173\",s:\"43.35%\",l:\"76.53%\"}],[{h:\"238\",s:\"50.12%\",l:\"37.19%\"},{h:\"166\",s:\"43.48%\",l:\"50.00%\"},{h:\"189\",s:\"88.65%\",l:\"98.01%\"}],[{h:\"300\",s:\"45.39%\",l:\"16.10%\"},{h:\"269\",s:\"84.61%\",l:\"97.31%\"},{h:\"205\",s:\"57.86%\",l:\"51.93%\"}],[{h:\"301\",s:\"88.74%\",l:\"4.74%\"},{h:\"329\",s:\"95.45%\",l:\"62.28%\"},{h:\"160\",s:\"53.91%\",l:\"57.89%\"}],[{h:\"200\",s:\"61.48%\",l:\"35.49%\"},{h:\"7\",s:\"56.32%\",l:\"95.99%\"},{h:\"23\",s:\"84.27%\",l:\"77.63%\"}],[{h:\"339\",s:\"75.26%\",l:\"37.03%\"},{h:\"87\",s:\"73.05%\",l:\"80.12%\"},{h:\"270\",s:\"35.82%\",l:\"94.54%\"}],[{h:\"291\",s:\"25.41%\",l:\"21.14%\"},{h:\"160\",s:\"78.00%\",l:\"89.30%\"},{h:\"57\",s:\"77.40%\",l:\"63.04%\"}],[{h:\"236\",s:\"28.11%\",l:\"34.85%\"},{h:\"353\",s:\"52.60%\",l:\"60.16%\"},{h:\"192\",s:\"70.87%\",l:\"94.15%\"}],[{h:\"319\",s:\"2.91%\",l:\"49.57%\"},{h:\"245\",s:\"51.06%\",l:\"99.49%\"},{h:\"114\",s:\"41.06%\",l:\"71.04%\"}],[{h:\"310\",s:\"52.95%\",l:\"21.65%\"},{h:\"160\",s:\"66.29%\",l:\"47.49%\"},{h:\"297\",s:\"12.96%\",l:\"91.21%\"}],[{h:\"170\",s:\"7.45%\",l:\"14.69%\"},{h:\"284\",s:\"32.20%\",l:\"77.05%\"},{h:\"64\",s:\"52.35%\",l:\"68.26%\"}],[{h:\"298\",s:\"80.12%\",l:\"1.79%\"},{h:\"164\",s:\"27.84%\",l:\"30.53%\"},{h:\"326\",s:\"92.50%\",l:\"62.14%\"}],[{h:\"309\",s:\"61.85%\",l:\"22.89%\"},{h:\"217\",s:\"83.53%\",l:\"89.98%\"},{h:\"32\",s:\"67.74%\",l:\"87.20%\"}],[{h:\"216\",s:\"28.00%\",l:\"37.25%\"},{h:\"172\",s:\"49.41%\",l:\"62.81%\"},{h:\"34\",s:\"85.91%\",l:\"71.57%\"}],[{h:\"48\",s:\"56.60%\",l:\"22.79%\"},{h:\"145\",s:\"73.15%\",l:\"97.65%\"},{h:\"21\",s:\"2.92%\",l:\"66.44%\"}],[{h:\"189\",s:\"55.96%\",l:\"11.33%\"},{h:\"36\",s:\"44.36%\",l:\"87.71%\"},{h:\"343\",s:\"47.70%\",l:\"48.81%\"}],[{h:\"333\",s:\"12.80%\",l:\"38.86%\"},{h:\"12\",s:\"56.41%\",l:\"66.79%\"},{h:\"354\",s:\"80.73%\",l:\"95.25%\"}],[{h:\"261\",s:\"53.02%\",l:\"11.85%\"},{h:\"165\",s:\"24.17%\",l:\"58.77%\"},{h:\"101\",s:\"23.25%\",l:\"87.91%\"}],[{h:\"316\",s:\"18.99%\",l:\"13.27%\"},{h:\"187\",s:\"23.98%\",l:\"91.64%\"},{h:\"189\",s:\"37.74%\",l:\"55.58%\"}],[{h:\"55\",s:\"13.37%\",l:\"2.95%\"},{h:\"187\",s:\"38.30%\",l:\"33.34%\"},{h:\"66\",s:\"76.30%\",l:\"92.92%\"}],[{h:\"203\",s:\"62.35%\",l:\"27.23%\"},{h:\"267\",s:\"53.11%\",l:\"96.26%\"},{h:\"293\",s:\"6.17%\",l:\"71.27%\"}],[{h:\"4\",s:\"22.26%\",l:\"30.73%\"},{h:\"61\",s:\"80.22%\",l:\"86.92%\"},{h:\"12\",s:\"98.59%\",l:\"82.86%\"}],[{h:\"277\",s:\"11.16%\",l:\"41.71%\"},{h:\"276\",s:\"32.83%\",l:\"86.60%\"},{h:\"180\",s:\"73.86%\",l:\"55.83%\"}],[{h:\"248\",s:\"16.33%\",l:\"31.01%\"},{h:\"134\",s:\"73.04%\",l:\"97.38%\"},{h:\"110\",s:\"14.72%\",l:\"74.77%\"}],[{h:\"213\",s:\"96.28%\",l:\"13.85%\"},{h:\"166\",s:\"56.05%\",l:\"35.64%\"},{h:\"80\",s:\"83.16%\",l:\"48.06%\"}],[{h:\"105\",s:\"80.86%\",l:\"97.49%\"},{h:\"132\",s:\"32.93%\",l:\"51.12%\"},{h:\"342\",s:\"58.33%\",l:\"58.73%\"}],[{h:\"260\",s:\"37.13%\",l:\"61.55%\"},{h:\"75\",s:\"91.41%\",l:\"77.87%\"},{h:\"352\",s:\"9.04%\",l:\"96.61%\"}],[{h:\"308\",s:\"31.78%\",l:\"34.24%\"},{h:\"78\",s:\"45.84%\",l:\"90.01%\"},{h:\"21\",s:\"39.07%\",l:\"78.34%\"}],[{h:\"221\",s:\"27.43%\",l:\"62.88%\"},{h:\"169\",s:\"90.57%\",l:\"92.33%\"},{h:\"353\",s:\"76.02%\",l:\"83.74%\"}],[{h:\"239\",s:\"22.76%\",l:\"28.87%\"},{h:\"86\",s:\"94.85%\",l:\"96.90%\"},{h:\"5\",s:\"8.97%\",l:\"59.05%\"}],[{h:\"333\",s:\"53.73%\",l:\"3.12%\"},{h:\"183\",s:\"15.33%\",l:\"79.14%\"},{h:\"330\",s:\"71.21%\",l:\"61.44%\"}],[{h:\"282\",s:\"38.76%\",l:\"32.29%\"},{h:\"36\",s:\"59.02%\",l:\"92.49%\"},{h:\"40\",s:\"79.58%\",l:\"56.29%\"}],[{h:\"25\",s:\"48.93%\",l:\"14.15%\"},{h:\"195\",s:\"50.08%\",l:\"98.83%\"},{h:\"348\",s:\"27.50%\",l:\"62.68%\"}],[{h:\"239\",s:\"23.21%\",l:\"14.20%\"},{h:\"189\",s:\"82.04%\",l:\"45.48%\"},{h:\"180\",s:\"4.76%\",l:\"91.11%\"}],[{h:\"230\",s:\"30.76%\",l:\"19.12%\"},{h:\"353\",s:\"63.36%\",l:\"98.03%\"},{h:\"211\",s:\"31.20%\",l:\"56.15%\"}],[{h:\"65\",s:\"16.74%\",l:\"18.66%\"},{h:\"239\",s:\"4.94%\",l:\"96.79%\"},{h:\"342\",s:\"48.19%\",l:\"65.39%\"}],[{h:\"86\",s:\"89.41%\",l:\"91.36%\"},{h:\"328\",s:\"59.60%\",l:\"56.08%\"},{h:\"221\",s:\"36.29%\",l:\"36.76%\"}],[{h:\"274\",s:\"14.67%\",l:\"26.18%\"},{h:\"180\",s:\"53.68%\",l:\"96.63%\"},{h:\"337\",s:\"70.15%\",l:\"54.44%\"}],[{h:\"284\",s:\"27.78%\",l:\"6.04%\"},{h:\"248\",s:\"20.49%\",l:\"53.88%\"},{h:\"289\",s:\"55.72%\",l:\"82.05%\"}],[{h:\"315\",s:\"43.62%\",l:\"10.78%\"},{h:\"179\",s:\"9.54%\",l:\"85.47%\"},{h:\"34\",s:\"85.91%\",l:\"32.09%\"}],[{h:\"311\",s:\"12.55%\",l:\"24.66%\"},{h:\"148\",s:\"32.00%\",l:\"53.15%\"},{h:\"117\",s:\"15.81%\",l:\"95.37%\"}],[{h:\"319\",s:\"3.31%\",l:\"37.42%\"},{h:\"32\",s:\"72.69%\",l:\"97.31%\"},{h:\"348\",s:\"59.89%\",l:\"62.13%\"}],[{h:\"224\",s:\"60.40%\",l:\"5.10%\"},{h:\"89\",s:\"58.45%\",l:\"89.74%\"},{h:\"201\",s:\"16.03%\",l:\"33.19%\"}],[{h:\"350\",s:\"41.44%\",l:\"51.42%\"},{h:\"52\",s:\"99.28%\",l:\"3.84%\"},{h:\"172\",s:\"55.70%\",l:\"78.74%\"}],[{h:\"5\",s:\"83.50%\",l:\"1.42%\"},{h:\"54\",s:\"24.68%\",l:\"89.28%\"},{h:\"74\",s:\"55.39%\",l:\"23.28%\"}],[{h:\"199\",s:\"92.34%\",l:\"18.73%\"},{h:\"49\",s:\"83.21%\",l:\"90.68%\"},{h:\"209\",s:\"59.43%\",l:\"45.22%\"}],[{h:\"27\",s:\"43.06%\",l:\"0.30%\"},{h:\"289\",s:\"1.43%\",l:\"40.57%\"},{h:\"152\",s:\"0.09%\",l:\"74.67%\"}],[{h:\"195\",s:\"57.29%\",l:\"42.23%\"},{h:\"33\",s:\"85.71%\",l:\"82.72%\"},{h:\"148\",s:\"42.81%\",l:\"16.01%\"}],[{h:\"251\",s:\"30.81%\",l:\"17.96%\"},{h:\"281\",s:\"28.87%\",l:\"89.23%\"},{h:\"324\",s:\"9.93%\",l:\"57.13%\"}],[{h:\"188\",s:\"86.17%\",l:\"4.54%\"},{h:\"75\",s:\"87.84%\",l:\"93.98%\"},{h:\"11\",s:\"42.08%\",l:\"49.45%\"}],[{h:\"225\",s:\"59.20%\",l:\"18.32%\"},{h:\"168\",s:\"47.44%\",l:\"73.27%\"},{h:\"92\",s:\"92.44%\",l:\"81.24%\"}],[{h:\"58\",s:\"31.67%\",l:\"4.56%\"},{h:\"280\",s:\"16.36%\",l:\"92.22%\"},{h:\"178\",s:\"67.37%\",l:\"41.86%\"}],[{h:\"359\",s:\"63.85%\",l:\"35.33%\"},{h:\"56\",s:\"36.94%\",l:\"65.92%\"},{h:\"195\",s:\"23.46%\",l:\"7.65%\"}],[{h:\"216\",s:\"73.78%\",l:\"46.15%\"},{h:\"195\",s:\"97.98%\",l:\"68.61%\"},{h:\"31\",s:\"86.06%\",l:\"69.46%\"}],[{h:\"268\",s:\"10.51%\",l:\"66.99%\"},{h:\"290\",s:\"35.43%\",l:\"96.94%\"},{h:\"122\",s:\"82.82%\",l:\"87.73%\"}],[{h:\"306\",s:\"23.36%\",l:\"97.94%\"},{h:\"196\",s:\"55.90%\",l:\"80.55%\"},{h:\"5\",s:\"82.57%\",l:\"60.60%\"}],[{h:\"25\",s:\"17.65%\",l:\"5.18%\"},{h:\"202\",s:\"40.70%\",l:\"78.28%\"},{h:\"344\",s:\"79.86%\",l:\"76.10%\"}],[{h:\"337\",s:\"43.46%\",l:\"7.41%\"},{h:\"40\",s:\"1.77%\",l:\"41.23%\"},{h:\"66\",s:\"54.96%\",l:\"73.43%\"}],[{h:\"18\",s:\"22.13%\",l:\"92.13%\"},{h:\"269\",s:\"31.54%\",l:\"67.99%\"},{h:\"351\",s:\"85.67%\",l:\"67.99%\"}],[{h:\"273\",s:\"20.84%\",l:\"33.04%\"},{h:\"66\",s:\"31.38%\",l:\"66.94%\"},{h:\"103\",s:\"12.81%\",l:\"87.98%\"}],[{h:\"343\",s:\"28.50%\",l:\"42.83%\"},{h:\"163\",s:\"87.52%\",l:\"92.81%\"},{h:\"141\",s:\"55.98%\",l:\"20.12%\"}],[{h:\"204\",s:\"7.99%\",l:\"88.94%\"},{h:\"280\",s:\"29.17%\",l:\"21.20%\"},{h:\"128\",s:\"29.10%\",l:\"61.63%\"}],[{h:\"299\",s:\"81.95%\",l:\"7.16%\"},{h:\"338\",s:\"16.68%\",l:\"60.40%\"},{h:\"39\",s:\"53.18%\",l:\"75.90%\"}],[{h:\"339\",s:\"82.76%\",l:\"4.22%\"},{h:\"197\",s:\"67.17%\",l:\"50.95%\"},{h:\"345\",s:\"72.39%\",l:\"47.62%\"}],[{h:\"210\",s:\"47.82%\",l:\"63.35%\"},{h:\"292\",s:\"7.42%\",l:\"95.82%\"},{h:\"337\",s:\"65.89%\",l:\"66.00%\"}],[{h:\"215\",s:\"67.16%\",l:\"46.60%\"},{h:\"147\",s:\"21.41%\",l:\"4.07%\"},{h:\"66\",s:\"25.89%\",l:\"95.86%\"}],[{h:\"228\",s:\"29.41%\",l:\"53.17%\"},{h:\"52\",s:\"94.24%\",l:\"98.19%\"},{h:\"246\",s:\"31.81%\",l:\"65.23%\"}],[{h:\"252\",s:\"14.10%\",l:\"15.00%\"},{h:\"189\",s:\"48.21%\",l:\"53.80%\"},{h:\"143\",s:\"19.61%\",l:\"85.22%\"}],[{h:\"229\",s:\"19.78%\",l:\"33.08%\"},{h:\"179\",s:\"7.82%\",l:\"83.83%\"},{h:\"334\",s:\"47.46%\",l:\"48.90%\"}],[{h:\"52\",s:\"25.14%\",l:\"12.82%\"},{h:\"195\",s:\"20.35%\",l:\"62.80%\"},{h:\"17\",s:\"97.91%\",l:\"48.46%\"}],[{h:\"292\",s:\"63.19%\",l:\"22.48%\"},{h:\"139\",s:\"31.23%\",l:\"94.80%\"},{h:\"187\",s:\"66.30%\",l:\"55.14%\"}],[{h:\"359\",s:\"26.28%\",l:\"12.62%\"},{h:\"29\",s:\"80.19%\",l:\"75.08%\"},{h:\"217\",s:\"24.72%\",l:\"66.61%\"}],[{h:\"222\",s:\"82.62%\",l:\"5.67%\"},{h:\"80\",s:\"5.02%\",l:\"99.97%\"},{h:\"329\",s:\"22.84%\",l:\"54.72%\"}],[{h:\"273\",s:\"2.93%\",l:\"2.73%\"},{h:\"3\",s:\"38.64%\",l:\"41.82%\"},{h:\"177\",s:\"63.69%\",l:\"44.93%\"}],[{h:\"239\",s:\"16.07%\",l:\"33.39%\"},{h:\"344\",s:\"41.40%\",l:\"60.89%\"},{h:\"337\",s:\"63.76%\",l:\"98.11%\"}],[{h:\"128\",s:\"41.77%\",l:\"96.41%\"},{h:\"331\",s:\"73.29%\",l:\"34.06%\"},{h:\"290\",s:\"8.59%\",l:\"27.46%\"}],[{h:\"187\",s:\"44.57%\",l:\"37.14%\"},{h:\"194\",s:\"39.70%\",l:\"96.68%\"},{h:\"12\",s:\"88.06%\",l:\"44.90%\"}],[{h:\"226\",s:\"41.01%\",l:\"28.10%\"},{h:\"122\",s:\"72.77%\",l:\"86.14%\"},{h:\"339\",s:\"67.89%\",l:\"49.59%\"}],[{h:\"159\",s:\"22.16%\",l:\"9.78%\"},{h:\"168\",s:\"72.37%\",l:\"67.16%\"},{h:\"327\",s:\"84.54%\",l:\"41.44%\"}],[{h:\"164\",s:\"41.34%\",l:\"9.61%\"},{h:\"185\",s:\"41.26%\",l:\"54.98%\"},{h:\"121\",s:\"38.85%\",l:\"98.14%\"}],[{h:\"267\",s:\"22.02%\",l:\"21.98%\"},{h:\"145\",s:\"14.16%\",l:\"99.77%\"},{h:\"325\",s:\"74.41%\",l:\"53.73%\"}],[{h:\"54\",s:\"3.62%\",l:\"96.06%\"},{h:\"331\",s:\"56.37%\",l:\"52.28%\"},{h:\"271\",s:\"45.54%\",l:\"40.90%\"}],[{h:\"285\",s:\"7.77%\",l:\"15.78%\"},{h:\"214\",s:\"13.90%\",l:\"87.05%\"},{h:\"52\",s:\"91.72%\",l:\"33.91%\"}],[{h:\"359\",s:\"36.79%\",l:\"32.14%\"},{h:\"173\",s:\"9.63%\",l:\"87.23%\"},{h:\"259\",s:\"0.01%\",l:\"67.46%\"}],[{h:\"211\",s:\"41.53%\",l:\"38.02%\"},{h:\"62\",s:\"89.01%\",l:\"94.29%\"},{h:\"6\",s:\"75.36%\",l:\"83.85%\"}],[{h:\"63\",s:\"91.46%\",l:\"8.43%\"},{h:\"198\",s:\"64.13%\",l:\"60.91%\"},{h:\"26\",s:\"72.12%\",l:\"50.76%\"}],[{h:\"110\",s:\"38.90%\",l:\"17.56%\"},{h:\"84\",s:\"64.61%\",l:\"40.36%\"},{h:\"38\",s:\"50.45%\",l:\"89.31%\"}],[{h:\"343\",s:\"19.49%\",l:\"16.88%\"},{h:\"194\",s:\"11.08%\",l:\"86.50%\"},{h:\"206\",s:\"30.62%\",l:\"63.55%\"}],[{h:\"223\",s:\"49.20%\",l:\"59.45%\"},{h:\"48\",s:\"85.11%\",l:\"97.99%\"},{h:\"321\",s:\"80.59%\",l:\"88.23%\"}],[{h:\"240\",s:\"33.67%\",l:\"65.07%\"},{h:\"173\",s:\"84.99%\",l:\"96.45%\"},{h:\"338\",s:\"80.72%\",l:\"62.41%\"}],[{h:\"300\",s:\"15.10%\",l:\"25.07%\"},{h:\"129\",s:\"7.49%\",l:\"95.72%\"},{h:\"26\",s:\"93.60%\",l:\"38.54%\"}],[{h:\"276\",s:\"63.02%\",l:\"14.37%\"},{h:\"195\",s:\"31.26%\",l:\"39.88%\"},{h:\"9\",s:\"88.64%\",l:\"58.06%\"}],[{h:\"290\",s:\"27.58%\",l:\"11.98%\"},{h:\"58\",s:\"49.98%\",l:\"96.72%\"},{h:\"160\",s:\"68.65%\",l:\"72.55%\"}],[{h:\"157\",s:\"38.95%\",l:\"96.97%\"},{h:\"3\",s:\"59.55%\",l:\"60.04%\"},{h:\"169\",s:\"51.56%\",l:\"42.38%\"}],[{h:\"341\",s:\"19.05%\",l:\"11.20%\"},{h:\"201\",s:\"34.39%\",l:\"31.45%\"},{h:\"328\",s:\"92.26%\",l:\"97.73%\"}],[{h:\"308\",s:\"52.16%\",l:\"17.67%\"},{h:\"138\",s:\"39.15%\",l:\"67.01%\"},{h:\"233\",s:\"66.36%\",l:\"93.64%\"}],[{h:\"111\",s:\"14.68%\",l:\"38.91%\"},{h:\"62\",s:\"33.20%\",l:\"90.87%\"},{h:\"141\",s:\"49.62%\",l:\"17.00%\"}],[{h:\"207\",s:\"50.66%\",l:\"25.66%\"},{h:\"198\",s:\"4.68%\",l:\"92.56%\"},{h:\"49\",s:\"68.07%\",l:\"56.62%\"}],[{h:\"133\",s:\"87.33%\",l:\"2.77%\"},{h:\"198\",s:\"61.08%\",l:\"24.70%\"},{h:\"344\",s:\"99.63%\",l:\"56.94%\"}],[{h:\"286\",s:\"53.10%\",l:\"17.49%\"},{h:\"188\",s:\"10.25%\",l:\"91.43%\"},{h:\"202\",s:\"50.86%\",l:\"72.82%\"}],[{h:\"221\",s:\"8.86%\",l:\"55.55%\"},{h:\"313\",s:\"38.90%\",l:\"83.28%\"},{h:\"72\",s:\"21.11%\",l:\"91.25%\"}],[{h:\"189\",s:\"56.87%\",l:\"28.98%\"},{h:\"256\",s:\"74.19%\",l:\"92.34%\"},{h:\"307\",s:\"67.77%\",l:\"71.33%\"}],[{h:\"273\",s:\"17.43%\",l:\"14.23%\"},{h:\"35\",s:\"65.18%\",l:\"43.37%\"},{h:\"318\",s:\"52.70%\",l:\"98.06%\"}],[{h:\"244\",s:\"17.21%\",l:\"42.06%\"},{h:\"6\",s:\"37.11%\",l:\"96.59%\"},{h:\"75\",s:\"27.64%\",l:\"8.88%\"}],[{h:\"19\",s:\"15.39%\",l:\"13.92%\"},{h:\"85\",s:\"4.45%\",l:\"96.46%\"},{h:\"61\",s:\"32.19%\",l:\"68.45%\"}],[{h:\"143\",s:\"31.90%\",l:\"1.21%\"},{h:\"325\",s:\"29.95%\",l:\"50.20%\"},{h:\"77\",s:\"4.28%\",l:\"78.39%\"}],[{h:\"301\",s:\"59.84%\",l:\"14.54%\"},{h:\"282\",s:\"10.45%\",l:\"99.98%\"},{h:\"324\",s:\"37.95%\",l:\"45.18%\"}],[{h:\"209\",s:\"13.02%\",l:\"40.57%\"},{h:\"117\",s:\"9.32%\",l:\"73.42%\"},{h:\"5\",s:\"27.80%\",l:\"50.13%\"}],[{h:\"330\",s:\"50.33%\",l:\"4.89%\"},{h:\"68\",s:\"61.77%\",l:\"79.18%\"},{h:\"338\",s:\"90.75%\",l:\"67.47%\"}],[{h:\"96\",s:\"57.83%\",l:\"5.41%\"},{h:\"224\",s:\"43.57%\",l:\"68.49%\"},{h:\"34\",s:\"70.24%\",l:\"58.90%\"}],[{h:\"242\",s:\"30.07%\",l:\"44.29%\"},{h:\"240\",s:\"60.26%\",l:\"96.10%\"},{h:\"179\",s:\"96.71%\",l:\"40.23%\"}],[{h:\"319\",s:\"78.24%\",l:\"1.71%\"},{h:\"72\",s:\"41.59%\",l:\"91.62%\"},{h:\"7\",s:\"90.55%\",l:\"64.51%\"}],[{h:\"286\",s:\"15.28%\",l:\"17.01%\"},{h:\"144\",s:\"18.76%\",l:\"99.49%\"},{h:\"227\",s:\"57.30%\",l:\"60.23%\"}],[{h:\"185\",s:\"46.36%\",l:\"25.05%\"},{h:\"185\",s:\"48.44%\",l:\"55.42%\"},{h:\"45\",s:\"81.37%\",l:\"62.56%\"}],[{h:\"47\",s:\"53.33%\",l:\"4.29%\"},{h:\"225\",s:\"2.46%\",l:\"71.79%\"},{h:\"202\",s:\"7.49%\",l:\"35.10%\"}],[{h:\"167\",s:\"70.33%\",l:\"2.46%\"},{h:\"119\",s:\"31.06%\",l:\"63.72%\"},{h:\"303\",s:\"62.05%\",l:\"83.41%\"}],[{h:\"323\",s:\"30.10%\",l:\"49.10%\"},{h:\"243\",s:\"94.77%\",l:\"87.87%\"},{h:\"37\",s:\"72.57%\",l:\"74.70%\"}],[{h:\"54\",s:\"49.97%\",l:\"3.97%\"},{h:\"169\",s:\"12.19%\",l:\"99.28%\"},{h:\"150\",s:\"88.99%\",l:\"73.54%\"}],[{h:\"246\",s:\"6.80%\",l:\"24.53%\"},{h:\"310\",s:\"32.39%\",l:\"95.00%\"},{h:\"267\",s:\"18.19%\",l:\"75.38%\"}],[{h:\"6\",s:\"85.05%\",l:\"30.65%\"},{h:\"108\",s:\"17.29%\",l:\"83.97%\"},{h:\"279\",s:\"13.45%\",l:\"13.87%\"}],[{h:\"344\",s:\"81.21%\",l:\"24.46%\"},{h:\"87\",s:\"97.22%\",l:\"86.42%\"},{h:\"21\",s:\"73.16%\",l:\"66.92%\"}],[{h:\"186\",s:\"84.52%\",l:\"6.08%\"},{h:\"167\",s:\"74.10%\",l:\"60.40%\"},{h:\"32\",s:\"17.76%\",l:\"88.10%\"}],[{h:\"236\",s:\"9.11%\",l:\"43.63%\"},{h:\"243\",s:\"25.96%\",l:\"81.27%\"},{h:\"312\",s:\"62.90%\",l:\"71.00%\"}],[{h:\"228\",s:\"53.68%\",l:\"65.59%\"},{h:\"89\",s:\"79.69%\",l:\"91.35%\"},{h:\"327\",s:\"62.89%\",l:\"47.13%\"}],[{h:\"206\",s:\"54.39%\",l:\"43.61%\"},{h:\"36\",s:\"46.57%\",l:\"92.33%\"},{h:\"113\",s:\"38.94%\",l:\"13.27%\"}],[{h:\"3\",s:\"85.72%\",l:\"6.76%\"},{h:\"69\",s:\"73.91%\",l:\"91.95%\"},{h:\"207\",s:\"89.89%\",l:\"37.99%\"}],[{h:\"235\",s:\"60.13%\",l:\"35.81%\"},{h:\"322\",s:\"54.68%\",l:\"43.25%\"},{h:\"232\",s:\"34.71%\",l:\"88.02%\"}],[{h:\"225\",s:\"51.96%\",l:\"27.25%\"},{h:\"63\",s:\"31.79%\",l:\"98.66%\"},{h:\"264\",s:\"22.48%\",l:\"50.68%\"}],[{h:\"332\",s:\"70.42%\",l:\"5.04%\"},{h:\"66\",s:\"35.73%\",l:\"96.02%\"},{h:\"66\",s:\"7.06%\",l:\"40.27%\"}],[{h:\"208\",s:\"75.46%\",l:\"25.69%\"},{h:\"183\",s:\"74.62%\",l:\"97.67%\"},{h:\"182\",s:\"43.23%\",l:\"58.01%\"}],[{h:\"227\",s:\"26.30%\",l:\"2.87%\"},{h:\"12\",s:\"31.22%\",l:\"53.94%\"},{h:\"49\",s:\"11.92%\",l:\"94.24%\"}],[{h:\"203\",s:\"95.64%\",l:\"54.72%\"},{h:\"76\",s:\"70.63%\",l:\"96.44%\"},{h:\"330\",s:\"57.98%\",l:\"69.82%\"}],[{h:\"268\",s:\"4.21%\",l:\"34.51%\"},{h:\"33\",s:\"66.58%\",l:\"93.77%\"},{h:\"36\",s:\"11.48%\",l:\"76.30%\"}],[{h:\"258\",s:\"64.08%\",l:\"2.98%\"},{h:\"33\",s:\"1.64%\",l:\"91.50%\"},{h:\"31\",s:\"20.59%\",l:\"30.57%\"}],[{h:\"335\",s:\"57.15%\",l:\"27.11%\"},{h:\"348\",s:\"7.72%\",l:\"99.39%\"},{h:\"156\",s:\"85.05%\",l:\"85.55%\"}],[{h:\"8\",s:\"55.64%\",l:\"95.44%\"},{h:\"171\",s:\"31.18%\",l:\"65.96%\"},{h:\"359\",s:\"44.91%\",l:\"68.38%\"}],[{h:\"232\",s:\"1.30%\",l:\"22.19%\"},{h:\"139\",s:\"11.98%\",l:\"69.82%\"},{h:\"345\",s:\"80.85%\",l:\"42.10%\"}],[{h:\"82\",s:\"84.39%\",l:\"6.09%\"},{h:\"254\",s:\"12.58%\",l:\"64.17%\"},{h:\"26\",s:\"93.31%\",l:\"67.88%\"}],[{h:\"309\",s:\"79.12%\",l:\"26.42%\"},{h:\"292\",s:\"38.99%\",l:\"80.35%\"},{h:\"165\",s:\"76.97%\",l:\"80.03%\"}],[{h:\"273\",s:\"52.47%\",l:\"19.21%\"},{h:\"72\",s:\"95.42%\",l:\"82.29%\"},{h:\"170\",s:\"28.39%\",l:\"50.54%\"}],[{h:\"280\",s:\"25.30%\",l:\"19.75%\"},{h:\"149\",s:\"84.51%\",l:\"66.30%\"},{h:\"323\",s:\"87.96%\",l:\"54.70%\"}],[{h:\"162\",s:\"36.39%\",l:\"2.43%\"},{h:\"54\",s:\"37.08%\",l:\"76.33%\"},{h:\"357\",s:\"54.48%\",l:\"45.66%\"}],[{h:\"178\",s:\"0.07%\",l:\"19.85%\"},{h:\"177\",s:\"40.38%\",l:\"90.57%\"},{h:\"234\",s:\"17.93%\",l:\"65.73%\"}],[{h:\"277\",s:\"34.25%\",l:\"33.92%\"},{h:\"328\",s:\"21.07%\",l:\"95.34%\"},{h:\"81\",s:\"79.41%\",l:\"55.10%\"}],[{h:\"335\",s:\"36.36%\",l:\"40.26%\"},{h:\"29\",s:\"10.54%\",l:\"98.07%\"},{h:\"36\",s:\"69.21%\",l:\"57.32%\"}],[{h:\"260\",s:\"33.62%\",l:\"47.14%\"},{h:\"181\",s:\"18.07%\",l:\"98.27%\"},{h:\"12\",s:\"72.54%\",l:\"55.35%\"}],[{h:\"231\",s:\"37.30%\",l:\"33.35%\"},{h:\"312\",s:\"76.34%\",l:\"61.67%\"},{h:\"67\",s:\"70.83%\",l:\"82.62%\"}],[{h:\"209\",s:\"76.53%\",l:\"21.32%\"},{h:\"321\",s:\"82.47%\",l:\"69.31%\"},{h:\"77\",s:\"89.99%\",l:\"79.27%\"}],[{h:\"330\",s:\"56.26%\",l:\"16.05%\"},{h:\"338\",s:\"17.20%\",l:\"51.05%\"},{h:\"32\",s:\"81.07%\",l:\"72.37%\"}],[{h:\"204\",s:\"11.17%\",l:\"10.26%\"},{h:\"78\",s:\"26.94%\",l:\"90.36%\"},{h:\"321\",s:\"78.17%\",l:\"76.54%\"}],[{h:\"30\",s:\"44.30%\",l:\"6.40%\"},{h:\"63\",s:\"19.30%\",l:\"96.31%\"},{h:\"19\",s:\"50.72%\",l:\"48.28%\"}],[{h:\"138\",s:\"14.47%\",l:\"1.72%\"},{h:\"1\",s:\"87.83%\",l:\"64.23%\"},{h:\"148\",s:\"89.95%\",l:\"66.04%\"}],[{h:\"271\",s:\"79.38%\",l:\"83.88%\"},{h:\"281\",s:\"5.37%\",l:\"99.00%\"},{h:\"37\",s:\"85.95%\",l:\"83.85%\"}],[{h:\"325\",s:\"77.36%\",l:\"56.63%\"},{h:\"125\",s:\"41.15%\",l:\"99.88%\"},{h:\"103\",s:\"54.42%\",l:\"15.87%\"}],[{h:\"200\",s:\"95.26%\",l:\"50.88%\"},{h:\"54\",s:\"92.53%\",l:\"94.39%\"},{h:\"174\",s:\"84.73%\",l:\"85.23%\"}],[{h:\"291\",s:\"13.89%\",l:\"3.92%\"},{h:\"164\",s:\"24.48%\",l:\"44.23%\"},{h:\"70\",s:\"36.06%\",l:\"83.34%\"}],[{h:\"344\",s:\"9.95%\",l:\"86.40%\"},{h:\"288\",s:\"40.08%\",l:\"19.78%\"},{h:\"208\",s:\"18.49%\",l:\"56.31%\"}],[{h:\"242\",s:\"25.33%\",l:\"6.57%\"},{h:\"233\",s:\"29.99%\",l:\"64.02%\"},{h:\"53\",s:\"72.94%\",l:\"78.76%\"}],[{h:\"302\",s:\"17.74%\",l:\"46.67%\"},{h:\"38\",s:\"33.15%\",l:\"88.39%\"},{h:\"192\",s:\"40.95%\",l:\"78.44%\"}],[{h:\"192\",s:\"76.46%\",l:\"37.09%\"},{h:\"90\",s:\"24.34%\",l:\"93.56%\"},{h:\"332\",s:\"48.06%\",l:\"78.82%\"}],[{h:\"76\",s:\"8.51%\",l:\"16.92%\"},{h:\"75\",s:\"98.16%\",l:\"74.88%\"},{h:\"325\",s:\"78.20%\",l:\"40.87%\"}],[{h:\"333\",s:\"42.68%\",l:\"51.72%\"},{h:\"351\",s:\"23.93%\",l:\"28.34%\"},{h:\"29\",s:\"89.73%\",l:\"80.33%\"}],[{h:\"210\",s:\"51.32%\",l:\"22.94%\"},{h:\"353\",s:\"78.05%\",l:\"71.08%\"},{h:\"202\",s:\"20.63%\",l:\"59.94%\"}],[{h:\"57\",s:\"22.23%\",l:\"5.98%\"},{h:\"312\",s:\"6.20%\",l:\"98.91%\"},{h:\"218\",s:\"46.99%\",l:\"51.51%\"}],[{h:\"280\",s:\"17.00%\",l:\"42.05%\"},{h:\"14\",s:\"94.80%\",l:\"79.76%\"},{h:\"158\",s:\"25.05%\",l:\"83.91%\"}],[{h:\"223\",s:\"63.59%\",l:\"24.15%\"},{h:\"309\",s:\"29.78%\",l:\"63.06%\"},{h:\"63\",s:\"57.98%\",l:\"77.85%\"}],[{h:\"239\",s:\"15.64%\",l:\"24.30%\"},{h:\"356\",s:\"70.29%\",l:\"63.24%\"},{h:\"227\",s:\"32.25%\",l:\"60.60%\"}],[{h:\"40\",s:\"91.62%\",l:\"71.75%\"},{h:\"337\",s:\"66.92%\",l:\"16.61%\"},{h:\"0\",s:\"45.04%\",l:\"63.13%\"}],[{h:\"286\",s:\"14.79%\",l:\"7.28%\"},{h:\"270\",s:\"35.20%\",l:\"61.58%\"},{h:\"168\",s:\"88.56%\",l:\"46.50%\"}],[{h:\"331\",s:\"12.39%\",l:\"24.78%\"},{h:\"40\",s:\"98.53%\",l:\"69.35%\"},{h:\"10\",s:\"34.07%\",l:\"55.69%\"}],[{h:\"225\",s:\"51.73%\",l:\"24.03%\"},{h:\"31\",s:\"30.64%\",l:\"69.69%\"},{h:\"215\",s:\"80.97%\",l:\"92.24%\"}],[{h:\"98\",s:\"69.58%\",l:\"7.29%\"},{h:\"30\",s:\"52.31%\",l:\"80.41%\"},{h:\"156\",s:\"20.73%\",l:\"47.33%\"}],[{h:\"334\",s:\"82.50%\",l:\"8.94%\"},{h:\"152\",s:\"27.29%\",l:\"99.49%\"},{h:\"22\",s:\"23.45%\",l:\"51.15%\"}],[{h:\"175\",s:\"21.76%\",l:\"14.56%\"},{h:\"216\",s:\"54.23%\",l:\"96.00%\"},{h:\"352\",s:\"71.91%\",l:\"61.01%\"}]],randseed=[,,,,];function seedrand(a){randseed.fill(0);for(let b=0;b<a.length;b++)randseed[b%4]=(randseed[b%4]<<5)-randseed[b%4]+a.charCodeAt(b)}function rand(){const a=randseed[0]^randseed[0]<<11;return randseed[0]=randseed[1],randseed[1]=randseed[2],randseed[2]=randseed[3],randseed[3]=randseed[3]^randseed[3]>>19^a^a>>8,(randseed[3]>>>0)/2147483648}function createImageData(a){const b=a,c=Math.ceil(b/2),d=[];for(let e,f=0;f<a;f++){e=[];for(let a=0;a<c;a++)e[a]=Math.floor(2.3*rand());const a=e.slice(0,b-c);a.reverse(),e=e.concat(a);for(let a=0;a<e.length;a++)d.push(e[a])}return d}function fillCircle(a,b,c,d){a.beginPath(),a.arc(b,c,d,0,6.283185307179586),a.fill()}function buildOpts(a){const b={};b.seed=a.seed||Math.floor(10000000000000000*Math.random()).toString(16),seedrand(b.seed),b.size=a.size||8,b.scale=a.scale||4;for(let b=0;18>b;b++)rand();return b}function addColorOpts(a){const b={...a};if(a.bgcolor&&a.color&&a.spotcolor)b.bgcolor=a.bgcolor,b.color=a.color,b.spotcolor=a.spotcolor;else{const a=colorCombinations[Math.floor(rand()*colorCombinations.length)];b.bgcolor=\"hsl(\"+a[0].h+\",\"+a[0].s+\",\"+a[0].l+\")\",b.color=\"hsl(\"+a[1].h+\",\"+a[1].s+\",\"+a[1].l+\")\",b.spotcolor=\"hsl(\"+a[2].h+\",\"+a[2].s+\",\"+a[2].l+\")\"}return b}function renderIcon(a,b){a=buildOpts(a||{});const c=createImageData(a.size),d=Math.sqrt(c.length);a=addColorOpts(a),b.width=b.height=a.size*a.scale;const e=b.getContext(\"2d\");e.fillStyle=a.bgcolor,e.fillRect(0,0,b.width,b.height),e.fillStyle=a.color;const f=a.scale/2;for(let g=0;g<c.length;g++)if(c[g]){const b=Math.floor(g/d),h=g%d;e.fillStyle=1==c[g]?a.color:a.spotcolor,fillCircle(e,f+h*a.scale,f+b*a.scale,.9*f),0<h&&c[g+d-1]&&c[g+d-1]==c[g]&&(e.beginPath(),e.moveTo(f+(h-.4)*a.scale,f+(b-.2)*a.scale),e.bezierCurveTo(f+(h-.4)*a.scale,f+(b+.4)*a.scale,f+(h-.6)*a.scale,f+(b+.6)*a.scale,f+(h-1.2)*a.scale,f+(b+.6)*a.scale),e.lineTo(f+(h-.6)*a.scale,f+(b+1.2)*a.scale),e.bezierCurveTo(f+(h-.6)*a.scale,f+(b+.6)*a.scale,f+(h-.4)*a.scale,f+(b+.4)*a.scale,f+(h+.2)*a.scale,f+(b+.4)*a.scale),e.fill()),h<d-1&&c[g+d+1]&&c[g+d+1]==c[g]&&(e.beginPath(),e.moveTo(f+(h+.4)*a.scale,f+(b-.2)*a.scale),e.bezierCurveTo(f+(h+.4)*a.scale,f+(b+.4)*a.scale,f+(h+.6)*a.scale,f+(b+.6)*a.scale,f+(h+1.2)*a.scale,f+(b+.6)*a.scale),e.lineTo(f+(h+.6)*a.scale,f+(b+1.2)*a.scale),e.bezierCurveTo(f+(h+.6)*a.scale,f+(b+.6)*a.scale,f+(h+.4)*a.scale,f+(b+.4)*a.scale,f+(h-.2)*a.scale,f+(b+.4)*a.scale),e.fill())}return b}function createIcon(a){var b=document.createElement(\"canvas\");return renderIcon(a,b),b}exports.renderIcon=renderIcon,exports.createIcon=createIcon;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"cpupow.worker.js\");\n}\n","var map = {\n\t\"./de.json\": [\n\t\t23634,\n\t\t\"translation0\"\n\t],\n\t\"./en.json\": [\n\t\t40502,\n\t\t\"translation1\"\n\t],\n\t\"./es.json\": [\n\t\t84268,\n\t\t\"translation2\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9086;\nmodule.exports = webpackAsyncContext;","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["environment","i0","_r16","ctx_r26","_r21","_r39","_r34","ctx_r44","AppComponent","constructor","walletService","addressBook","settings","websocket","notifications","nodeService","representative","router","updates","workPool","price","util","desktop","ledger","renderer","deeplinkService","translate","wallet","node","isConfigured","donationAddress","events","subscribe","closeNav","onResize","e","onWindowResize","target","onGlobalClick","event","selectButton","nativeElement","contains","accountsDropdown","showAccountsDropdown","ngOnInit","window","loadAppSettings","updateAppTheme","patchXrbToNanoPrefixData","setActiveLang","language","loadAddressBook","loadWorkCache","loadStoredWallet","entry","trackTransactions","trackAddress","account","location","pathname","endsWith","selectedAccountId","navigate","queryParams","replaceUrl","currentUpdatedAccount","accounts","find","a","id","selectedAccount","reloadBalances","path","localStorage","getItem","search","fragment","removeItem","length","urlSearch","URLSearchParams","forEach","value","key","connect","loadRepresentativeList","locked","hasPendingTransactions","pendingOption","sendWarning","identifier","addEventListener","lockWallet","on","deeplink","send","available","console","log","current","hash","sendInfo","activated","sendSuccess","setInterval","inactiveSeconds","lockInactivityMinutes","password","serverAPI","updateFiatPrices","err","windowObject","innerWidth","innerHeight","isMobileBarVisible","innerHeightWithoutMobileBar","walletVersion","patchOldSavedData","patchXrbPrefixData","setAppSetting","applySwUpdate","activateUpdate","toggleNav","navExpanded","onNavExpandedChange","navAnimating","setTimeout","toggleLightMode","canToggleLightMode","lightModeEnabled","addClass","document","body","removeClass","toggleAccountsDropdown","scrollTop","selectAccount","selectedAccount$","next","saveWalletExport","performSearch","searchData","trim","isValidNanoAccount","startsWith","isValidAccount","isValidBlockHash","nano","isValidHash","blockHash","toUpperCase","updateIdleTime","retryConnection","displayCurrency","getAppSetting","getPrice","reloadFiatBalances","fiatTimeout","selectors","viewQuery","ctx","_r3","_r8","ChildActivationEnd","NavigationEnd","formatDate","QRCode","BigNumber","BehaviorSubject","nanocurrency","_r40","ctx_r1","ctx_r46","ctx_r49","ctx_r59","_r60","_r54","_r57","ctx_r74","ctx_r76","ctx_r79","transaction_r78","ctx_r12","ctx_r85","ctx_r14","ctx_r89","ctx_r92","ctx_r107","ctx_r111","_r101","ctx_r115","ctx_r18","ctx_r121","ctx_r142","ctx_r20","ctx_r146","ctx_r148","ctx_r150","ctx_r157","ctx_r159","ctx_r163","ctx_r164","ctx_r166","ctx_r167","ctx_r168","ctx_r170","ctx_r172","ctx_r180","ctx_r182","ctx_r184","ctx_r185","ctx_r186","ctx_r187","ctx_r189","ctx_r191","ctx_r193","ctx_r195","ctx_r36","ctx_r205","ctx_r207","ctx_r212","ctx_r216","ctx_r218","ctx_r219","AccountDetailsComponent","http","route","api","repService","nanoBlock","qrModalService","ninja","translocoService","isNaN","name","shortName","amounts","blockTypes","val","clearRemoteVars","loadKnown","params","snapshot","remoteVisible","sign","showAdvancedOptions","showFullDetailsOnSmallViewports","compact","routerSub","loadAccountDetails","mobileTransactionMenuModal","hide","priceSub","lastPrice$","balanceFiat","rawToMnano","balance","times","lastPrice","toNumber","pendingFiat","pending","pendingBlocksUpdate$","receivableBlockUpdate","onReceivableBlockUpdate","UIkit","qrModal","modal","mobileAccountMenuModal","initialLoadDone","populateRepresentativeList","walletReps$","reps","representativesOverview","updateRepresentativeInfo","localReps","getSortedRepresentatives","representativeList","push","filter","rep","warn","verifiedReps","recommendedRandomized","temprep","alias","clearAccountVars","accountHistory","pendingBlocks","accountID","addressBookEntry","addressBookModel","showEditAddressBook","walletAccount","qrCodeImage","selectedAmount","amount","amountRaw","amountFiat","rawAmount","fromAccount","toAccount","toAccountID","toAddressBook","toAccountStatus","repStatus","qrString","qrCodeImageBlock","qrCodeImageBlockReceive","blockHashReceive","blockTypeSelected","representativeModel","representativeListMatch","representativeFromOverview","repLabel","label","repVotingWeight","percent","repDonationAddress","knownRepresentative","getRepresentative","onRefreshButtonClick","manualRefreshAllowed","isReceivableBlockUpdateRelevant","isRelevant","sourceHashToFind","sourceHash","alreadyInReceivableBlocks","some","knownReceivableBlock","hasBeenReceived","destinationHashToFind","destinationHash","alreadyInAccountHistory","knownAccountHistoryBlock","isRelevantUpdate","loadAccountDetailsThrottled","setItem","JSON","stringify","post","action","toPromise","autoRefreshReasonBlockUpdate","instantAutoRefreshAllowed","loadingAccountDetails","shouldQueueAutoRefresh","loadAccountDetailsDelayed","enableManualRefreshDelayed","delayMS","timeoutIdAllowingManualRefresh","clearTimeout","enableInstantAutoRefreshDelayed","timeoutIdAllowingInstantAutoRefresh","timeoutIdQueuedAutoRefresh","isUpdateStillRelevant","enableRefreshesEventually","onAccountDetailsLoadStart","onAccountDetailsLoadDone","generateReceiveQR","known","address","getAccountName","getWalletAccount","accountInfo","error","pendingBalance","loadingIncomingTxList","minimumReceive","minAmount","mnanoToRaw","pendingLimitSorted","toString","pendingSorted","blocks","block","hasOwnProperty","transaction","source","mod","local_timestamp","local_date_string","local_time_string","addressBookName","getAccountLabel","loading","received","isReceivable","plus","pendingRaw","reduce","prev","balanceRaw","getAccountHistory","defaultLabel","index","ngOnDestroy","unsubscribe","qrCode","toDataURL","errorCorrectionLevel","scale","updateTodayYesterdayDateStrings","unixTimeNow","Date","now","dateStringToday","dateStringYesterday","resetPage","pageSize","loadingTxList","history","additionalBlocksInfo","accountConfirmationHeight","confirmation_height","parseInt","Array","isArray","map","h","type","subtype","link","link_as_account","getPublicAccountID","hex","toUint8","height","confirmed","blocksInfo","b","matchingBlock","accountHistoryBlock","blockData","block_account","loadMore","maxPageSize","saveAddressBook","replace","deleteAddress","regexp","RegExp","test","sendError","accountIdWithSameName","getAccountIdByName","currentBalanceTracking","getBalanceTrackingById","currentTransactionTracking","getTransactionTrackingById","saveAddress","message","searchRepresentatives","showRepresentatives","matches","toLowerCase","indexOf","item","pos","self","array","findWithAttr","slice","representativeResults$","selectRepresentative","validateRepresentative","copied","removeNotification","syncFiatPrice","validateAmount","getAmountBaseValue","lte","precision","fiatAmount","floor","div","syncNanoPrice","string","isNumeric","nanoVal","rawToNano","nanoAmount","getAmountValueFromBase","nanoToRaw","searchAddressBook","showAddressBook","addressBookResults$","selectBookEntry","validateDestination","addressBookMatch","frontier","isValidNanoAmount","amountStatus","setMaxAmount","maxAmount","knanoToRaw","rawToKnano","showMobileMenuForTransaction","mobileTransactionData","show","onReceiveFundsPress","receivableTransaction","receiveReceivableBlock","receivableBlock","sourceBlock","isLocked","wasUnlocked","requestWalletUnlock","createdReceiveBlockHash","generateReceive","isLedgerWallet","clearPendingBlocks","generateSend","isValid","from","to","balanceBN","lessThan","minus","remaining","remainingDecimal","defaultRepresentative","getRandomRepresentative","previous","getAccountPublicKey","hashBlock","previousBlockInfo","blockInfo","jsonBlock","parse","contents","blockDataPrevious","signature","pendingHash","toAcct","openEquiv","previousBlock","zeroHash","srcBlockInfo","srcAmount","newBalance","newBalanceDecimal","qrData","generateChange","balanceDecimal","showRemote","state","showRemoteModal","openQR","reference","qrResult","then","data","content","resetRaw","decls","vars","consts","template","_r10","_r22","Subject","timer","debounce","LedgerStatus","_r19","ctx_r24","ctx_r27","ctx_r11","ctx_r31","ctx_r34","$event","ctx_r37","ctx_r39","AccountsComponent","notificationService","representatives","isSingleKeyWallet","accountsChanged$","pipe","reloadRepWarning$","detectChangeableReps","sortAccounts","createAccount","status","READY","accountIndex","viewAdvanced","newAccountIndex","existingAccount","newAccount","addWalletAccount","sort","navigateToAccount","isSmallViewport","deleteAccount","removeWalletAccount","showLedgerAddress","getLedgerAccount","ctx_r8","ctx_r10","ctx_r22","_r20","_r27","ctx_r32","ctx_r35","t_r1","ctx_r40","ctx_r45","ctx_r50","ctx_r61","ctx_r62","ctx_r64","AddressBookComponent","addressBookService","appSettings","addressBook$","fiatPrice","refreshSub","refresh$","shouldRefresh","loadingBalances","trackBalance","totalTrackedBalance","totalTrackedBalanceRaw","totalTrackedBalanceFiat","totalTrackedPending","updateTrackedBalances","ngAfterViewInit","getElementById","element","elements","children","result","call","datas","el","dataset","setAddressBookOrder","sleep","ms","Promise","resolve","refresh","statsRefreshEnabled","timeoutIdAllowingRefresh","numberOfTrackedBalance","accountIDsWallet","accountIDs","includes","apiAccounts","accountsBalances","accountsPendingLimitSorted","accountsPendingSorted","balanceAccount","balances","targetAccount","accountPending","updatingBalance","addEntry","previousAddressName","newTrackBalance","newTrackTransactions","creatingNewEntry","activePanel","editEntry","newAddressAccount","newAddressName","focus","saveNewAddress","nameExists","valid","wasTransactionTracked","untrackAddress","cancelNewAddress","toBinary","codeUnits","Uint16Array","i","charCodeAt","String","fromCharCode","Uint8Array","buffer","exportAddressBook","exportData","base64Data","btoa","exportUrl","addressBookQRExportUrl","addressBookShowFileExport","addressBookShowQRExport","addressBookQRExportImg","exportAddressBookToFile","fileName","triggerFileDownload","importFromFile","files","file","reader","FileReader","onload","fileData","importData","encoded","readAsText","blob","Blob","iOS","navigator","platform","elem","createElement","objUrl","URL","createObjectURL","href","download","appendChild","click","removeChild","revokeObjectURL","AiComponent","ngOnChanges","isIFrame","input","tagName","receiveMessage","bind","origin","purchasePrompt","destinationID","newHash","iframe","contentWindow","postMessage","ctx_r33","_r35","ChangeRepWidgetComponent","blockService","changeableReps","updateChangeableRepresentatives","updateDisplayedRepresentatives","initialLoadComplete","acc","newWallet$","shouldReload","resetRepresentatives","newOpenBlock$","getRepresentativesOverview","changeableReps$","changeableRepresentatives","showRepChangeRequired","changeRequired","updateSelectedAccountHasRep","displayedRepresentatives","getDisplayedRepresentatives","includeRepRequiringChange","displayedReps","repRequiringChange","delegatedWeight","changeableRep","every","displayedRep","Object","assign","selectedAccountHasRep","selectedAccountRep","displayedRepsAllAccounts","sortedRepresentatives","showRepSelectionForSpecificRep","clickedRep","showRepHelp","accountsToChangeRepFor","join","hideOverview","showRecommended","showRepSelectionForAllChangeableReps","allAccounts","_r1","ctx_r48","ctx_r67","ctx_r72","ctx_r73","ctx_r75","ctx_r77","ctx_r81","ctx_r82","ctx_r83","ctx_r84","ConfigureAppComponent","pow","getAvailableLangs","languages","denominations","storageOptions","currencies","nightModeOptions","identiconOptions","minutes","hours","inactivityOptions","powOptions","multiplierOptions","pendingOptions","selectedServer","loadFromSettings","updateNodeStats","serverAPIUpdated","blockCount","nodeBlockCount","Number","count","toLocaleString","nodeUnchecked","unchecked","nodeCemented","cemented","nodeUncemented","quorumData","confirmationQuorum","peersStakeReq","quorum_delta","peersStakeTotal","peers_stake_total","version","nodeVendor","node_vendor","nodeNetwork","network","matchingLanguage","selectedLanguage","matchingCurrency","d","selectedCurrency","nightModeOptionString","matchingNightModeOption","selectedNightModeOption","matchingIdenticonOptions","identiconsStyle","selectedIdenticonOption","matchingStorage","walletStore","selectedStorage","matchingInactivityMinutes","selectedInactivityMinutes","matchingPowOption","powSource","selectedPoWOption","matchingMultiplierOption","multiplierSource","selectedMultiplierOption","customWorkServer","matchingPendingOption","selectedPendingOption","serverOptions","serverName","serverWS","serverAuth","updateDisplaySettings","newCurrency","reloadFiat","updateWalletSettings","hideAlert","newStorage","resaveWallet","confirm","newPoW","newMultiplier","minReceive","reloadPending","hasWebGLSupport","hasWorkerSupport","cancelAllPow","clearWorkCache","newSettings","setAppSettings","updateServerAndWalletSettings","updateServerSettings","forceReconnect","serverConfigChange","newServer","custom","c","ws","auth","shouldRandom","getRemotePoWOptionName","optionName","selectedServerOption","clearCache","clearWalletData","resetWallet","removeWalletData","clearAllData","deleteCache","clearAddressBook","clearAppSettings","resetRepresentativeList","bip39","ctx_r15","ctx_r17","ctx_r19","ctx_r21","ctx_r23","ctx_r25","ctx_r28","ctx_r30","ctx_r53","ctx_r55","ctx_r63","ctx_r65","ctx_r68","ctx_r78","ctx_r80","ctx_r86","ctx_r88","ctx_r90","ctx_r94","ctx_r96","ctx_r98","ctx_r100","ctx_r109","ctx_r113","ctx_r118","ctx_r120","panels","INDEX_MAX","ConfigureWalletComponent","ledgerService","landing","getCurrentNavigation","extras","seed","import","importSeedModel","isNewWallet","importPrivateKeyModel","selectedImportOption","exampleSeedBytes","generateSeedBytes","exampleSeedFull","fromUint8","exampleSeedTrimmed","trimIdx","match","exampleSeed","examplePrivateKey","exampleExpandedPrivateKey","exampleMnemonicWords","entropyToMnemonic","split","importExistingWallet","createWalletFromSeed","importSeed","storePassword","informNewWallet","importSingleKeyWallet","createWalletFromSingleKey","keyString","isExpanded","connectLedgerByBluetooth","enableBluetoothMode","importLedgerWallet","connectLedgerByUsb","refreshOnly","confirmWalletOverwrite","loadLedger","NOT_CONNECTED","resetLedger","LOCKED","newWallet","createLedgerWallet","msg","setPasswordInit","existingSeed","isValidSeed","mnemonic","importSeedMnemonicModel","words","newSeed","mnemonicToEntropy","importExpandedKeyModel","substring","validateMnemonic","importSeedBip39MnemonicModel","validIndex","bip39Seed","importSeedBip39MnemonicPasswordModel","mnemonicToSeedSync","importSeedBip39MnemonicIndexModel","privateKey","createNewWallet","seedBytes","newWalletSeed","newWalletMnemonic","lines","newWalletMnemonicLines","backup","confirmNewSeed","saveNewWallet","saveWalletPassword","walletPasswordConfirmModel","walletPasswordModel","newPassword","setPanel","panel","copiedNewWalletSeed","copiedNewWalletMnemonic","expandedKey","walletEncrypted","accountIndexChange","invalid","isValidIndex","DonateComponent","getAll","callback","close","hidePopup","approve","ctx_r7","ImportAddressBookComponent","queryData","importDataError","hostname","binary","atob","originalString","fromBinary","importBlob","validImportData","originalName","originalTrackBalance","originalTrackTransactions","newEntries","existingEntries","conflictingEntries","bytes","confirmImport","importedCount","CryptoJS","ctx_r6","ImportWalletComponent","decodedData","decryptWallet","walletType","secret","decryptedBytes","AES","decrypt","walletPassword","decryptedSecret","enc","Utf8","loadImportedWallet","accountsIndex","indexes","ctx_r4","ctx_r13","ManageRepresentativesComponent","representatives$","online","onlineReps","getOnlineRepresentatives","previousRepName","newRepAccount","newRepName","newRepTrusted","trusted","newRepWarn","saveNewRepresentative","saveRepresentative","cancelNewRep","representativesOnline","deleteRepresentative","bip","ctx_r16","_r29","_r26","ctx_r51","ManageWalletComponent","transactionHistoryLimit","orderOptions","selAccountInit","csvAccount","changePassword","confirmPassword","showQRExport","exportWallet","generateExportUrl","QRExportUrl","QRExportImg","seedMnemonic","csvFile","processRow","row","finalVal","j","entries","innerValue","exportToFile","generateExportData","csvCountChange","invalidCsvCount","beyondCsvLimit","csvOffsetChange","offset","invalidCsvOffset","csvInit","csvExportStarted","exportToCsv","exportEnabled","exportingCsv","transactionCount","csvCount","transactionOffset","csvOffset","selectedOrder","csvData","ctx_r9","MultisigComponent","remoteSignService","musigService","setFocus","showAddBox","_el","addAccount","accountAddStatus","storedAccounts","accountAdd","toLocaleLowerCase","createdMultisig","removeSelectedAccount","splice","generateMultisig","runAggregate","_a","multisig","reset","validateAccountAdd","validateMultisig","multisigAccount","multisigAccountStatus","validateUnsigned","unsignedStatus","url","checkSignBlock","navigateAccount","navigateBlock","badScheme","protocol","navigateSignBlock","navigateProcessBlock","QrGeneratorComponent","generateQR","width","Math","min","max","round","log2","ctx_r38","ctx_r58","ctx_r71","_r74","ctx_r93","ctx_r97","ctx_r114","ctx_r117","prompt_r105","ctx_r124","ctx_r104","ctx_r126","ctx_r131","ReceiveComponent","merchantModeModal","pendingAccountModel","onSelectedAccountChange","updatePendingBlocks","latest","newTransactions$","getValue","qrAccount","gte","qrAmount","showQrConfirmation","resetAmount","inMerchantModeQR","onMerchantModeReceiveTransaction","pendingBlock","destination","destinationAddressBookName","localeCompare","filterPendingBlocksForDestinationAccount","selectedAccountID","pendingBlocksForSelectedAccount","getPending","nanoAmountChange","validateNanoAmount","amountNano","changeQRAmount","toFixed","validateFiatAmount","fiatAmountChange","rawRounded","validNano","validFiat","selectedAccountAddressBookName","changeQRAccount","raw","isValidAmount","qrSuccessClass","Error","removePendingBlock","copiedAccountAddress","timeoutIdClearingRecentlyCopiedState","recentlyCopiedAccountAddress","toBigNumber","unsetSelectedAccount","getRawAmountWithoutTinyRaws","rawAmountWithTinyRaws","tinyRaws","merchantModeResetState","inMerchantModePaymentComplete","merchantModeEnable","inMerchantMode","merchantModeDisable","merchantModeShowQR","isRequestingAnyAmount","merchantModeRawRequestedTotal","merchantModeRawRequestedQR","merchantModeSeenBlockHashes","seenHashes","merchantModeTransactionHashes","merchantModeHideQR","receivedAmountWithTinyRaws","receivedAmount","requestedAmount","eq","merchantModeMarkCompleteWithAmount","transactionPrompt","moreThanRequested","gt","lessThanRequested","lt","amountHiddenRaw","transactionHash","merchantModePrompts","merchantModeSubtractAmountFromPrompt","prompt","promptIdx","subtractedRawWithTinyRaws","subtractedRaw","newAmountRaw","merchantModeMarkCompleteFromPrompt","merchantModeDiscardPrompt","merchantModeRawReceivedTotal","merchantModeRawReceivedTotalHiddenRaw","_r6","_r12","ctx_r3","RemoteSigningComponent","validateSigned","signedStatus","checkProcessBlock","start","ctx_r43","ctx_r69","ctx_r70","RepresentativesComponent","representativeService","showRecommendedReps","selectedAccounts","newAccountID","loadingRepresentatives","repOverview","representativeOverview","o","fullAccounts","loadRecommendedReps","addSelectedAccounts","repInput","scrollIntoView","behavior","changeAccountID","allExists","toRepresentativeID","recommendedRepsLoading","scores","recommended","totalSupply","nanoWeight","weight","recommendedReps","calculatePage","previousReps","currentRepPage","nextReps","repsPerPage","recommendedRepsPaginated","selectRecommendedRep","selectedRecommendedRep","rep_address","changeRepresentatives","newRep","changingRepresentatives","accountsToChange","accountsNeedingChange","changed","useCachedReps","SearchComponent","ctx_r29","ctx_r42","ctx_r52","ctx_r54","ctx_r56","nacl","SendComponent","nodeApi","updateQueries","fromAccountID","findFirstAccount","queries","amountAsRaw","amountExtraRaw","sendDestinationType","isZero","accountIDWithBalance","capitalizeFirstLetter","charAt","github","setSendDestinationType","newType","getDestinationID","toOwnAccountID","sendTransaction","preparingTransaction","fromAddressBook","confirmTransaction","confirmingTransaction","alert","TxType","bip39Wallet","hermes","ctx_r60","ctx_r66","ctx_r41","ctx_r95","ctx_r99","ctx_r101","ctx_r103","ctx_r105","ctx_r112","ctx_r116","ctx_r2","ctx_r122","navSource","SignComponent","routerService","signTypes","thresholds","selectedThreshold","remote","getMultisigLink","signTypeSelected","remoteTabInit","tabMode","tabChecked","participants","tabListener","multiSign","tabData","shouldGetFromAccount","currentBlock","n_account","n_previous","n_representative","n_balance","n_link","n_signature","n_work","paramsString","p_account","p_previous","p_representative","p_balance","p_link","p_signature","shouldSign","shouldGenWork","work","participantChange","navigationSource","verifyBlock","txType","txTypeMessage","fromAccountBalance","toAccountBalance","nullBlock","change","receive","prepareTransaction","open","hashStateBlock","recipientInfo","removeSelectedData","inputMultisigData","savedParticipants","isInputAddDisabled","cancel","verifyBlockHash","previousHash","signTypeChange","signatureMessage","signatureMessageSuccess","signatureAccount","seedChange","sourceSecret","privkeyChange","sourcePriv","privkeyChangeMulti","multisigLink","setURLParams","powChange","prepareWork","changeThreshold","selectedThresholdOld","workBlock","removeFromCache","addWorkToCache","repAddressBook","isLedger","validSeed","validPrivkey","keyPair","secretKey","expanded","privateKeyExpanded","signOfflineBlock","isValidSignature","workExists","tempWork","getWork","resetMultisig","finalSignature","clean","confirmBlock","processResponse","process","processedHash","obj","propName","undefined","keyType","checkMasterKey","verifyKey","privKey","convertPrivateKey","pubKey","generateAccountKeyPair","publicKey","indexChange","privKey1","privKey2","generateAccountSecretKeyBytes","generate","pubKey1","pubKey2","address1","address2","isHex","generateOutputQR","outputMultisigData","qrCodeImageOutput","pushState","replaceState","runMultiTabs","tabCount","off","checkTabs","activate","tabListenerActive","stepData","activeStep","inputAdd","inputAddChange","validParticipants","validInputAdd","resetMusig","tabModeCheck","hashString","hashFull","step","correctStep","addMultisigInputData","copyUrl","dummy","setAttribute","select","success","execCommand","startMultisig","runMultiSign","stage","output","outbuf","subarray","derivePublicKey","_r7","SocialComponent","SWEEP_MAX_INDEX","SWEEP_MAX_PENDING","SweeperComponent","myAccountModel","sourceWallet","setDestination","destinationAccount","customAccountSelected","destinationChange","setMin","startIndex","validEndIndex","endIndex","setMax","validStartIndex","setMaxIncoming","maxIncoming","checkAddress","validDestination","startIndexChange","checkIndex","endIndexChange","maxIncomingChange","validMaxIncoming","checkSeed","appendLog","linebreak","logArea","scrollHeight","processSend","sendCallback","deriveAddress","useNanoPrefix","createBlock","nanoAmountSent","totalSwept","big","add","adjustedBalance","processPending","keys","keyCount","workInputHash","subType","pendingCallback","sweeping","createPendingBlocks","accountCallback","pendingLimit","XNO","processAccount","validResponse","previous_","processIndexRecursive","privKeys","sweepContinue","deriveSecretKey","k","sweep","TransactionDetailsComponent","loadTransaction","transactionJSON","isUnconfirmedBlock","blockHeight","showBlockData","legacyFromAccount","blockType","successorHash","hashID","loadingBlock","hashData","hashContents","HASH_ONLY_ZEROES","isOpen","prevRes","prevData","source_account","prevBalance","curBalance","balDifference","isNegative","isStateBlock","successor","getBalanceFromHex","getBalanceFromDec","WalletWidgetComponent","powService","onModalHidden","ledgerStatus$","ledgerStatus","powAlert$","shouldAlert","powAlert","unlockModalRequested$","wasRequested","showModal","unlockPassword","reloadLedger","allowUnlock","mayAttemptUnlock","timeoutIdAllowingUnlock","focusInputElement","passwordInput","unlockWallet","unlocked","cancelPow","AddressBookService","addressBookStore","storeKey","newAddressBook","existingName","findIndex","existingAccountIndex","addressList","factory","HttpHeaders","ApiService","request","skipError","validateResponse","apiUrl","setOffline","setLoading","options","responseType","headers","set","res","isValidResponse","isValidationFailure","reason","setOnline","catch","loadServerSettings","accountsFrontiers","accountsPending","include_only_confirmed","accountsPendingLimit","threshold","sorting","delegatorsCount","hashes","include_cemented","workGenerate","difficulty","workServer","watch_work","reverse","Nano","TransportU2F","TransportUSB","TransportHID","TransportBLE","STATUS_CODES","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INVALID_SIGNATURE","CACHE_MISS","zeroBlock","LedgerService","transport","isDesktop","configureDesktop","checkBrowserSupport","statusText","desktopMessage$","supportsUSB","all","isSupported","supported","supportsU2F","supportsWebHID","supportsWebUSB","supportsBluetooth","detectUsbTransport","isWindows","transportMode","DynamicTransport","enabled","getDesktopResponse","eventType","filterFn","reject","sub","response","shouldSkip","errorMessage","getLedgerAccountDesktop","showOnScreen","queryingDesktopLedger","details","updateCacheDesktop","cacheData","signBlockDesktop","loadTransport","create","trans","setExchangeTimeout","waitTimeout","hideNotifications","bluetooth","newStatus","resolved","ledgerConfig","getAppConfiguration","accountDetails","pollingLedger","pollLedgerStatus","statusCode","updateCache","blockResponse","cacheBlock","ledgerPath","updateCacheOffline","signBlock","walletPrefix","getLedgerAccountWeb","normalTimeout","getAddress","checkLedgerStatus","pollInterval","NanoBlockService","representativeAccount","ledgerBlock","sendLedgerNotification","sig","clearLedgerNotification","sendLedgerDeniedNotification","validateAccount","signStateBlock","recipient","newBalancePadded","informNewRep","prevBlock","genWork","multiplier","hashBytes","signed","detached","representativeAccounts","random","NinjaService","get","ninjaUrl","randomizeByScore","replist","newlist","shuffle","unshift","getSuggestedRep","getAccount","REQUEST_TIMEOUT_MS","successPromise","timeoutPromise","race","Worker","baseThreshold","hardwareConcurrency","workerCount","workerList","workState","PowService","determineBestPoWMethod","getPow","existingPoW","PoWPool","p","promise","addQueueItem","queueItem","getDeferredPromise","processQueue","webGLTested","webGLAvailable","canvas","webGL","getContext","parallelQueue","processingQueueItem","processNextQueueItem","localMultiplier","serverWork","getHashServer","getHashCPUWorker","getHashWebGL","allowLocalMulti","knownApiEndpoints","endpointUrl","customWork","proWork","currentProcessTime","shift","shouldContinueQueue","newThreshold","difficultyFromMultiplier","serverString","getHashCPUSync","PoW","cwrap","checkPowProcessLength","cpuWorkerResolve","cpuWorkerReject","worker","workerIndex","workThreshold","onmessage","workerwork","terminateCpuWorkers","n","shouldAbortGpuPow","cancelled","defer","powAlertLimit","notify","successful","prototype","terminate","PriceService","lastPriceBTC","loadSavedPrice","currency","quote","market_data","current_price","currencyPrice","btcPrice","btc","savePrice","priceData","BaseApiAccount","RepresentativeService","defaultRepresentatives","cachedReps","needsChange","highWeight","veryHighWeight","lowUptime","veryLowUptime","getAccountsDetails","uniqueReps","getUniqueRepresentatives","getRepresentativesDetails","quorum","online_stake_total","onlineStakeTotal","allReps","repOnline","knownRep","knownRepNinja","closing","markedToAvoid","markedAsNF","daysSinceLastVoted","uptime","score","nf","nfReps","bad","uptimeIntervalDays","uptimeIntervalValue","uptime_over","week","day","msSinceLastVoted","lastVoted","getTime","additionalData","donation","fullRep","walletReps","existingRep","repInfos","loaded","list","representativeStore","newRepList","newRepresentative","existingRepresentative","r","saveRepresentatives","existingIndex","weightedReps","WalletService","noZerosPipe","hasPending","balanceInitialized","locked$","shouldNotify","walletAccountIDs","processStateBlock","trackedAmount","trackedHashes","addressLink","accountHrefLink","accountHref","reloadAddressBook","txAmount","aboveMinimumReceive","isNewBlock","addPendingBlock","processPendingBlocks","walletData","walletJson","newAccounts","loadWalletAccount","createSingleKeyAccount","subscribeAccounts","encrypt","encryptedSeed","decryptedSeed","scanAccounts","usedIndices","NAULT_ACCOUNTS_LIMIT","ACCOUNTS_PER_API_REQUEST","batchesCount","batchIdx","batchAccounts","batchAccountsArray","accountAddress","accountPublicKey","accountBytes","accountKeyPair","uint8","toHex","batchResponse","frontiers","frontierIsValidHash","createLedgerAccount","nanoAccountID","receivePow","createKeyedAccount","accountName","createSeedAccount","unsubscribeAccounts","resetBalances","walletBalance","walletPendingInclUnconfirmed","walletPendingAboveThresholdConfirmed","accountBalancePendingInclUnconfirmed","walletAccountFrontier","walletAccountFrontierIsValidHash","informBalanceRefresh","walletAccountIndex","successfulBlocks","existingHash","sortByAmount","x","y","comparedTo","processingPending","nextBlock","receiveAmount","transform","generateWalletExport","subscriptionForUnlock","subscriptionForCancel","removeSubscriptions","WorkPoolService","workCache","cachedIndex","saveWorkCache","currentlyProcessingHashes","cached","validateWork","cacheLength","uniqByKeepLast","it","workCacheStore","Map","values"],"sourceRoot":"webpack:///"}